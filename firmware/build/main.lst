ARM GAS  /tmp/cceQoDuR.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB55:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** #include "main.h"
   2:Core/Src/main.c **** #include "led.h"
   3:Core/Src/main.c **** #include "usb_device.h"
   4:Core/Src/main.c **** 
   5:Core/Src/main.c **** ADC_HandleTypeDef hadc;
   6:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc;
   7:Core/Src/main.c **** 
   8:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
   9:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c1_rx;
  10:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c1_tx;
  11:Core/Src/main.c **** 
  12:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  13:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_rx;
  14:Core/Src/main.c **** 
  15:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  16:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  17:Core/Src/main.c **** 
  18:Core/Src/main.c **** void SystemClock_Config(void);
  19:Core/Src/main.c **** static void MX_GPIO_Init(void);
  20:Core/Src/main.c **** static void MX_DMA_Init(void);
  21:Core/Src/main.c **** static void MX_SPI1_Init(void);
  22:Core/Src/main.c **** //static void MX_USB_PCD_Init(void);
  23:Core/Src/main.c **** static void MX_I2C1_Init(void);
  24:Core/Src/main.c **** static void MX_TIM1_Init(void);
  25:Core/Src/main.c **** static void MX_ADC_Init(void);
  26:Core/Src/main.c **** static void MX_TIM2_Init(void);
  27:Core/Src/main.c **** void temp_timer(void);
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** extern uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len);
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** float MAX31855_get_tcold(int32_t data);
  32:Core/Src/main.c **** float MAX31855_get_twarm(int32_t data);
  33:Core/Src/main.c **** 
ARM GAS  /tmp/cceQoDuR.s 			page 2


  34:Core/Src/main.c **** static uint32_t adc[6];
  35:Core/Src/main.c **** char tsv_str[96];
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** static uint32_t spidat;
  38:Core/Src/main.c **** float temp_int;
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** int main(void)
  41:Core/Src/main.c **** {
  42:Core/Src/main.c ****   HAL_Init();
  43:Core/Src/main.c ****   SystemClock_Config();
  44:Core/Src/main.c ****   MX_GPIO_Init();
  45:Core/Src/main.c ****   MX_DMA_Init();
  46:Core/Src/main.c ****   MX_SPI1_Init();
  47:Core/Src/main.c ****   //MX_USB_PCD_Init();
  48:Core/Src/main.c ****   MX_I2C1_Init();
  49:Core/Src/main.c ****   MX_TIM1_Init();
  50:Core/Src/main.c ****   MX_ADC_Init();
  51:Core/Src/main.c ****   MX_TIM2_Init();
  52:Core/Src/main.c ****   MX_USB_DEVICE_Init();
  53:Core/Src/main.c **** 
  54:Core/Src/main.c ****   //MX_USB_HID_INIT();
  55:Core/Src/main.c **** 
  56:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc, adc, 6);
  57:Core/Src/main.c ****   //HAL_TIM_Base_Start_IT(&htim1);
  58:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
  59:Core/Src/main.c ****   //GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin
  60:Core/Src/main.c **** 
  61:Core/Src/main.c ****   led_set(STATUS, STATE_OFF);
  62:Core/Src/main.c ****   //led_set(LED0, STATE_OFF);
  63:Core/Src/main.c ****   //led_set(LED1, STATE_OFF);
  64:Core/Src/main.c ****   //led_set(LED2, STATE_OFF);
  65:Core/Src/main.c ****   led_set(LED3, STATE_OFF);
  66:Core/Src/main.c ****   led_set(LED3, STATE_GREEN);
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   while (1)
  69:Core/Src/main.c ****   {
  70:Core/Src/main.c ****     HAL_Delay(10);
  71:Core/Src/main.c ****     led_set(STATUS, STATE_OFF);
  72:Core/Src/main.c ****   }
  73:Core/Src/main.c **** }
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** float MAX31855_get_tcold(int32_t data){
  76:Core/Src/main.c ****   ///int16_t tint;
  77:Core/Src/main.c ****   ///tint = (data >> 4) & 4095;
  78:Core/Src/main.c ****   ///tint = (tint & 0b1000011111111111) | (((tint >> 11) & 1) << 15);
  79:Core/Src/main.c ****   data >>= 4;
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   // pull the bottom 11 bits off
  82:Core/Src/main.c ****   float internal = data & 0x7FF;
  83:Core/Src/main.c ****   // check sign bit!
  84:Core/Src/main.c ****   if (data & 0x800) {
  85:Core/Src/main.c ****     // Convert to negative value by extending sign and casting to signed type.
  86:Core/Src/main.c ****     int16_t tmp = 0xF800 | (data & 0x7FF);
  87:Core/Src/main.c ****     internal = tmp;
  88:Core/Src/main.c ****   }
  89:Core/Src/main.c ****   internal *= 0.0625; // LSB = 0.0625 degrees
  90:Core/Src/main.c ****   return internal;
ARM GAS  /tmp/cceQoDuR.s 			page 3


  91:Core/Src/main.c **** }
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** float MAX31855_get_twarm(int32_t data){
  95:Core/Src/main.c ****   if (data & 0x80000000) {
  96:Core/Src/main.c ****     data = 0xFFFFC000 | ((data >> 18) & 0x00003FFF);
  97:Core/Src/main.c ****   } else {
  98:Core/Src/main.c ****     data >>= 18;
  99:Core/Src/main.c ****   }
 100:Core/Src/main.c ****   double cent = data * 0.25; //does not work with float, wtf // LSB = 0.25 degrees
 101:Core/Src/main.c ****   return (float)cent;
 102:Core/Src/main.c **** }
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** 
 105:Core/Src/main.c **** void temp_timer(){
 106:Core/Src/main.c ****   led_set(STATUS, STATE_GREEN);
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   spidat = __builtin_bswap32(spidat);
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   memset(tsv_str, 0, sizeof tsv_str);
 111:Core/Src/main.c ****   sprintf(tsv_str, "%lu\t%lu\t%lu\t%lu\t%lu\t%.2f\t%.4f\n\r", adc[0],adc[2],adc[3],adc[4],adc[5],MA
 112:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin, GPIO_PIN_RESET);
 115:Core/Src/main.c ****   HAL_SPI_Receive_DMA(&hspi1, (uint8_t *) &spidat, sizeof spidat);
 116:Core/Src/main.c **** }
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef * hspi){
 119:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin, GPIO_PIN_SET);
 120:Core/Src/main.c **** }
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** void SystemClock_Config(void)
 123:Core/Src/main.c **** {
 124:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 126:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14
 129:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 136:Core/Src/main.c ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1);
 147:Core/Src/main.c **** 
ARM GAS  /tmp/cceQoDuR.s 			page 4


 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_I2C1;
 150:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 151:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** static void MX_ADC_Init(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   hadc.Instance = ADC1;
 163:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 164:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 165:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 166:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 167:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 168:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 169:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 170:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 171:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 172:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;//ADC_SOFTWARE_START
 173:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 174:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 175:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 176:Core/Src/main.c ****   HAL_ADC_Init(&hadc);
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 179:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 180:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 181:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 182:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 183:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 184:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 185:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 186:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 187:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 188:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_8;
 189:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 190:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 191:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 192:Core/Src/main.c **** }
 193:Core/Src/main.c **** 
 194:Core/Src/main.c **** static void MX_I2C1_Init(void)
 195:Core/Src/main.c **** {
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 198:Core/Src/main.c ****   hi2c1.Init.Timing = 0x0000020B;
 199:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 84;
 200:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 201:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 202:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 203:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 204:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
ARM GAS  /tmp/cceQoDuR.s 			page 5


 205:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 206:Core/Src/main.c ****   HAL_I2C_Init(&hi2c1);
 207:Core/Src/main.c **** 
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE);
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0);
 215:Core/Src/main.c **** 
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** }
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** static void MX_SPI1_Init(void)
 220:Core/Src/main.c **** {
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   hspi1.Instance = SPI1;
 223:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 224:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 225:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 226:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 227:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 228:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 229:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 230:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 231:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 232:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 233:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 234:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 235:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 236:Core/Src/main.c ****   HAL_SPI_Init(&hspi1);
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** }
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** static void MX_TIM1_Init(void)
 242:Core/Src/main.c **** {
 243:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 244:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 245:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 246:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 247:Core/Src/main.c **** 
 248:Core/Src/main.c ****   htim1.Instance = TIM1;
 249:Core/Src/main.c ****   htim1.Init.Prescaler = 16;
 250:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 251:Core/Src/main.c ****   htim1.Init.Period = 1024;
 252:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 253:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 254:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 255:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim1);
 256:Core/Src/main.c **** 
 257:Core/Src/main.c **** 
 258:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 259:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** 
ARM GAS  /tmp/cceQoDuR.s 			page 6


 262:Core/Src/main.c ****   HAL_TIM_OC_Init(&htim1);
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 266:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 267:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 271:Core/Src/main.c ****   sConfigOC.Pulse = 100;
 272:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 273:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 274:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 275:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 276:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 277:Core/Src/main.c ****   HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1);
 278:Core/Src/main.c **** 
 279:Core/Src/main.c **** 
 280:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 281:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 282:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 283:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 284:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 285:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 286:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 287:Core/Src/main.c ****   HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig);
 288:Core/Src/main.c **** 
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** }
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** static void MX_TIM2_Init(void)
 293:Core/Src/main.c **** {
 294:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 295:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   htim2.Instance = TIM2;
 298:Core/Src/main.c ****   htim2.Init.Prescaler = 9999;
 299:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 300:Core/Src/main.c ****   htim2.Init.Period = 960-1;
 301:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 302:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 303:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim2);
 304:Core/Src/main.c **** 
 305:Core/Src/main.c **** 
 306:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 307:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 308:Core/Src/main.c **** 
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 311:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 312:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 313:Core/Src/main.c **** 
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** }
 316:Core/Src/main.c **** /*
 317:Core/Src/main.c **** static void MX_USB_PCD_Init(void)
 318:Core/Src/main.c **** {
ARM GAS  /tmp/cceQoDuR.s 			page 7


 319:Core/Src/main.c ****   hpcd_USB_FS.Instance = USB;
 320:Core/Src/main.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 321:Core/Src/main.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 322:Core/Src/main.c ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 323:Core/Src/main.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 324:Core/Src/main.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 325:Core/Src/main.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 326:Core/Src/main.c ****   HAL_PCD_Init(&hpcd_USB_FS);
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** 
 329:Core/Src/main.c **** }*/
 330:Core/Src/main.c **** 
 331:Core/Src/main.c **** static void MX_DMA_Init(void)
 332:Core/Src/main.c **** {
 333:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 334:Core/Src/main.c **** 
 335:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 336:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 337:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 338:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 339:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel4_5_6_7_IRQn, 0, 0);
 340:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_5_6_7_IRQn);
 341:Core/Src/main.c **** 
 342:Core/Src/main.c **** }
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** static void MX_GPIO_Init(void)
 345:Core/Src/main.c **** {
  26              		.loc 1 345 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 D646     		mov	lr, r10
  39 0004 4F46     		mov	r7, r9
  40 0006 4646     		mov	r6, r8
  41 0008 C0B5     		push	{r6, r7, lr}
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
  44              		.cfi_offset 8, -32
  45              		.cfi_offset 9, -28
  46              		.cfi_offset 10, -24
  47 000a 8AB0     		sub	sp, sp, #40
  48              	.LCFI2:
  49              		.cfi_def_cfa_offset 72
 346:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  50              		.loc 1 346 3 view .LVU1
  51              		.loc 1 346 20 is_stmt 0 view .LVU2
  52 000c 1422     		movs	r2, #20
  53 000e 0021     		movs	r1, #0
  54 0010 05A8     		add	r0, sp, #20
ARM GAS  /tmp/cceQoDuR.s 			page 8


  55 0012 FFF7FEFF 		bl	memset
  56              	.LVL0:
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  57              		.loc 1 348 3 is_stmt 1 view .LVU3
  58              	.LBB4:
  59              		.loc 1 348 3 view .LVU4
  60              		.loc 1 348 3 view .LVU5
  61 0016 3B4B     		ldr	r3, .L2
  62 0018 5969     		ldr	r1, [r3, #20]
  63 001a 8020     		movs	r0, #128
  64 001c 0003     		lsls	r0, r0, #12
  65 001e 0143     		orrs	r1, r0
  66 0020 5961     		str	r1, [r3, #20]
  67              		.loc 1 348 3 view .LVU6
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 0240     		ands	r2, r0
  70 0026 0192     		str	r2, [sp, #4]
  71              		.loc 1 348 3 view .LVU7
  72 0028 019A     		ldr	r2, [sp, #4]
  73              	.LBE4:
  74              		.loc 1 348 3 view .LVU8
 349:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  75              		.loc 1 349 3 view .LVU9
  76              	.LBB5:
  77              		.loc 1 349 3 view .LVU10
  78              		.loc 1 349 3 view .LVU11
  79 002a 5969     		ldr	r1, [r3, #20]
  80 002c 8020     		movs	r0, #128
  81 002e C003     		lsls	r0, r0, #15
  82 0030 0143     		orrs	r1, r0
  83 0032 5961     		str	r1, [r3, #20]
  84              		.loc 1 349 3 view .LVU12
  85 0034 5A69     		ldr	r2, [r3, #20]
  86 0036 0240     		ands	r2, r0
  87 0038 0292     		str	r2, [sp, #8]
  88              		.loc 1 349 3 view .LVU13
  89 003a 029A     		ldr	r2, [sp, #8]
  90              	.LBE5:
  91              		.loc 1 349 3 view .LVU14
 350:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  92              		.loc 1 350 3 view .LVU15
  93              	.LBB6:
  94              		.loc 1 350 3 view .LVU16
  95              		.loc 1 350 3 view .LVU17
  96 003c 5969     		ldr	r1, [r3, #20]
  97 003e 8020     		movs	r0, #128
  98 0040 8002     		lsls	r0, r0, #10
  99 0042 0143     		orrs	r1, r0
 100 0044 5961     		str	r1, [r3, #20]
 101              		.loc 1 350 3 view .LVU18
 102 0046 5A69     		ldr	r2, [r3, #20]
 103 0048 0240     		ands	r2, r0
 104 004a 0392     		str	r2, [sp, #12]
 105              		.loc 1 350 3 view .LVU19
 106 004c 039A     		ldr	r2, [sp, #12]
 107              	.LBE6:
ARM GAS  /tmp/cceQoDuR.s 			page 9


 108              		.loc 1 350 3 view .LVU20
 351:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 109              		.loc 1 351 3 view .LVU21
 110              	.LBB7:
 111              		.loc 1 351 3 view .LVU22
 112              		.loc 1 351 3 view .LVU23
 113 004e 5A69     		ldr	r2, [r3, #20]
 114 0050 8021     		movs	r1, #128
 115 0052 C902     		lsls	r1, r1, #11
 116 0054 0A43     		orrs	r2, r1
 117 0056 5A61     		str	r2, [r3, #20]
 118              		.loc 1 351 3 view .LVU24
 119 0058 5B69     		ldr	r3, [r3, #20]
 120 005a 0B40     		ands	r3, r1
 121 005c 0493     		str	r3, [sp, #16]
 122              		.loc 1 351 3 view .LVU25
 123 005e 049B     		ldr	r3, [sp, #16]
 124              	.LBE7:
 125              		.loc 1 351 3 view .LVU26
 352:Core/Src/main.c **** 
 353:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED3_Pin|LED2_Pin|LED1_Pin, GPIO_PIN_RESET);
 126              		.loc 1 353 3 view .LVU27
 127 0060 E024     		movs	r4, #224
 128 0062 2402     		lsls	r4, r4, #8
 129 0064 284B     		ldr	r3, .L2+4
 130 0066 9A46     		mov	r10, r3
 131 0068 0022     		movs	r2, #0
 132 006a 2100     		movs	r1, r4
 133 006c 1800     		movs	r0, r3
 134 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 135              	.LVL1:
 354:Core/Src/main.c **** 
 355:Core/Src/main.c ****   HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
 136              		.loc 1 355 3 view .LVU28
 137 0072 264B     		ldr	r3, .L2+8
 138 0074 9946     		mov	r9, r3
 139 0076 0022     		movs	r2, #0
 140 0078 0121     		movs	r1, #1
 141 007a 1800     		movs	r0, r3
 142 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 143              	.LVL2:
 356:Core/Src/main.c **** 
 357:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin
 144              		.loc 1 357 3 view .LVU29
 145 0080 234B     		ldr	r3, .L2+12
 146 0082 9846     		mov	r8, r3
 147 0084 9026     		movs	r6, #144
 148 0086 F605     		lsls	r6, r6, #23
 149 0088 0022     		movs	r2, #0
 150 008a 1900     		movs	r1, r3
 151 008c 3000     		movs	r0, r6
 152 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL3:
 358:Core/Src/main.c ****                           |LED_STATUS_Pin|OUT_nSLEEP_Pin, GPIO_PIN_RESET);
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, OUT0_Pin|OUT1_Pin|OUT2_Pin, GPIO_PIN_RESET);
 154              		.loc 1 360 3 view .LVU30
ARM GAS  /tmp/cceQoDuR.s 			page 10


 155 0092 204F     		ldr	r7, .L2+16
 156 0094 0022     		movs	r2, #0
 157 0096 E021     		movs	r1, #224
 158 0098 3800     		movs	r0, r7
 159 009a FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL4:
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED3_Pin|LED2_Pin|LED1_Pin;
 161              		.loc 1 362 3 view .LVU31
 162              		.loc 1 362 23 is_stmt 0 view .LVU32
 163 009e 0594     		str	r4, [sp, #20]
 363:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 363 3 is_stmt 1 view .LVU33
 165              		.loc 1 363 24 is_stmt 0 view .LVU34
 166 00a0 0125     		movs	r5, #1
 167 00a2 0695     		str	r5, [sp, #24]
 364:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 168              		.loc 1 364 3 is_stmt 1 view .LVU35
 169              		.loc 1 364 24 is_stmt 0 view .LVU36
 170 00a4 0024     		movs	r4, #0
 171 00a6 0794     		str	r4, [sp, #28]
 365:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 172              		.loc 1 365 3 is_stmt 1 view .LVU37
 173              		.loc 1 365 25 is_stmt 0 view .LVU38
 174 00a8 0894     		str	r4, [sp, #32]
 366:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 175              		.loc 1 366 3 is_stmt 1 view .LVU39
 176 00aa 05A9     		add	r1, sp, #20
 177 00ac 5046     		mov	r0, r10
 178 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL5:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED0_Pin;
 180              		.loc 1 368 3 view .LVU40
 181              		.loc 1 368 23 is_stmt 0 view .LVU41
 182 00b2 0595     		str	r5, [sp, #20]
 369:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 369 3 is_stmt 1 view .LVU42
 184              		.loc 1 369 24 is_stmt 0 view .LVU43
 185 00b4 0695     		str	r5, [sp, #24]
 370:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 370 3 is_stmt 1 view .LVU44
 187              		.loc 1 370 24 is_stmt 0 view .LVU45
 188 00b6 0794     		str	r4, [sp, #28]
 371:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189              		.loc 1 371 3 is_stmt 1 view .LVU46
 190              		.loc 1 371 25 is_stmt 0 view .LVU47
 191 00b8 0894     		str	r4, [sp, #32]
 372:Core/Src/main.c ****   HAL_GPIO_Init(LED0_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 372 3 is_stmt 1 view .LVU48
 193 00ba 05A9     		add	r1, sp, #20
 194 00bc 4846     		mov	r0, r9
 195 00be FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL6:
 373:Core/Src/main.c **** 
 374:Core/Src/main.c ****   GPIO_InitStruct.Pin = NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin
 197              		.loc 1 374 3 view .LVU49
ARM GAS  /tmp/cceQoDuR.s 			page 11


 198              		.loc 1 374 23 is_stmt 0 view .LVU50
 199 00c2 4346     		mov	r3, r8
 200 00c4 0593     		str	r3, [sp, #20]
 375:Core/Src/main.c ****                           |LED_STATUS_Pin|OUT_nSLEEP_Pin;
 376:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 201              		.loc 1 376 3 is_stmt 1 view .LVU51
 202              		.loc 1 376 24 is_stmt 0 view .LVU52
 203 00c6 0695     		str	r5, [sp, #24]
 377:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 204              		.loc 1 377 3 is_stmt 1 view .LVU53
 205              		.loc 1 377 24 is_stmt 0 view .LVU54
 206 00c8 0794     		str	r4, [sp, #28]
 378:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 207              		.loc 1 378 3 is_stmt 1 view .LVU55
 208              		.loc 1 378 25 is_stmt 0 view .LVU56
 209 00ca 0894     		str	r4, [sp, #32]
 379:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 210              		.loc 1 379 3 is_stmt 1 view .LVU57
 211 00cc 05A9     		add	r1, sp, #20
 212 00ce 3000     		movs	r0, r6
 213 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL7:
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   GPIO_InitStruct.Pin = SW_SCPI_CSV_Pin;
 215              		.loc 1 381 3 view .LVU58
 216              		.loc 1 381 23 is_stmt 0 view .LVU59
 217 00d4 8023     		movs	r3, #128
 218 00d6 DB00     		lsls	r3, r3, #3
 219 00d8 0593     		str	r3, [sp, #20]
 382:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 220              		.loc 1 382 3 is_stmt 1 view .LVU60
 221              		.loc 1 382 24 is_stmt 0 view .LVU61
 222 00da 0694     		str	r4, [sp, #24]
 383:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 223              		.loc 1 383 3 is_stmt 1 view .LVU62
 224              		.loc 1 383 24 is_stmt 0 view .LVU63
 225 00dc 0794     		str	r4, [sp, #28]
 384:Core/Src/main.c ****   HAL_GPIO_Init(SW_SCPI_CSV_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 384 3 is_stmt 1 view .LVU64
 227 00de 05A9     		add	r1, sp, #20
 228 00e0 3000     		movs	r0, r6
 229 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL8:
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   GPIO_InitStruct.Pin = OUT0_Pin|OUT1_Pin|OUT2_Pin;
 231              		.loc 1 386 3 view .LVU65
 232              		.loc 1 386 23 is_stmt 0 view .LVU66
 233 00e6 E023     		movs	r3, #224
 234 00e8 0593     		str	r3, [sp, #20]
 387:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 235              		.loc 1 387 3 is_stmt 1 view .LVU67
 236              		.loc 1 387 24 is_stmt 0 view .LVU68
 237 00ea 0695     		str	r5, [sp, #24]
 388:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 238              		.loc 1 388 3 is_stmt 1 view .LVU69
 239              		.loc 1 388 24 is_stmt 0 view .LVU70
 240 00ec 0794     		str	r4, [sp, #28]
ARM GAS  /tmp/cceQoDuR.s 			page 12


 389:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 241              		.loc 1 389 3 is_stmt 1 view .LVU71
 242              		.loc 1 389 25 is_stmt 0 view .LVU72
 243 00ee 0894     		str	r4, [sp, #32]
 390:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 244              		.loc 1 390 3 is_stmt 1 view .LVU73
 245 00f0 05A9     		add	r1, sp, #20
 246 00f2 3800     		movs	r0, r7
 247 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 248              	.LVL9:
 391:Core/Src/main.c **** 
 392:Core/Src/main.c **** }
 249              		.loc 1 392 1 is_stmt 0 view .LVU74
 250 00f8 0AB0     		add	sp, sp, #40
 251              		@ sp needed
 252 00fa 1CBC     		pop	{r2, r3, r4}
 253 00fc 9046     		mov	r8, r2
 254 00fe 9946     		mov	r9, r3
 255 0100 A246     		mov	r10, r4
 256 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 257              	.L3:
 258              		.align	2
 259              	.L2:
 260 0104 00100240 		.word	1073876992
 261 0108 00080048 		.word	1207961600
 262 010c 00140048 		.word	1207964672
 263 0110 55820000 		.word	33365
 264 0114 00040048 		.word	1207960576
 265              		.cfi_endproc
 266              	.LFE55:
 268              		.section	.text.MX_DMA_Init,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.code	16
 272              		.thumb_func
 273              		.fpu softvfp
 275              	MX_DMA_Init:
 276              	.LFB54:
 332:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 277              		.loc 1 332 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 00B5     		push	{lr}
 282              	.LCFI3:
 283              		.cfi_def_cfa_offset 4
 284              		.cfi_offset 14, -4
 285 0002 83B0     		sub	sp, sp, #12
 286              	.LCFI4:
 287              		.cfi_def_cfa_offset 16
 333:Core/Src/main.c **** 
 288              		.loc 1 333 3 view .LVU76
 289              	.LBB8:
 333:Core/Src/main.c **** 
 290              		.loc 1 333 3 view .LVU77
 333:Core/Src/main.c **** 
 291              		.loc 1 333 3 view .LVU78
ARM GAS  /tmp/cceQoDuR.s 			page 13


 292 0004 114A     		ldr	r2, .L5
 293 0006 5169     		ldr	r1, [r2, #20]
 294 0008 0123     		movs	r3, #1
 295 000a 1943     		orrs	r1, r3
 296 000c 5161     		str	r1, [r2, #20]
 333:Core/Src/main.c **** 
 297              		.loc 1 333 3 view .LVU79
 298 000e 5269     		ldr	r2, [r2, #20]
 299 0010 1340     		ands	r3, r2
 300 0012 0193     		str	r3, [sp, #4]
 333:Core/Src/main.c **** 
 301              		.loc 1 333 3 view .LVU80
 302 0014 019B     		ldr	r3, [sp, #4]
 303              	.LBE8:
 333:Core/Src/main.c **** 
 304              		.loc 1 333 3 view .LVU81
 335:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 305              		.loc 1 335 3 view .LVU82
 306 0016 0022     		movs	r2, #0
 307 0018 0021     		movs	r1, #0
 308 001a 0920     		movs	r0, #9
 309 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 310              	.LVL10:
 336:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 311              		.loc 1 336 3 view .LVU83
 312 0020 0920     		movs	r0, #9
 313 0022 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 314              	.LVL11:
 337:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 315              		.loc 1 337 3 view .LVU84
 316 0026 0022     		movs	r2, #0
 317 0028 0021     		movs	r1, #0
 318 002a 0A20     		movs	r0, #10
 319 002c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 320              	.LVL12:
 338:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel4_5_6_7_IRQn, 0, 0);
 321              		.loc 1 338 3 view .LVU85
 322 0030 0A20     		movs	r0, #10
 323 0032 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 324              	.LVL13:
 339:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_5_6_7_IRQn);
 325              		.loc 1 339 3 view .LVU86
 326 0036 0022     		movs	r2, #0
 327 0038 0021     		movs	r1, #0
 328 003a 0B20     		movs	r0, #11
 329 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 330              	.LVL14:
 340:Core/Src/main.c **** 
 331              		.loc 1 340 3 view .LVU87
 332 0040 0B20     		movs	r0, #11
 333 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 334              	.LVL15:
 342:Core/Src/main.c **** 
 335              		.loc 1 342 1 is_stmt 0 view .LVU88
 336 0046 03B0     		add	sp, sp, #12
 337              		@ sp needed
 338 0048 00BD     		pop	{pc}
ARM GAS  /tmp/cceQoDuR.s 			page 14


 339              	.L6:
 340 004a C046     		.align	2
 341              	.L5:
 342 004c 00100240 		.word	1073876992
 343              		.cfi_endproc
 344              	.LFE54:
 346              		.section	.text.MX_SPI1_Init,"ax",%progbits
 347              		.align	1
 348              		.syntax unified
 349              		.code	16
 350              		.thumb_func
 351              		.fpu softvfp
 353              	MX_SPI1_Init:
 354              	.LFB51:
 220:Core/Src/main.c **** 
 355              		.loc 1 220 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 10B5     		push	{r4, lr}
 360              	.LCFI5:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 222:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 364              		.loc 1 222 3 view .LVU90
 222:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 365              		.loc 1 222 18 is_stmt 0 view .LVU91
 366 0002 1048     		ldr	r0, .L8
 367 0004 104B     		ldr	r3, .L8+4
 368 0006 0360     		str	r3, [r0]
 223:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 369              		.loc 1 223 3 is_stmt 1 view .LVU92
 223:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 370              		.loc 1 223 19 is_stmt 0 view .LVU93
 371 0008 8223     		movs	r3, #130
 372 000a 5B00     		lsls	r3, r3, #1
 373 000c 4360     		str	r3, [r0, #4]
 224:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 374              		.loc 1 224 3 is_stmt 1 view .LVU94
 224:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 375              		.loc 1 224 24 is_stmt 0 view .LVU95
 376 000e 8023     		movs	r3, #128
 377 0010 DB00     		lsls	r3, r3, #3
 378 0012 8360     		str	r3, [r0, #8]
 225:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 379              		.loc 1 225 3 is_stmt 1 view .LVU96
 225:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 380              		.loc 1 225 23 is_stmt 0 view .LVU97
 381 0014 E023     		movs	r3, #224
 382 0016 DB00     		lsls	r3, r3, #3
 383 0018 C360     		str	r3, [r0, #12]
 226:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 384              		.loc 1 226 3 is_stmt 1 view .LVU98
 226:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 385              		.loc 1 226 26 is_stmt 0 view .LVU99
 386 001a 0023     		movs	r3, #0
ARM GAS  /tmp/cceQoDuR.s 			page 15


 387 001c 0361     		str	r3, [r0, #16]
 227:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 388              		.loc 1 227 3 is_stmt 1 view .LVU100
 227:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 389              		.loc 1 227 23 is_stmt 0 view .LVU101
 390 001e 4361     		str	r3, [r0, #20]
 228:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 391              		.loc 1 228 3 is_stmt 1 view .LVU102
 228:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 392              		.loc 1 228 18 is_stmt 0 view .LVU103
 393 0020 8022     		movs	r2, #128
 394 0022 9200     		lsls	r2, r2, #2
 395 0024 8261     		str	r2, [r0, #24]
 229:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 396              		.loc 1 229 3 is_stmt 1 view .LVU104
 229:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 397              		.loc 1 229 32 is_stmt 0 view .LVU105
 398 0026 C93A     		subs	r2, r2, #201
 399 0028 FF3A     		subs	r2, r2, #255
 400 002a C261     		str	r2, [r0, #28]
 230:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 401              		.loc 1 230 3 is_stmt 1 view .LVU106
 230:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 402              		.loc 1 230 23 is_stmt 0 view .LVU107
 403 002c 0362     		str	r3, [r0, #32]
 231:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 404              		.loc 1 231 3 is_stmt 1 view .LVU108
 231:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 405              		.loc 1 231 21 is_stmt 0 view .LVU109
 406 002e 4362     		str	r3, [r0, #36]
 232:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 407              		.loc 1 232 3 is_stmt 1 view .LVU110
 232:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 408              		.loc 1 232 29 is_stmt 0 view .LVU111
 409 0030 8362     		str	r3, [r0, #40]
 233:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 410              		.loc 1 233 3 is_stmt 1 view .LVU112
 233:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 411              		.loc 1 233 28 is_stmt 0 view .LVU113
 412 0032 313A     		subs	r2, r2, #49
 413 0034 C262     		str	r2, [r0, #44]
 234:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 414              		.loc 1 234 3 is_stmt 1 view .LVU114
 234:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 415              		.loc 1 234 24 is_stmt 0 view .LVU115
 416 0036 0363     		str	r3, [r0, #48]
 235:Core/Src/main.c ****   HAL_SPI_Init(&hspi1);
 417              		.loc 1 235 3 is_stmt 1 view .LVU116
 235:Core/Src/main.c ****   HAL_SPI_Init(&hspi1);
 418              		.loc 1 235 23 is_stmt 0 view .LVU117
 419 0038 0833     		adds	r3, r3, #8
 420 003a 4363     		str	r3, [r0, #52]
 236:Core/Src/main.c **** 
 421              		.loc 1 236 3 is_stmt 1 view .LVU118
 422 003c FFF7FEFF 		bl	HAL_SPI_Init
 423              	.LVL16:
 239:Core/Src/main.c **** 
ARM GAS  /tmp/cceQoDuR.s 			page 16


 424              		.loc 1 239 1 is_stmt 0 view .LVU119
 425              		@ sp needed
 426 0040 10BD     		pop	{r4, pc}
 427              	.L9:
 428 0042 C046     		.align	2
 429              	.L8:
 430 0044 00000000 		.word	hspi1
 431 0048 00300140 		.word	1073819648
 432              		.cfi_endproc
 433              	.LFE51:
 435              		.section	.text.MX_I2C1_Init,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.code	16
 439              		.thumb_func
 440              		.fpu softvfp
 442              	MX_I2C1_Init:
 443              	.LFB50:
 195:Core/Src/main.c **** 
 444              		.loc 1 195 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 10B5     		push	{r4, lr}
 449              	.LCFI6:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 197:Core/Src/main.c ****   hi2c1.Init.Timing = 0x0000020B;
 453              		.loc 1 197 3 view .LVU121
 197:Core/Src/main.c ****   hi2c1.Init.Timing = 0x0000020B;
 454              		.loc 1 197 18 is_stmt 0 view .LVU122
 455 0002 0E4C     		ldr	r4, .L11
 456 0004 0E4B     		ldr	r3, .L11+4
 457 0006 2360     		str	r3, [r4]
 198:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 84;
 458              		.loc 1 198 3 is_stmt 1 view .LVU123
 198:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 84;
 459              		.loc 1 198 21 is_stmt 0 view .LVU124
 460 0008 0E4B     		ldr	r3, .L11+8
 461 000a 6360     		str	r3, [r4, #4]
 199:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 462              		.loc 1 199 3 is_stmt 1 view .LVU125
 199:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 463              		.loc 1 199 26 is_stmt 0 view .LVU126
 464 000c B83B     		subs	r3, r3, #184
 465 000e FF3B     		subs	r3, r3, #255
 466 0010 A360     		str	r3, [r4, #8]
 200:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 467              		.loc 1 200 3 is_stmt 1 view .LVU127
 200:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 468              		.loc 1 200 29 is_stmt 0 view .LVU128
 469 0012 533B     		subs	r3, r3, #83
 470 0014 E360     		str	r3, [r4, #12]
 201:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 471              		.loc 1 201 3 is_stmt 1 view .LVU129
 201:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
ARM GAS  /tmp/cceQoDuR.s 			page 17


 472              		.loc 1 201 30 is_stmt 0 view .LVU130
 473 0016 0023     		movs	r3, #0
 474 0018 2361     		str	r3, [r4, #16]
 202:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 475              		.loc 1 202 3 is_stmt 1 view .LVU131
 202:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 476              		.loc 1 202 26 is_stmt 0 view .LVU132
 477 001a 6361     		str	r3, [r4, #20]
 203:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 478              		.loc 1 203 3 is_stmt 1 view .LVU133
 203:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 479              		.loc 1 203 31 is_stmt 0 view .LVU134
 480 001c A361     		str	r3, [r4, #24]
 204:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 481              		.loc 1 204 3 is_stmt 1 view .LVU135
 204:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 482              		.loc 1 204 30 is_stmt 0 view .LVU136
 483 001e E361     		str	r3, [r4, #28]
 205:Core/Src/main.c ****   HAL_I2C_Init(&hi2c1);
 484              		.loc 1 205 3 is_stmt 1 view .LVU137
 205:Core/Src/main.c ****   HAL_I2C_Init(&hi2c1);
 485              		.loc 1 205 28 is_stmt 0 view .LVU138
 486 0020 2362     		str	r3, [r4, #32]
 206:Core/Src/main.c **** 
 487              		.loc 1 206 3 is_stmt 1 view .LVU139
 488 0022 2000     		movs	r0, r4
 489 0024 FFF7FEFF 		bl	HAL_I2C_Init
 490              	.LVL17:
 210:Core/Src/main.c **** 
 491              		.loc 1 210 3 view .LVU140
 492 0028 0021     		movs	r1, #0
 493 002a 2000     		movs	r0, r4
 494 002c FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 495              	.LVL18:
 214:Core/Src/main.c **** 
 496              		.loc 1 214 3 view .LVU141
 497 0030 0021     		movs	r1, #0
 498 0032 2000     		movs	r0, r4
 499 0034 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 500              	.LVL19:
 217:Core/Src/main.c **** 
 501              		.loc 1 217 1 is_stmt 0 view .LVU142
 502              		@ sp needed
 503 0038 10BD     		pop	{r4, pc}
 504              	.L12:
 505 003a C046     		.align	2
 506              	.L11:
 507 003c 00000000 		.word	hi2c1
 508 0040 00540040 		.word	1073763328
 509 0044 0B020000 		.word	523
 510              		.cfi_endproc
 511              	.LFE50:
 513              		.section	.text.MX_TIM2_Init,"ax",%progbits
 514              		.align	1
 515              		.syntax unified
 516              		.code	16
 517              		.thumb_func
ARM GAS  /tmp/cceQoDuR.s 			page 18


 518              		.fpu softvfp
 520              	MX_TIM2_Init:
 521              	.LFB53:
 293:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 522              		.loc 1 293 1 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 24
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 30B5     		push	{r4, r5, lr}
 527              	.LCFI7:
 528              		.cfi_def_cfa_offset 12
 529              		.cfi_offset 4, -12
 530              		.cfi_offset 5, -8
 531              		.cfi_offset 14, -4
 532 0002 87B0     		sub	sp, sp, #28
 533              	.LCFI8:
 534              		.cfi_def_cfa_offset 40
 294:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 535              		.loc 1 294 3 view .LVU144
 294:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 536              		.loc 1 294 26 is_stmt 0 view .LVU145
 537 0004 1022     		movs	r2, #16
 538 0006 0021     		movs	r1, #0
 539 0008 02A8     		add	r0, sp, #8
 540 000a FFF7FEFF 		bl	memset
 541              	.LVL20:
 295:Core/Src/main.c **** 
 542              		.loc 1 295 3 is_stmt 1 view .LVU146
 295:Core/Src/main.c **** 
 543              		.loc 1 295 27 is_stmt 0 view .LVU147
 544 000e 0822     		movs	r2, #8
 545 0010 0021     		movs	r1, #0
 546 0012 6846     		mov	r0, sp
 547 0014 FFF7FEFF 		bl	memset
 548              	.LVL21:
 297:Core/Src/main.c ****   htim2.Init.Prescaler = 9999;
 549              		.loc 1 297 3 is_stmt 1 view .LVU148
 297:Core/Src/main.c ****   htim2.Init.Prescaler = 9999;
 550              		.loc 1 297 18 is_stmt 0 view .LVU149
 551 0018 0F4C     		ldr	r4, .L14
 552 001a 8023     		movs	r3, #128
 553 001c DB05     		lsls	r3, r3, #23
 554 001e 2360     		str	r3, [r4]
 298:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 555              		.loc 1 298 3 is_stmt 1 view .LVU150
 298:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 556              		.loc 1 298 24 is_stmt 0 view .LVU151
 557 0020 0E4B     		ldr	r3, .L14+4
 558 0022 6360     		str	r3, [r4, #4]
 299:Core/Src/main.c ****   htim2.Init.Period = 960-1;
 559              		.loc 1 299 3 is_stmt 1 view .LVU152
 299:Core/Src/main.c ****   htim2.Init.Period = 960-1;
 560              		.loc 1 299 26 is_stmt 0 view .LVU153
 561 0024 0025     		movs	r5, #0
 562 0026 A560     		str	r5, [r4, #8]
 300:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 563              		.loc 1 300 3 is_stmt 1 view .LVU154
ARM GAS  /tmp/cceQoDuR.s 			page 19


 300:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 564              		.loc 1 300 21 is_stmt 0 view .LVU155
 565 0028 0D4B     		ldr	r3, .L14+8
 566 002a E360     		str	r3, [r4, #12]
 301:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 567              		.loc 1 301 3 is_stmt 1 view .LVU156
 301:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 568              		.loc 1 301 28 is_stmt 0 view .LVU157
 569 002c 2561     		str	r5, [r4, #16]
 302:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim2);
 570              		.loc 1 302 3 is_stmt 1 view .LVU158
 302:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim2);
 571              		.loc 1 302 32 is_stmt 0 view .LVU159
 572 002e 8023     		movs	r3, #128
 573 0030 A361     		str	r3, [r4, #24]
 303:Core/Src/main.c **** 
 574              		.loc 1 303 3 is_stmt 1 view .LVU160
 575 0032 2000     		movs	r0, r4
 576 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 577              	.LVL22:
 306:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 578              		.loc 1 306 3 view .LVU161
 306:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 579              		.loc 1 306 34 is_stmt 0 view .LVU162
 580 0038 8023     		movs	r3, #128
 581 003a 5B01     		lsls	r3, r3, #5
 582 003c 0293     		str	r3, [sp, #8]
 307:Core/Src/main.c **** 
 583              		.loc 1 307 3 is_stmt 1 view .LVU163
 584 003e 02A9     		add	r1, sp, #8
 585 0040 2000     		movs	r0, r4
 586 0042 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 587              	.LVL23:
 310:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 588              		.loc 1 310 3 view .LVU164
 310:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 589              		.loc 1 310 37 is_stmt 0 view .LVU165
 590 0046 2023     		movs	r3, #32
 591 0048 0093     		str	r3, [sp]
 311:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 592              		.loc 1 311 3 is_stmt 1 view .LVU166
 311:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 593              		.loc 1 311 33 is_stmt 0 view .LVU167
 594 004a 0195     		str	r5, [sp, #4]
 312:Core/Src/main.c **** 
 595              		.loc 1 312 3 is_stmt 1 view .LVU168
 596 004c 6946     		mov	r1, sp
 597 004e 2000     		movs	r0, r4
 598 0050 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 599              	.LVL24:
 315:Core/Src/main.c **** /*
 600              		.loc 1 315 1 is_stmt 0 view .LVU169
 601 0054 07B0     		add	sp, sp, #28
 602              		@ sp needed
 603 0056 30BD     		pop	{r4, r5, pc}
 604              	.L15:
 605              		.align	2
ARM GAS  /tmp/cceQoDuR.s 			page 20


 606              	.L14:
 607 0058 00000000 		.word	htim2
 608 005c 0F270000 		.word	9999
 609 0060 BF030000 		.word	959
 610              		.cfi_endproc
 611              	.LFE53:
 613              		.section	.text.MX_TIM1_Init,"ax",%progbits
 614              		.align	1
 615              		.syntax unified
 616              		.code	16
 617              		.thumb_func
 618              		.fpu softvfp
 620              	MX_TIM1_Init:
 621              	.LFB52:
 242:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 622              		.loc 1 242 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 88
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626 0000 30B5     		push	{r4, r5, lr}
 627              	.LCFI9:
 628              		.cfi_def_cfa_offset 12
 629              		.cfi_offset 4, -12
 630              		.cfi_offset 5, -8
 631              		.cfi_offset 14, -4
 632 0002 97B0     		sub	sp, sp, #92
 633              	.LCFI10:
 634              		.cfi_def_cfa_offset 104
 243:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 635              		.loc 1 243 3 view .LVU171
 243:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 636              		.loc 1 243 26 is_stmt 0 view .LVU172
 637 0004 1022     		movs	r2, #16
 638 0006 0021     		movs	r1, #0
 639 0008 12A8     		add	r0, sp, #72
 640 000a FFF7FEFF 		bl	memset
 641              	.LVL25:
 244:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 642              		.loc 1 244 3 is_stmt 1 view .LVU173
 244:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 643              		.loc 1 244 27 is_stmt 0 view .LVU174
 644 000e 0822     		movs	r2, #8
 645 0010 0021     		movs	r1, #0
 646 0012 10A8     		add	r0, sp, #64
 647 0014 FFF7FEFF 		bl	memset
 648              	.LVL26:
 245:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 649              		.loc 1 245 3 is_stmt 1 view .LVU175
 245:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 650              		.loc 1 245 22 is_stmt 0 view .LVU176
 651 0018 1C22     		movs	r2, #28
 652 001a 0021     		movs	r1, #0
 653 001c 09A8     		add	r0, sp, #36
 654 001e FFF7FEFF 		bl	memset
 655              	.LVL27:
 246:Core/Src/main.c **** 
 656              		.loc 1 246 3 is_stmt 1 view .LVU177
ARM GAS  /tmp/cceQoDuR.s 			page 21


 246:Core/Src/main.c **** 
 657              		.loc 1 246 34 is_stmt 0 view .LVU178
 658 0022 2022     		movs	r2, #32
 659 0024 0021     		movs	r1, #0
 660 0026 01A8     		add	r0, sp, #4
 661 0028 FFF7FEFF 		bl	memset
 662              	.LVL28:
 248:Core/Src/main.c ****   htim1.Init.Prescaler = 16;
 663              		.loc 1 248 3 is_stmt 1 view .LVU179
 248:Core/Src/main.c ****   htim1.Init.Prescaler = 16;
 664              		.loc 1 248 18 is_stmt 0 view .LVU180
 665 002c 1E4D     		ldr	r5, .L17
 666 002e 1F4B     		ldr	r3, .L17+4
 667 0030 2B60     		str	r3, [r5]
 249:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 668              		.loc 1 249 3 is_stmt 1 view .LVU181
 249:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 669              		.loc 1 249 24 is_stmt 0 view .LVU182
 670 0032 1023     		movs	r3, #16
 671 0034 6B60     		str	r3, [r5, #4]
 250:Core/Src/main.c ****   htim1.Init.Period = 1024;
 672              		.loc 1 250 3 is_stmt 1 view .LVU183
 250:Core/Src/main.c ****   htim1.Init.Period = 1024;
 673              		.loc 1 250 26 is_stmt 0 view .LVU184
 674 0036 0024     		movs	r4, #0
 675 0038 AC60     		str	r4, [r5, #8]
 251:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 676              		.loc 1 251 3 is_stmt 1 view .LVU185
 251:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 677              		.loc 1 251 21 is_stmt 0 view .LVU186
 678 003a 8023     		movs	r3, #128
 679 003c DB00     		lsls	r3, r3, #3
 680 003e EB60     		str	r3, [r5, #12]
 252:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 681              		.loc 1 252 3 is_stmt 1 view .LVU187
 252:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 682              		.loc 1 252 28 is_stmt 0 view .LVU188
 683 0040 2C61     		str	r4, [r5, #16]
 253:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 684              		.loc 1 253 3 is_stmt 1 view .LVU189
 253:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 685              		.loc 1 253 32 is_stmt 0 view .LVU190
 686 0042 6C61     		str	r4, [r5, #20]
 254:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim1);
 687              		.loc 1 254 3 is_stmt 1 view .LVU191
 254:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim1);
 688              		.loc 1 254 32 is_stmt 0 view .LVU192
 689 0044 8023     		movs	r3, #128
 690 0046 AB61     		str	r3, [r5, #24]
 255:Core/Src/main.c **** 
 691              		.loc 1 255 3 is_stmt 1 view .LVU193
 692 0048 2800     		movs	r0, r5
 693 004a FFF7FEFF 		bl	HAL_TIM_Base_Init
 694              	.LVL29:
 258:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
 695              		.loc 1 258 3 view .LVU194
 258:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
ARM GAS  /tmp/cceQoDuR.s 			page 22


 696              		.loc 1 258 34 is_stmt 0 view .LVU195
 697 004e 8023     		movs	r3, #128
 698 0050 5B01     		lsls	r3, r3, #5
 699 0052 1293     		str	r3, [sp, #72]
 259:Core/Src/main.c **** 
 700              		.loc 1 259 3 is_stmt 1 view .LVU196
 701 0054 12A9     		add	r1, sp, #72
 702 0056 2800     		movs	r0, r5
 703 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 704              	.LVL30:
 262:Core/Src/main.c **** 
 705              		.loc 1 262 3 view .LVU197
 706 005c 2800     		movs	r0, r5
 707 005e FFF7FEFF 		bl	HAL_TIM_OC_Init
 708              	.LVL31:
 265:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 709              		.loc 1 265 3 view .LVU198
 265:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 710              		.loc 1 265 37 is_stmt 0 view .LVU199
 711 0062 1094     		str	r4, [sp, #64]
 266:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 712              		.loc 1 266 3 is_stmt 1 view .LVU200
 266:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 713              		.loc 1 266 33 is_stmt 0 view .LVU201
 714 0064 1194     		str	r4, [sp, #68]
 267:Core/Src/main.c **** 
 715              		.loc 1 267 3 is_stmt 1 view .LVU202
 716 0066 10A9     		add	r1, sp, #64
 717 0068 2800     		movs	r0, r5
 718 006a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 719              	.LVL32:
 270:Core/Src/main.c ****   sConfigOC.Pulse = 100;
 720              		.loc 1 270 3 view .LVU203
 270:Core/Src/main.c ****   sConfigOC.Pulse = 100;
 721              		.loc 1 270 20 is_stmt 0 view .LVU204
 722 006e 0994     		str	r4, [sp, #36]
 271:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 723              		.loc 1 271 3 is_stmt 1 view .LVU205
 271:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 724              		.loc 1 271 19 is_stmt 0 view .LVU206
 725 0070 6423     		movs	r3, #100
 726 0072 0A93     		str	r3, [sp, #40]
 272:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 727              		.loc 1 272 3 is_stmt 1 view .LVU207
 272:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 728              		.loc 1 272 24 is_stmt 0 view .LVU208
 729 0074 0B94     		str	r4, [sp, #44]
 273:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 730              		.loc 1 273 3 is_stmt 1 view .LVU209
 273:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 731              		.loc 1 273 25 is_stmt 0 view .LVU210
 732 0076 0C94     		str	r4, [sp, #48]
 274:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 733              		.loc 1 274 3 is_stmt 1 view .LVU211
 274:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 734              		.loc 1 274 24 is_stmt 0 view .LVU212
 735 0078 0D94     		str	r4, [sp, #52]
ARM GAS  /tmp/cceQoDuR.s 			page 23


 275:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 736              		.loc 1 275 3 is_stmt 1 view .LVU213
 275:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 737              		.loc 1 275 25 is_stmt 0 view .LVU214
 738 007a 0E94     		str	r4, [sp, #56]
 276:Core/Src/main.c ****   HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1);
 739              		.loc 1 276 3 is_stmt 1 view .LVU215
 276:Core/Src/main.c ****   HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1);
 740              		.loc 1 276 26 is_stmt 0 view .LVU216
 741 007c 0F94     		str	r4, [sp, #60]
 277:Core/Src/main.c **** 
 742              		.loc 1 277 3 is_stmt 1 view .LVU217
 743 007e 0022     		movs	r2, #0
 744 0080 09A9     		add	r1, sp, #36
 745 0082 2800     		movs	r0, r5
 746 0084 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 747              	.LVL33:
 280:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 748              		.loc 1 280 3 view .LVU218
 280:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 749              		.loc 1 280 40 is_stmt 0 view .LVU219
 750 0088 0194     		str	r4, [sp, #4]
 281:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 751              		.loc 1 281 3 is_stmt 1 view .LVU220
 281:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 752              		.loc 1 281 41 is_stmt 0 view .LVU221
 753 008a 0294     		str	r4, [sp, #8]
 282:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 754              		.loc 1 282 3 is_stmt 1 view .LVU222
 282:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 755              		.loc 1 282 34 is_stmt 0 view .LVU223
 756 008c 0394     		str	r4, [sp, #12]
 283:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 757              		.loc 1 283 3 is_stmt 1 view .LVU224
 283:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 758              		.loc 1 283 33 is_stmt 0 view .LVU225
 759 008e 0494     		str	r4, [sp, #16]
 284:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 760              		.loc 1 284 3 is_stmt 1 view .LVU226
 284:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 761              		.loc 1 284 35 is_stmt 0 view .LVU227
 762 0090 0594     		str	r4, [sp, #20]
 285:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 763              		.loc 1 285 3 is_stmt 1 view .LVU228
 285:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 764              		.loc 1 285 38 is_stmt 0 view .LVU229
 765 0092 8023     		movs	r3, #128
 766 0094 9B01     		lsls	r3, r3, #6
 767 0096 0693     		str	r3, [sp, #24]
 286:Core/Src/main.c ****   HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig);
 768              		.loc 1 286 3 is_stmt 1 view .LVU230
 286:Core/Src/main.c ****   HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig);
 769              		.loc 1 286 40 is_stmt 0 view .LVU231
 770 0098 0894     		str	r4, [sp, #32]
 287:Core/Src/main.c **** 
 771              		.loc 1 287 3 is_stmt 1 view .LVU232
 772 009a 01A9     		add	r1, sp, #4
ARM GAS  /tmp/cceQoDuR.s 			page 24


 773 009c 2800     		movs	r0, r5
 774 009e FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 775              	.LVL34:
 290:Core/Src/main.c **** 
 776              		.loc 1 290 1 is_stmt 0 view .LVU233
 777 00a2 17B0     		add	sp, sp, #92
 778              		@ sp needed
 779 00a4 30BD     		pop	{r4, r5, pc}
 780              	.L18:
 781 00a6 C046     		.align	2
 782              	.L17:
 783 00a8 00000000 		.word	htim1
 784 00ac 002C0140 		.word	1073818624
 785              		.cfi_endproc
 786              	.LFE52:
 788              		.section	.text.MX_ADC_Init,"ax",%progbits
 789              		.align	1
 790              		.syntax unified
 791              		.code	16
 792              		.thumb_func
 793              		.fpu softvfp
 795              	MX_ADC_Init:
 796              	.LFB49:
 159:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 797              		.loc 1 159 1 is_stmt 1 view -0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 16
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801 0000 70B5     		push	{r4, r5, r6, lr}
 802              	.LCFI11:
 803              		.cfi_def_cfa_offset 16
 804              		.cfi_offset 4, -16
 805              		.cfi_offset 5, -12
 806              		.cfi_offset 6, -8
 807              		.cfi_offset 14, -4
 808 0002 84B0     		sub	sp, sp, #16
 809              	.LCFI12:
 810              		.cfi_def_cfa_offset 32
 160:Core/Src/main.c **** 
 811              		.loc 1 160 3 view .LVU235
 160:Core/Src/main.c **** 
 812              		.loc 1 160 26 is_stmt 0 view .LVU236
 813 0004 0C22     		movs	r2, #12
 814 0006 0021     		movs	r1, #0
 815 0008 01A8     		add	r0, sp, #4
 816 000a FFF7FEFF 		bl	memset
 817              	.LVL35:
 162:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 818              		.loc 1 162 3 is_stmt 1 view .LVU237
 162:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 819              		.loc 1 162 17 is_stmt 0 view .LVU238
 820 000e 214C     		ldr	r4, .L20
 821 0010 214B     		ldr	r3, .L20+4
 822 0012 2360     		str	r3, [r4]
 163:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 823              		.loc 1 163 3 is_stmt 1 view .LVU239
 163:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
ARM GAS  /tmp/cceQoDuR.s 			page 25


 824              		.loc 1 163 28 is_stmt 0 view .LVU240
 825 0014 0023     		movs	r3, #0
 826 0016 6360     		str	r3, [r4, #4]
 164:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 827              		.loc 1 164 3 is_stmt 1 view .LVU241
 164:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 828              		.loc 1 164 24 is_stmt 0 view .LVU242
 829 0018 A360     		str	r3, [r4, #8]
 165:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 830              		.loc 1 165 3 is_stmt 1 view .LVU243
 165:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 831              		.loc 1 165 23 is_stmt 0 view .LVU244
 832 001a E360     		str	r3, [r4, #12]
 166:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 833              		.loc 1 166 3 is_stmt 1 view .LVU245
 166:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 834              		.loc 1 166 26 is_stmt 0 view .LVU246
 835 001c 0125     		movs	r5, #1
 836 001e 2561     		str	r5, [r4, #16]
 167:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 837              		.loc 1 167 3 is_stmt 1 view .LVU247
 167:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 838              		.loc 1 167 26 is_stmt 0 view .LVU248
 839 0020 0826     		movs	r6, #8
 840 0022 6661     		str	r6, [r4, #20]
 168:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 841              		.loc 1 168 3 is_stmt 1 view .LVU249
 168:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 842              		.loc 1 168 30 is_stmt 0 view .LVU250
 843 0024 2376     		strb	r3, [r4, #24]
 169:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 844              		.loc 1 169 3 is_stmt 1 view .LVU251
 169:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 845              		.loc 1 169 34 is_stmt 0 view .LVU252
 846 0026 6376     		strb	r3, [r4, #25]
 170:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 847              		.loc 1 170 3 is_stmt 1 view .LVU253
 170:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 848              		.loc 1 170 32 is_stmt 0 view .LVU254
 849 0028 A376     		strb	r3, [r4, #26]
 171:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;//ADC_SOFTWARE_START
 850              		.loc 1 171 3 is_stmt 1 view .LVU255
 171:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;//ADC_SOFTWARE_START
 851              		.loc 1 171 35 is_stmt 0 view .LVU256
 852 002a E376     		strb	r3, [r4, #27]
 172:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 853              		.loc 1 172 3 is_stmt 1 view .LVU257
 172:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 854              		.loc 1 172 30 is_stmt 0 view .LVU258
 855 002c 8033     		adds	r3, r3, #128
 856 002e E361     		str	r3, [r4, #28]
 173:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 857              		.loc 1 173 3 is_stmt 1 view .LVU259
 173:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 858              		.loc 1 173 34 is_stmt 0 view .LVU260
 859 0030 8023     		movs	r3, #128
 860 0032 DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/cceQoDuR.s 			page 26


 861 0034 2362     		str	r3, [r4, #32]
 174:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 862              		.loc 1 174 3 is_stmt 1 view .LVU261
 174:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 863              		.loc 1 174 35 is_stmt 0 view .LVU262
 864 0036 2423     		movs	r3, #36
 865 0038 E554     		strb	r5, [r4, r3]
 175:Core/Src/main.c ****   HAL_ADC_Init(&hadc);
 866              		.loc 1 175 3 is_stmt 1 view .LVU263
 175:Core/Src/main.c ****   HAL_ADC_Init(&hadc);
 867              		.loc 1 175 21 is_stmt 0 view .LVU264
 868 003a A562     		str	r5, [r4, #40]
 176:Core/Src/main.c **** 
 869              		.loc 1 176 3 is_stmt 1 view .LVU265
 870 003c 2000     		movs	r0, r4
 871 003e FFF7FEFF 		bl	HAL_ADC_Init
 872              	.LVL36:
 178:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 873              		.loc 1 178 3 view .LVU266
 178:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 874              		.loc 1 178 19 is_stmt 0 view .LVU267
 875 0042 0195     		str	r5, [sp, #4]
 179:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 876              		.loc 1 179 3 is_stmt 1 view .LVU268
 179:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 877              		.loc 1 179 16 is_stmt 0 view .LVU269
 878 0044 8023     		movs	r3, #128
 879 0046 5B01     		lsls	r3, r3, #5
 880 0048 0293     		str	r3, [sp, #8]
 180:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 881              		.loc 1 180 3 is_stmt 1 view .LVU270
 180:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 882              		.loc 1 180 24 is_stmt 0 view .LVU271
 883 004a 0435     		adds	r5, r5, #4
 884 004c 0395     		str	r5, [sp, #12]
 181:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 885              		.loc 1 181 3 is_stmt 1 view .LVU272
 886 004e 01A9     		add	r1, sp, #4
 887 0050 2000     		movs	r0, r4
 888 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 889              	.LVL37:
 182:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 890              		.loc 1 182 3 view .LVU273
 182:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 891              		.loc 1 182 19 is_stmt 0 view .LVU274
 892 0056 0323     		movs	r3, #3
 893 0058 0193     		str	r3, [sp, #4]
 183:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 894              		.loc 1 183 3 is_stmt 1 view .LVU275
 895 005a 01A9     		add	r1, sp, #4
 896 005c 2000     		movs	r0, r4
 897 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 898              	.LVL38:
 184:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 899              		.loc 1 184 3 view .LVU276
 184:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 900              		.loc 1 184 19 is_stmt 0 view .LVU277
ARM GAS  /tmp/cceQoDuR.s 			page 27


 901 0062 0195     		str	r5, [sp, #4]
 185:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 902              		.loc 1 185 3 is_stmt 1 view .LVU278
 903 0064 01A9     		add	r1, sp, #4
 904 0066 2000     		movs	r0, r4
 905 0068 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 906              	.LVL39:
 186:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 907              		.loc 1 186 3 view .LVU279
 186:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 908              		.loc 1 186 19 is_stmt 0 view .LVU280
 909 006c 0723     		movs	r3, #7
 910 006e 0193     		str	r3, [sp, #4]
 187:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_8;
 911              		.loc 1 187 3 is_stmt 1 view .LVU281
 912 0070 01A9     		add	r1, sp, #4
 913 0072 2000     		movs	r0, r4
 914 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 915              	.LVL40:
 188:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 916              		.loc 1 188 3 view .LVU282
 188:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 917              		.loc 1 188 19 is_stmt 0 view .LVU283
 918 0078 0196     		str	r6, [sp, #4]
 189:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 919              		.loc 1 189 3 is_stmt 1 view .LVU284
 920 007a 01A9     		add	r1, sp, #4
 921 007c 2000     		movs	r0, r4
 922 007e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 923              	.LVL41:
 190:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 924              		.loc 1 190 3 view .LVU285
 190:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 925              		.loc 1 190 19 is_stmt 0 view .LVU286
 926 0082 1023     		movs	r3, #16
 927 0084 0193     		str	r3, [sp, #4]
 191:Core/Src/main.c **** }
 928              		.loc 1 191 3 is_stmt 1 view .LVU287
 929 0086 01A9     		add	r1, sp, #4
 930 0088 2000     		movs	r0, r4
 931 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 932              	.LVL42:
 192:Core/Src/main.c **** 
 933              		.loc 1 192 1 is_stmt 0 view .LVU288
 934 008e 04B0     		add	sp, sp, #16
 935              		@ sp needed
 936 0090 70BD     		pop	{r4, r5, r6, pc}
 937              	.L21:
 938 0092 C046     		.align	2
 939              	.L20:
 940 0094 00000000 		.word	hadc
 941 0098 00240140 		.word	1073816576
 942              		.cfi_endproc
 943              	.LFE49:
 945              		.global	__aeabi_i2f
 946              		.global	__aeabi_fmul
 947              		.section	.text.MAX31855_get_tcold,"ax",%progbits
ARM GAS  /tmp/cceQoDuR.s 			page 28


 948              		.align	1
 949              		.global	MAX31855_get_tcold
 950              		.syntax unified
 951              		.code	16
 952              		.thumb_func
 953              		.fpu softvfp
 955              	MAX31855_get_tcold:
 956              	.LVL43:
 957              	.LFB44:
  75:Core/Src/main.c ****   ///int16_t tint;
 958              		.loc 1 75 39 is_stmt 1 view -0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
  75:Core/Src/main.c ****   ///int16_t tint;
 962              		.loc 1 75 39 is_stmt 0 view .LVU290
 963 0000 10B5     		push	{r4, lr}
 964              	.LCFI13:
 965              		.cfi_def_cfa_offset 8
 966              		.cfi_offset 4, -8
 967              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 
 968              		.loc 1 79 3 is_stmt 1 view .LVU291
  79:Core/Src/main.c **** 
 969              		.loc 1 79 8 is_stmt 0 view .LVU292
 970 0002 0411     		asrs	r4, r0, #4
 971              	.LVL44:
  82:Core/Src/main.c ****   // check sign bit!
 972              		.loc 1 82 3 is_stmt 1 view .LVU293
  82:Core/Src/main.c ****   // check sign bit!
 973              		.loc 1 82 25 is_stmt 0 view .LVU294
 974 0004 6005     		lsls	r0, r4, #21
 975 0006 400D     		lsrs	r0, r0, #21
  82:Core/Src/main.c ****   // check sign bit!
 976              		.loc 1 82 9 view .LVU295
 977 0008 FFF7FEFF 		bl	__aeabi_i2f
 978              	.LVL45:
  84:Core/Src/main.c ****     // Convert to negative value by extending sign and casting to signed type.
 979              		.loc 1 84 3 is_stmt 1 view .LVU296
  84:Core/Src/main.c ****     // Convert to negative value by extending sign and casting to signed type.
 980              		.loc 1 84 6 is_stmt 0 view .LVU297
 981 000c 2305     		lsls	r3, r4, #20
 982 000e 04D5     		bpl	.L23
 983              	.LBB9:
  86:Core/Src/main.c ****     internal = tmp;
 984              		.loc 1 86 5 is_stmt 1 view .LVU298
  86:Core/Src/main.c ****     internal = tmp;
 985              		.loc 1 86 26 is_stmt 0 view .LVU299
 986 0010 20B2     		sxth	r0, r4
 987              	.LVL46:
  86:Core/Src/main.c ****     internal = tmp;
 988              		.loc 1 86 13 view .LVU300
 989 0012 044C     		ldr	r4, .L24
 990              	.LVL47:
  86:Core/Src/main.c ****     internal = tmp;
 991              		.loc 1 86 13 view .LVU301
 992 0014 2043     		orrs	r0, r4
ARM GAS  /tmp/cceQoDuR.s 			page 29


 993              	.LVL48:
  87:Core/Src/main.c ****   }
 994              		.loc 1 87 5 is_stmt 1 view .LVU302
  87:Core/Src/main.c ****   }
 995              		.loc 1 87 14 is_stmt 0 view .LVU303
 996 0016 FFF7FEFF 		bl	__aeabi_i2f
 997              	.LVL49:
 998              	.L23:
  87:Core/Src/main.c ****   }
 999              		.loc 1 87 14 view .LVU304
 1000              	.LBE9:
  89:Core/Src/main.c ****   return internal;
 1001              		.loc 1 89 3 is_stmt 1 view .LVU305
  89:Core/Src/main.c ****   return internal;
 1002              		.loc 1 89 12 is_stmt 0 view .LVU306
 1003 001a F621     		movs	r1, #246
 1004 001c 8905     		lsls	r1, r1, #22
 1005 001e FFF7FEFF 		bl	__aeabi_fmul
 1006              	.LVL50:
  90:Core/Src/main.c **** }
 1007              		.loc 1 90 3 is_stmt 1 view .LVU307
  91:Core/Src/main.c **** 
 1008              		.loc 1 91 1 is_stmt 0 view .LVU308
 1009              		@ sp needed
 1010 0022 10BD     		pop	{r4, pc}
 1011              	.L25:
 1012              		.align	2
 1013              	.L24:
 1014 0024 00F8FFFF 		.word	-2048
 1015              		.cfi_endproc
 1016              	.LFE44:
 1018              		.global	__aeabi_i2d
 1019              		.global	__aeabi_dmul
 1020              		.global	__aeabi_d2f
 1021              		.section	.text.MAX31855_get_twarm,"ax",%progbits
 1022              		.align	1
 1023              		.global	MAX31855_get_twarm
 1024              		.syntax unified
 1025              		.code	16
 1026              		.thumb_func
 1027              		.fpu softvfp
 1029              	MAX31855_get_twarm:
 1030              	.LVL51:
 1031              	.LFB45:
  94:Core/Src/main.c ****   if (data & 0x80000000) {
 1032              		.loc 1 94 39 is_stmt 1 view -0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 0
 1035              		@ frame_needed = 0, uses_anonymous_args = 0
  94:Core/Src/main.c ****   if (data & 0x80000000) {
 1036              		.loc 1 94 39 is_stmt 0 view .LVU310
 1037 0000 10B5     		push	{r4, lr}
 1038              	.LCFI14:
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 4, -8
 1041              		.cfi_offset 14, -4
  95:Core/Src/main.c ****     data = 0xFFFFC000 | ((data >> 18) & 0x00003FFF);
ARM GAS  /tmp/cceQoDuR.s 			page 30


 1042              		.loc 1 95 3 is_stmt 1 view .LVU311
  95:Core/Src/main.c ****     data = 0xFFFFC000 | ((data >> 18) & 0x00003FFF);
 1043              		.loc 1 95 6 is_stmt 0 view .LVU312
 1044 0002 0028     		cmp	r0, #0
 1045 0004 09DB     		blt	.L29
  98:Core/Src/main.c ****   }
 1046              		.loc 1 98 5 is_stmt 1 view .LVU313
  98:Core/Src/main.c ****   }
 1047              		.loc 1 98 10 is_stmt 0 view .LVU314
 1048 0006 8014     		asrs	r0, r0, #18
 1049              	.LVL52:
 1050              	.L28:
 100:Core/Src/main.c ****   return (float)cent;
 1051              		.loc 1 100 3 is_stmt 1 view .LVU315
 100:Core/Src/main.c ****   return (float)cent;
 1052              		.loc 1 100 22 is_stmt 0 view .LVU316
 1053 0008 FFF7FEFF 		bl	__aeabi_i2d
 1054              	.LVL53:
 100:Core/Src/main.c ****   return (float)cent;
 1055              		.loc 1 100 10 view .LVU317
 1056 000c 0022     		movs	r2, #0
 1057 000e 054B     		ldr	r3, .L30
 1058 0010 FFF7FEFF 		bl	__aeabi_dmul
 1059              	.LVL54:
 101:Core/Src/main.c **** }
 1060              		.loc 1 101 3 is_stmt 1 view .LVU318
 101:Core/Src/main.c **** }
 1061              		.loc 1 101 10 is_stmt 0 view .LVU319
 1062 0014 FFF7FEFF 		bl	__aeabi_d2f
 1063              	.LVL55:
 102:Core/Src/main.c **** 
 1064              		.loc 1 102 1 view .LVU320
 1065              		@ sp needed
 1066 0018 10BD     		pop	{r4, pc}
 1067              	.LVL56:
 1068              	.L29:
  96:Core/Src/main.c ****   } else {
 1069              		.loc 1 96 5 is_stmt 1 view .LVU321
  96:Core/Src/main.c ****   } else {
 1070              		.loc 1 96 39 is_stmt 0 view .LVU322
 1071 001a 800C     		lsrs	r0, r0, #18
 1072              	.LVL57:
  96:Core/Src/main.c ****   } else {
 1073              		.loc 1 96 23 view .LVU323
 1074 001c 024B     		ldr	r3, .L30+4
 1075 001e 1843     		orrs	r0, r3
 1076              	.LVL58:
  96:Core/Src/main.c ****   } else {
 1077              		.loc 1 96 23 view .LVU324
 1078 0020 F2E7     		b	.L28
 1079              	.L31:
 1080 0022 C046     		.align	2
 1081              	.L30:
 1082 0024 0000D03F 		.word	1070596096
 1083 0028 00C0FFFF 		.word	-16384
 1084              		.cfi_endproc
 1085              	.LFE45:
ARM GAS  /tmp/cceQoDuR.s 			page 31


 1087              		.section	.rodata.temp_timer.str1.4,"aMS",%progbits,1
 1088              		.align	2
 1089              	.LC8:
 1090 0000 256C7509 		.ascii	"%lu\011%lu\011%lu\011%lu\011%lu\011%.2f\011%.4f\012"
 1090      256C7509 
 1090      256C7509 
 1090      256C7509 
 1090      256C7509 
 1091 001e 0D00     		.ascii	"\015\000"
 1092              		.global	__aeabi_f2d
 1093              		.section	.text.temp_timer,"ax",%progbits
 1094              		.align	1
 1095              		.global	temp_timer
 1096              		.syntax unified
 1097              		.code	16
 1098              		.thumb_func
 1099              		.fpu softvfp
 1101              	temp_timer:
 1102              	.LFB46:
 105:Core/Src/main.c ****   led_set(STATUS, STATE_GREEN);
 1103              		.loc 1 105 18 is_stmt 1 view -0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 8
 1106              		@ frame_needed = 0, uses_anonymous_args = 0
 1107 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1108              	.LCFI15:
 1109              		.cfi_def_cfa_offset 20
 1110              		.cfi_offset 4, -20
 1111              		.cfi_offset 5, -16
 1112              		.cfi_offset 6, -12
 1113              		.cfi_offset 7, -8
 1114              		.cfi_offset 14, -4
 1115 0002 DE46     		mov	lr, fp
 1116 0004 5746     		mov	r7, r10
 1117 0006 4E46     		mov	r6, r9
 1118 0008 4546     		mov	r5, r8
 1119 000a E0B5     		push	{r5, r6, r7, lr}
 1120              	.LCFI16:
 1121              		.cfi_def_cfa_offset 36
 1122              		.cfi_offset 8, -36
 1123              		.cfi_offset 9, -32
 1124              		.cfi_offset 10, -28
 1125              		.cfi_offset 11, -24
 1126 000c 8BB0     		sub	sp, sp, #44
 1127              	.LCFI17:
 1128              		.cfi_def_cfa_offset 80
 106:Core/Src/main.c **** 
 1129              		.loc 1 106 3 view .LVU326
 1130 000e 8020     		movs	r0, #128
 1131 0010 0121     		movs	r1, #1
 1132 0012 8000     		lsls	r0, r0, #2
 1133 0014 FFF7FEFF 		bl	led_set
 1134              	.LVL59:
 108:Core/Src/main.c **** 
 1135              		.loc 1 108 3 view .LVU327
 108:Core/Src/main.c **** 
 1136              		.loc 1 108 12 is_stmt 0 view .LVU328
ARM GAS  /tmp/cceQoDuR.s 			page 32


 1137 0018 224D     		ldr	r5, .L33
 1138 001a 2B68     		ldr	r3, [r5]
 1139 001c 1CBA     		rev	r4, r3
 108:Core/Src/main.c **** 
 1140              		.loc 1 108 10 view .LVU329
 1141 001e 2C60     		str	r4, [r5]
 110:Core/Src/main.c ****   sprintf(tsv_str, "%lu\t%lu\t%lu\t%lu\t%lu\t%.2f\t%.4f\n\r", adc[0],adc[2],adc[3],adc[4],adc[5],MA
 1142              		.loc 1 110 3 is_stmt 1 view .LVU330
 1143 0020 214E     		ldr	r6, .L33+4
 1144 0022 6022     		movs	r2, #96
 1145 0024 0021     		movs	r1, #0
 1146 0026 3000     		movs	r0, r6
 1147 0028 FFF7FEFF 		bl	memset
 1148              	.LVL60:
 111:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1149              		.loc 1 111 3 view .LVU331
 1150 002c 1F4B     		ldr	r3, .L33+8
 1151 002e 1F68     		ldr	r7, [r3]
 1152 0030 9A68     		ldr	r2, [r3, #8]
 1153 0032 9046     		mov	r8, r2
 1154 0034 DA68     		ldr	r2, [r3, #12]
 1155 0036 9146     		mov	r9, r2
 1156 0038 1A69     		ldr	r2, [r3, #16]
 1157 003a 9246     		mov	r10, r2
 1158 003c 5B69     		ldr	r3, [r3, #20]
 1159 003e 9B46     		mov	fp, r3
 111:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1160              		.loc 1 111 98 is_stmt 0 view .LVU332
 1161 0040 2000     		movs	r0, r4
 1162 0042 FFF7FEFF 		bl	MAX31855_get_twarm
 1163              	.LVL61:
 1164 0046 0990     		str	r0, [sp, #36]
 111:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1165              		.loc 1 111 125 view .LVU333
 1166 0048 2000     		movs	r0, r4
 1167 004a FFF7FEFF 		bl	MAX31855_get_tcold
 1168              	.LVL62:
 111:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1169              		.loc 1 111 3 view .LVU334
 1170 004e FFF7FEFF 		bl	__aeabi_f2d
 1171              	.LVL63:
 1172 0052 0690     		str	r0, [sp, #24]
 1173 0054 0791     		str	r1, [sp, #28]
 1174 0056 0998     		ldr	r0, [sp, #36]
 1175 0058 FFF7FEFF 		bl	__aeabi_f2d
 1176              	.LVL64:
 1177 005c 0490     		str	r0, [sp, #16]
 1178 005e 0591     		str	r1, [sp, #20]
 1179 0060 5B46     		mov	r3, fp
 1180 0062 0293     		str	r3, [sp, #8]
 1181 0064 5346     		mov	r3, r10
 1182 0066 0193     		str	r3, [sp, #4]
 1183 0068 4B46     		mov	r3, r9
 1184 006a 0093     		str	r3, [sp]
 1185 006c 4346     		mov	r3, r8
 1186 006e 3A00     		movs	r2, r7
 1187 0070 0F49     		ldr	r1, .L33+12
ARM GAS  /tmp/cceQoDuR.s 			page 33


 1188 0072 3000     		movs	r0, r6
 1189 0074 FFF7FEFF 		bl	sprintf
 1190              	.LVL65:
 112:Core/Src/main.c **** 
 1191              		.loc 1 112 3 is_stmt 1 view .LVU335
 1192 0078 6021     		movs	r1, #96
 1193 007a 3000     		movs	r0, r6
 1194 007c FFF7FEFF 		bl	CDC_Transmit_FS
 1195              	.LVL66:
 114:Core/Src/main.c ****   HAL_SPI_Receive_DMA(&hspi1, (uint8_t *) &spidat, sizeof spidat);
 1196              		.loc 1 114 3 view .LVU336
 1197 0080 9020     		movs	r0, #144
 1198 0082 0022     		movs	r2, #0
 1199 0084 5521     		movs	r1, #85
 1200 0086 C005     		lsls	r0, r0, #23
 1201 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1202              	.LVL67:
 115:Core/Src/main.c **** }
 1203              		.loc 1 115 3 view .LVU337
 1204 008c 0422     		movs	r2, #4
 1205 008e 2900     		movs	r1, r5
 1206 0090 0848     		ldr	r0, .L33+16
 1207 0092 FFF7FEFF 		bl	HAL_SPI_Receive_DMA
 1208              	.LVL68:
 116:Core/Src/main.c **** 
 1209              		.loc 1 116 1 is_stmt 0 view .LVU338
 1210 0096 0BB0     		add	sp, sp, #44
 1211              		@ sp needed
 1212 0098 3CBC     		pop	{r2, r3, r4, r5}
 1213 009a 9046     		mov	r8, r2
 1214 009c 9946     		mov	r9, r3
 1215 009e A246     		mov	r10, r4
 1216 00a0 AB46     		mov	fp, r5
 1217 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1218              	.L34:
 1219              		.align	2
 1220              	.L33:
 1221 00a4 00000000 		.word	.LANCHOR0
 1222 00a8 00000000 		.word	tsv_str
 1223 00ac 00000000 		.word	.LANCHOR1
 1224 00b0 00000000 		.word	.LC8
 1225 00b4 00000000 		.word	hspi1
 1226              		.cfi_endproc
 1227              	.LFE46:
 1229              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 1230              		.align	1
 1231              		.global	HAL_SPI_RxCpltCallback
 1232              		.syntax unified
 1233              		.code	16
 1234              		.thumb_func
 1235              		.fpu softvfp
 1237              	HAL_SPI_RxCpltCallback:
 1238              	.LVL69:
 1239              	.LFB47:
 118:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin, GPIO_PIN_SET);
 1240              		.loc 1 118 54 is_stmt 1 view -0
 1241              		.cfi_startproc
ARM GAS  /tmp/cceQoDuR.s 			page 34


 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 0, uses_anonymous_args = 0
 118:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin, GPIO_PIN_SET);
 1244              		.loc 1 118 54 is_stmt 0 view .LVU340
 1245 0000 10B5     		push	{r4, lr}
 1246              	.LCFI18:
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 4, -8
 1249              		.cfi_offset 14, -4
 119:Core/Src/main.c **** }
 1250              		.loc 1 119 3 is_stmt 1 view .LVU341
 1251 0002 9020     		movs	r0, #144
 1252              	.LVL70:
 119:Core/Src/main.c **** }
 1253              		.loc 1 119 3 is_stmt 0 view .LVU342
 1254 0004 0122     		movs	r2, #1
 1255 0006 5521     		movs	r1, #85
 1256 0008 C005     		lsls	r0, r0, #23
 1257 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1258              	.LVL71:
 120:Core/Src/main.c **** 
 1259              		.loc 1 120 1 view .LVU343
 1260              		@ sp needed
 1261 000e 10BD     		pop	{r4, pc}
 1262              		.cfi_endproc
 1263              	.LFE47:
 1265              		.section	.text.SystemClock_Config,"ax",%progbits
 1266              		.align	1
 1267              		.global	SystemClock_Config
 1268              		.syntax unified
 1269              		.code	16
 1270              		.thumb_func
 1271              		.fpu softvfp
 1273              	SystemClock_Config:
 1274              	.LFB48:
 123:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1275              		.loc 1 123 1 is_stmt 1 view -0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 96
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279 0000 10B5     		push	{r4, lr}
 1280              	.LCFI19:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 4, -8
 1283              		.cfi_offset 14, -4
 1284 0002 98B0     		sub	sp, sp, #96
 1285              	.LCFI20:
 1286              		.cfi_def_cfa_offset 104
 124:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1287              		.loc 1 124 3 view .LVU345
 124:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1288              		.loc 1 124 22 is_stmt 0 view .LVU346
 1289 0004 3022     		movs	r2, #48
 1290 0006 0021     		movs	r1, #0
 1291 0008 0CA8     		add	r0, sp, #48
 1292 000a FFF7FEFF 		bl	memset
 1293              	.LVL72:
ARM GAS  /tmp/cceQoDuR.s 			page 35


 125:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1294              		.loc 1 125 3 is_stmt 1 view .LVU347
 125:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1295              		.loc 1 125 22 is_stmt 0 view .LVU348
 1296 000e 1024     		movs	r4, #16
 1297 0010 1022     		movs	r2, #16
 1298 0012 0021     		movs	r1, #0
 1299 0014 07A8     		add	r0, sp, #28
 1300 0016 FFF7FEFF 		bl	memset
 1301              	.LVL73:
 126:Core/Src/main.c **** 
 1302              		.loc 1 126 3 is_stmt 1 view .LVU349
 126:Core/Src/main.c **** 
 1303              		.loc 1 126 28 is_stmt 0 view .LVU350
 1304 001a 1C22     		movs	r2, #28
 1305 001c 0021     		movs	r1, #0
 1306 001e 6846     		mov	r0, sp
 1307 0020 FFF7FEFF 		bl	memset
 1308              	.LVL74:
 128:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 1309              		.loc 1 128 3 is_stmt 1 view .LVU351
 128:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 1310              		.loc 1 128 36 is_stmt 0 view .LVU352
 1311 0024 3223     		movs	r3, #50
 1312 0026 0B93     		str	r3, [sp, #44]
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 1313              		.loc 1 130 3 is_stmt 1 view .LVU353
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 1314              		.loc 1 130 30 is_stmt 0 view .LVU354
 1315 0028 313B     		subs	r3, r3, #49
 1316 002a 0E93     		str	r3, [sp, #56]
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1317              		.loc 1 131 3 is_stmt 1 view .LVU355
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1318              		.loc 1 131 32 is_stmt 0 view .LVU356
 1319 002c 1393     		str	r3, [sp, #76]
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1320              		.loc 1 132 3 is_stmt 1 view .LVU357
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1321              		.loc 1 132 32 is_stmt 0 view .LVU358
 1322 002e 1093     		str	r3, [sp, #64]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1323              		.loc 1 133 3 is_stmt 1 view .LVU359
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1324              		.loc 1 133 41 is_stmt 0 view .LVU360
 1325 0030 0F94     		str	r4, [sp, #60]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1326              		.loc 1 134 3 is_stmt 1 view .LVU361
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1327              		.loc 1 134 43 is_stmt 0 view .LVU362
 1328 0032 1194     		str	r4, [sp, #68]
 135:Core/Src/main.c ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 1329              		.loc 1 135 3 is_stmt 1 view .LVU363
 135:Core/Src/main.c ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 1330              		.loc 1 135 34 is_stmt 0 view .LVU364
 1331 0034 0024     		movs	r4, #0
 136:Core/Src/main.c **** 
ARM GAS  /tmp/cceQoDuR.s 			page 36


 1332              		.loc 1 136 3 is_stmt 1 view .LVU365
 1333 0036 0BA8     		add	r0, sp, #44
 1334 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1335              	.LVL75:
 140:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1336              		.loc 1 140 3 view .LVU366
 140:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1337              		.loc 1 140 31 is_stmt 0 view .LVU367
 1338 003c 0723     		movs	r3, #7
 1339 003e 0793     		str	r3, [sp, #28]
 142:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1340              		.loc 1 142 3 is_stmt 1 view .LVU368
 142:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1341              		.loc 1 142 34 is_stmt 0 view .LVU369
 1342 0040 043B     		subs	r3, r3, #4
 1343 0042 0893     		str	r3, [sp, #32]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1344              		.loc 1 143 3 is_stmt 1 view .LVU370
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1345              		.loc 1 143 35 is_stmt 0 view .LVU371
 1346 0044 0994     		str	r4, [sp, #36]
 144:Core/Src/main.c **** 
 1347              		.loc 1 144 3 is_stmt 1 view .LVU372
 144:Core/Src/main.c **** 
 1348              		.loc 1 144 36 is_stmt 0 view .LVU373
 1349 0046 0A94     		str	r4, [sp, #40]
 146:Core/Src/main.c **** 
 1350              		.loc 1 146 3 is_stmt 1 view .LVU374
 1351 0048 0121     		movs	r1, #1
 1352 004a 07A8     		add	r0, sp, #28
 1353 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1354              	.LVL76:
 149:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1355              		.loc 1 149 3 view .LVU375
 149:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1356              		.loc 1 149 38 is_stmt 0 view .LVU376
 1357 0050 044B     		ldr	r3, .L37
 1358 0052 0093     		str	r3, [sp]
 150:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 1359              		.loc 1 150 3 is_stmt 1 view .LVU377
 150:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 1360              		.loc 1 150 36 is_stmt 0 view .LVU378
 1361 0054 0494     		str	r4, [sp, #16]
 151:Core/Src/main.c **** 
 1362              		.loc 1 151 3 is_stmt 1 view .LVU379
 151:Core/Src/main.c **** 
 1363              		.loc 1 151 35 is_stmt 0 view .LVU380
 1364 0056 0694     		str	r4, [sp, #24]
 153:Core/Src/main.c **** 
 1365              		.loc 1 153 3 is_stmt 1 view .LVU381
 1366 0058 6846     		mov	r0, sp
 1367 005a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1368              	.LVL77:
 156:Core/Src/main.c **** 
 1369              		.loc 1 156 1 is_stmt 0 view .LVU382
 1370 005e 18B0     		add	sp, sp, #96
 1371              		@ sp needed
ARM GAS  /tmp/cceQoDuR.s 			page 37


 1372 0060 10BD     		pop	{r4, pc}
 1373              	.L38:
 1374 0062 C046     		.align	2
 1375              	.L37:
 1376 0064 20000200 		.word	131104
 1377              		.cfi_endproc
 1378              	.LFE48:
 1380              		.section	.text.main,"ax",%progbits
 1381              		.align	1
 1382              		.global	main
 1383              		.syntax unified
 1384              		.code	16
 1385              		.thumb_func
 1386              		.fpu softvfp
 1388              	main:
 1389              	.LFB43:
  41:Core/Src/main.c ****   HAL_Init();
 1390              		.loc 1 41 1 is_stmt 1 view -0
 1391              		.cfi_startproc
 1392              		@ Volatile: function does not return.
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395 0000 70B5     		push	{r4, r5, r6, lr}
 1396              	.LCFI21:
 1397              		.cfi_def_cfa_offset 16
 1398              		.cfi_offset 4, -16
 1399              		.cfi_offset 5, -12
 1400              		.cfi_offset 6, -8
 1401              		.cfi_offset 14, -4
  42:Core/Src/main.c ****   SystemClock_Config();
 1402              		.loc 1 42 3 view .LVU384
 1403 0002 FFF7FEFF 		bl	HAL_Init
 1404              	.LVL78:
  43:Core/Src/main.c ****   MX_GPIO_Init();
 1405              		.loc 1 43 3 view .LVU385
 1406 0006 FFF7FEFF 		bl	SystemClock_Config
 1407              	.LVL79:
  44:Core/Src/main.c ****   MX_DMA_Init();
 1408              		.loc 1 44 3 view .LVU386
 1409 000a FFF7FEFF 		bl	MX_GPIO_Init
 1410              	.LVL80:
  45:Core/Src/main.c ****   MX_SPI1_Init();
 1411              		.loc 1 45 3 view .LVU387
 1412 000e FFF7FEFF 		bl	MX_DMA_Init
 1413              	.LVL81:
  46:Core/Src/main.c ****   //MX_USB_PCD_Init();
 1414              		.loc 1 46 3 view .LVU388
 1415 0012 FFF7FEFF 		bl	MX_SPI1_Init
 1416              	.LVL82:
  48:Core/Src/main.c ****   MX_TIM1_Init();
 1417              		.loc 1 48 3 view .LVU389
 1418 0016 FFF7FEFF 		bl	MX_I2C1_Init
 1419              	.LVL83:
  49:Core/Src/main.c ****   MX_ADC_Init();
 1420              		.loc 1 49 3 view .LVU390
 1421 001a FFF7FEFF 		bl	MX_TIM1_Init
 1422              	.LVL84:
ARM GAS  /tmp/cceQoDuR.s 			page 38


  50:Core/Src/main.c ****   MX_TIM2_Init();
 1423              		.loc 1 50 3 view .LVU391
 1424 001e FFF7FEFF 		bl	MX_ADC_Init
 1425              	.LVL85:
  51:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 1426              		.loc 1 51 3 view .LVU392
 1427 0022 FFF7FEFF 		bl	MX_TIM2_Init
 1428              	.LVL86:
  52:Core/Src/main.c **** 
 1429              		.loc 1 52 3 view .LVU393
 1430 0026 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1431              	.LVL87:
  56:Core/Src/main.c ****   //HAL_TIM_Base_Start_IT(&htim1);
 1432              		.loc 1 56 3 view .LVU394
 1433 002a 0622     		movs	r2, #6
 1434 002c 1049     		ldr	r1, .L41
 1435 002e 1148     		ldr	r0, .L41+4
 1436 0030 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1437              	.LVL88:
  58:Core/Src/main.c ****   //GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin
 1438              		.loc 1 58 3 view .LVU395
 1439 0034 1048     		ldr	r0, .L41+8
 1440 0036 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1441              	.LVL89:
  61:Core/Src/main.c ****   //led_set(LED0, STATE_OFF);
 1442              		.loc 1 61 3 view .LVU396
 1443 003a 0125     		movs	r5, #1
 1444 003c 6D42     		rsbs	r5, r5, #0
 1445 003e 8020     		movs	r0, #128
 1446 0040 2900     		movs	r1, r5
 1447 0042 8000     		lsls	r0, r0, #2
 1448 0044 FFF7FEFF 		bl	led_set
 1449              	.LVL90:
  65:Core/Src/main.c ****   led_set(LED3, STATE_GREEN);
 1450              		.loc 1 65 3 view .LVU397
 1451 0048 8024     		movs	r4, #128
 1452 004a A401     		lsls	r4, r4, #6
 1453 004c 2900     		movs	r1, r5
 1454 004e 2000     		movs	r0, r4
 1455 0050 FFF7FEFF 		bl	led_set
 1456              	.LVL91:
  66:Core/Src/main.c **** 
 1457              		.loc 1 66 3 view .LVU398
 1458 0054 0121     		movs	r1, #1
 1459 0056 2000     		movs	r0, r4
 1460 0058 FFF7FEFF 		bl	led_set
 1461              	.LVL92:
 1462              	.L40:
  68:Core/Src/main.c ****   {
 1463              		.loc 1 68 3 discriminator 1 view .LVU399
  70:Core/Src/main.c ****     led_set(STATUS, STATE_OFF);
 1464              		.loc 1 70 5 discriminator 1 view .LVU400
 1465 005c 0A20     		movs	r0, #10
 1466 005e FFF7FEFF 		bl	HAL_Delay
 1467              	.LVL93:
  71:Core/Src/main.c ****   }
 1468              		.loc 1 71 5 discriminator 1 view .LVU401
ARM GAS  /tmp/cceQoDuR.s 			page 39


 1469 0062 0121     		movs	r1, #1
 1470 0064 8020     		movs	r0, #128
 1471 0066 4942     		rsbs	r1, r1, #0
 1472 0068 8000     		lsls	r0, r0, #2
 1473 006a FFF7FEFF 		bl	led_set
 1474              	.LVL94:
  68:Core/Src/main.c ****   {
 1475              		.loc 1 68 9 discriminator 1 view .LVU402
 1476 006e F5E7     		b	.L40
 1477              	.L42:
 1478              		.align	2
 1479              	.L41:
 1480 0070 00000000 		.word	.LANCHOR1
 1481 0074 00000000 		.word	hadc
 1482 0078 00000000 		.word	htim2
 1483              		.cfi_endproc
 1484              	.LFE43:
 1486              		.section	.text.Error_Handler,"ax",%progbits
 1487              		.align	1
 1488              		.global	Error_Handler
 1489              		.syntax unified
 1490              		.code	16
 1491              		.thumb_func
 1492              		.fpu softvfp
 1494              	Error_Handler:
 1495              	.LFB56:
 393:Core/Src/main.c **** 
 394:Core/Src/main.c **** void Error_Handler(void)
 395:Core/Src/main.c **** {
 1496              		.loc 1 395 1 view -0
 1497              		.cfi_startproc
 1498              		@ Volatile: function does not return.
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
 1501              		@ link register save eliminated.
 396:Core/Src/main.c ****   __disable_irq();
 1502              		.loc 1 396 3 view .LVU404
 1503              	.LBB10:
 1504              	.LBI10:
 1505              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/cceQoDuR.s 			page 40


  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  /tmp/cceQoDuR.s 			page 41


  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  /tmp/cceQoDuR.s 			page 42


 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1506              		.loc 2 140 27 view .LVU405
 1507              	.LBB11:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1508              		.loc 2 142 3 view .LVU406
 1509              		.syntax divided
 1510              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1511 0000 72B6     		cpsid i
 1512              	@ 0 "" 2
 1513              		.thumb
 1514              		.syntax unified
 1515              	.L44:
 1516              	.LBE11:
 1517              	.LBE10:
 397:Core/Src/main.c ****   while (1)
 1518              		.loc 1 397 3 discriminator 1 view .LVU407
 398:Core/Src/main.c ****   {
 399:Core/Src/main.c ****   }
 1519              		.loc 1 399 3 discriminator 1 view .LVU408
 397:Core/Src/main.c ****   while (1)
 1520              		.loc 1 397 9 discriminator 1 view .LVU409
 1521 0002 FEE7     		b	.L44
 1522              		.cfi_endproc
 1523              	.LFE56:
 1525              		.comm	temp_int,4,4
 1526              		.comm	tsv_str,96,4
 1527              		.comm	htim2,72,4
 1528              		.comm	htim1,72,4
 1529              		.comm	hdma_spi1_rx,68,4
 1530              		.comm	hspi1,100,4
 1531              		.comm	hdma_i2c1_tx,68,4
 1532              		.comm	hdma_i2c1_rx,68,4
 1533              		.comm	hi2c1,76,4
 1534              		.comm	hdma_adc,68,4
 1535              		.comm	hadc,64,4
 1536              		.section	.bss.adc,"aw",%nobits
 1537              		.align	2
 1538              		.set	.LANCHOR1,. + 0
 1541              	adc:
 1542 0000 00000000 		.space	24
 1542      00000000 
 1542      00000000 
 1542      00000000 
 1542      00000000 
 1543              		.section	.bss.spidat,"aw",%nobits
 1544              		.align	2
 1545              		.set	.LANCHOR0,. + 0
 1548              	spidat:
ARM GAS  /tmp/cceQoDuR.s 			page 43


 1549 0000 00000000 		.space	4
 1550              		.text
 1551              	.Letext0:
 1552              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1553              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1554              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1555              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1556              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1557              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1558              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 1559              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1560              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1561              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 1562              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 1563              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 1564              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 1565              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1566              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1567              		.file 18 "/usr/include/newlib/sys/_types.h"
 1568              		.file 19 "/usr/include/newlib/sys/reent.h"
 1569              		.file 20 "/usr/include/newlib/sys/lock.h"
 1570              		.file 21 "/usr/include/newlib/stdlib.h"
 1571              		.file 22 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 1572              		.file 23 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 1573              		.file 24 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c_ex.h"
 1574              		.file 25 "Core/Inc/led.h"
 1575              		.file 26 "/usr/include/newlib/stdio.h"
 1576              		.file 27 "USB_DEVICE/App/usb_device.h"
 1577              		.file 28 "<built-in>"
ARM GAS  /tmp/cceQoDuR.s 			page 44


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cceQoDuR.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cceQoDuR.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cceQoDuR.s:260    .text.MX_GPIO_Init:0000000000000104 $d
     /tmp/cceQoDuR.s:269    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/cceQoDuR.s:275    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/cceQoDuR.s:342    .text.MX_DMA_Init:000000000000004c $d
     /tmp/cceQoDuR.s:347    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/cceQoDuR.s:353    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/cceQoDuR.s:430    .text.MX_SPI1_Init:0000000000000044 $d
                            *COM*:0000000000000064 hspi1
     /tmp/cceQoDuR.s:436    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/cceQoDuR.s:442    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/cceQoDuR.s:507    .text.MX_I2C1_Init:000000000000003c $d
                            *COM*:000000000000004c hi2c1
     /tmp/cceQoDuR.s:514    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/cceQoDuR.s:520    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/cceQoDuR.s:607    .text.MX_TIM2_Init:0000000000000058 $d
                            *COM*:0000000000000048 htim2
     /tmp/cceQoDuR.s:614    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/cceQoDuR.s:620    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/cceQoDuR.s:783    .text.MX_TIM1_Init:00000000000000a8 $d
                            *COM*:0000000000000048 htim1
     /tmp/cceQoDuR.s:789    .text.MX_ADC_Init:0000000000000000 $t
     /tmp/cceQoDuR.s:795    .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/cceQoDuR.s:940    .text.MX_ADC_Init:0000000000000094 $d
                            *COM*:0000000000000040 hadc
     /tmp/cceQoDuR.s:948    .text.MAX31855_get_tcold:0000000000000000 $t
     /tmp/cceQoDuR.s:955    .text.MAX31855_get_tcold:0000000000000000 MAX31855_get_tcold
     /tmp/cceQoDuR.s:1014   .text.MAX31855_get_tcold:0000000000000024 $d
     /tmp/cceQoDuR.s:1022   .text.MAX31855_get_twarm:0000000000000000 $t
     /tmp/cceQoDuR.s:1029   .text.MAX31855_get_twarm:0000000000000000 MAX31855_get_twarm
     /tmp/cceQoDuR.s:1082   .text.MAX31855_get_twarm:0000000000000024 $d
     /tmp/cceQoDuR.s:1088   .rodata.temp_timer.str1.4:0000000000000000 $d
     /tmp/cceQoDuR.s:1094   .text.temp_timer:0000000000000000 $t
     /tmp/cceQoDuR.s:1101   .text.temp_timer:0000000000000000 temp_timer
     /tmp/cceQoDuR.s:1221   .text.temp_timer:00000000000000a4 $d
                            *COM*:0000000000000060 tsv_str
     /tmp/cceQoDuR.s:1230   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/cceQoDuR.s:1237   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/cceQoDuR.s:1266   .text.SystemClock_Config:0000000000000000 $t
     /tmp/cceQoDuR.s:1273   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cceQoDuR.s:1376   .text.SystemClock_Config:0000000000000064 $d
     /tmp/cceQoDuR.s:1381   .text.main:0000000000000000 $t
     /tmp/cceQoDuR.s:1388   .text.main:0000000000000000 main
     /tmp/cceQoDuR.s:1480   .text.main:0000000000000070 $d
     /tmp/cceQoDuR.s:1487   .text.Error_Handler:0000000000000000 $t
     /tmp/cceQoDuR.s:1494   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000004 temp_int
                            *COM*:0000000000000044 hdma_spi1_rx
                            *COM*:0000000000000044 hdma_i2c1_tx
                            *COM*:0000000000000044 hdma_i2c1_rx
                            *COM*:0000000000000044 hdma_adc
     /tmp/cceQoDuR.s:1537   .bss.adc:0000000000000000 $d
     /tmp/cceQoDuR.s:1541   .bss.adc:0000000000000000 adc
     /tmp/cceQoDuR.s:1544   .bss.spidat:0000000000000000 $d
ARM GAS  /tmp/cceQoDuR.s 			page 45


     /tmp/cceQoDuR.s:1548   .bss.spidat:0000000000000000 spidat

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_Init
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_ADC_Init
HAL_ADC_ConfigChannel
__aeabi_i2f
__aeabi_fmul
__aeabi_i2d
__aeabi_dmul
__aeabi_d2f
__aeabi_f2d
led_set
sprintf
CDC_Transmit_FS
HAL_SPI_Receive_DMA
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
HAL_ADC_Start_DMA
HAL_TIM_Base_Start_IT
HAL_Delay
