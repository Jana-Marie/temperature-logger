ARM GAS  /tmp/ccvGflfM.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB58:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** #include "main.h"
   2:Core/Src/main.c **** #include "led.h"
   3:Core/Src/main.c **** #include "usb_device.h"
   4:Core/Src/main.c **** 
   5:Core/Src/main.c **** ADC_HandleTypeDef hadc;
   6:Core/Src/main.c **** DMA_HandleTypeDef hdma_adc;
   7:Core/Src/main.c **** 
   8:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
   9:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c1_rx;
  10:Core/Src/main.c **** DMA_HandleTypeDef hdma_i2c1_tx;
  11:Core/Src/main.c **** 
  12:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  13:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_rx;
  14:Core/Src/main.c **** 
  15:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  16:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  17:Core/Src/main.c **** 
  18:Core/Src/main.c **** void SystemClock_Config(void);
  19:Core/Src/main.c **** static void MX_GPIO_Init(void);
  20:Core/Src/main.c **** static void MX_DMA_Init(void);
  21:Core/Src/main.c **** static void MX_SPI1_Init(void);
  22:Core/Src/main.c **** //static void MX_USB_PCD_Init(void);
  23:Core/Src/main.c **** static void MX_I2C1_Init(void);
  24:Core/Src/main.c **** static void MX_TIM1_Init(void);
  25:Core/Src/main.c **** static void MX_ADC_Init(void);
  26:Core/Src/main.c **** static void MX_TIM2_Init(void);
  27:Core/Src/main.c **** void temp_timer(void);
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** extern uint8_t CDC_Transmit_FS(uint8_t* Buf, uint16_t Len);
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** float MAX31855_get_tcold(int32_t data);
  32:Core/Src/main.c **** float MAX31855_get_twarm(int32_t data);
  33:Core/Src/main.c **** 
ARM GAS  /tmp/ccvGflfM.s 			page 2


  34:Core/Src/main.c **** float lsb_to_temp(uint16_t lsb);
  35:Core/Src/main.c **** uint32_t lsb_to_volt(uint16_t lsb);
  36:Core/Src/main.c **** float volt_to_temp(uint32_t volt);
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** static uint32_t adc[6];
  39:Core/Src/main.c **** static uint32_t vadc[6];
  40:Core/Src/main.c **** float tp[6];
  41:Core/Src/main.c **** char tsv_str[96];
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** static uint32_t spidat;
  44:Core/Src/main.c **** float temp_int;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** int main(void)
  47:Core/Src/main.c **** {
  48:Core/Src/main.c ****   HAL_Init();
  49:Core/Src/main.c ****   SystemClock_Config();
  50:Core/Src/main.c ****   MX_GPIO_Init();
  51:Core/Src/main.c ****   MX_DMA_Init();
  52:Core/Src/main.c ****   MX_SPI1_Init();
  53:Core/Src/main.c ****   //MX_USB_PCD_Init();
  54:Core/Src/main.c ****   MX_I2C1_Init();
  55:Core/Src/main.c ****   MX_TIM1_Init();
  56:Core/Src/main.c ****   MX_ADC_Init();
  57:Core/Src/main.c ****   MX_TIM2_Init();
  58:Core/Src/main.c ****   MX_USB_DEVICE_Init();
  59:Core/Src/main.c **** 
  60:Core/Src/main.c ****   //MX_USB_HID_INIT();
  61:Core/Src/main.c **** 
  62:Core/Src/main.c ****   HAL_ADC_Start_DMA(&hadc, adc, 6);
  63:Core/Src/main.c ****   //HAL_TIM_Base_Start_IT(&htim1);
  64:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
  65:Core/Src/main.c ****   //GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   led_set(STATUS, STATE_OFF);
  68:Core/Src/main.c ****   led_set(LED0, STATE_OFF);
  69:Core/Src/main.c ****   led_set(LED1, STATE_OFF);
  70:Core/Src/main.c ****   led_set(LED2, STATE_OFF);
  71:Core/Src/main.c ****   led_set(LED3, STATE_OFF);
  72:Core/Src/main.c ****   //led_set(LED3, STATE_GREEN);
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   while (1)
  75:Core/Src/main.c ****   {
  76:Core/Src/main.c ****   }
  77:Core/Src/main.c **** }
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** // MAX31855
  80:Core/Src/main.c **** float MAX31855_get_tcold(int32_t data){
  81:Core/Src/main.c ****   data >>= 4;
  82:Core/Src/main.c ****   float internal = data & 0x7FF;
  83:Core/Src/main.c ****   if (data & 0x800) {
  84:Core/Src/main.c ****     int16_t tmp = 0xF800 | (data & 0x7FF);
  85:Core/Src/main.c ****     internal = tmp;
  86:Core/Src/main.c ****   }
  87:Core/Src/main.c ****   internal *= 0.0625; // LSB = 0.0625 degrees
  88:Core/Src/main.c ****   return internal;
  89:Core/Src/main.c **** }
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccvGflfM.s 			page 3


  91:Core/Src/main.c **** float MAX31855_get_twarm(int32_t data){
  92:Core/Src/main.c ****   if (data & 0x80000000) {
  93:Core/Src/main.c ****     data = 0xFFFFC000 | ((data >> 18) & 0x00003FFF);
  94:Core/Src/main.c ****   } else {
  95:Core/Src/main.c ****     data >>= 18;
  96:Core/Src/main.c ****   }
  97:Core/Src/main.c ****   double cent = data * 0.25; //does not work with float, wtf // LSB = 0.25 degrees
  98:Core/Src/main.c ****   return (float)cent;
  99:Core/Src/main.c **** }
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** // NTC - OPAMP
 102:Core/Src/main.c **** float lsb_to_temp(uint16_t lsb){
 103:Core/Src/main.c ****   float v = (lsb/4095.0)*3.3;
 104:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 105:Core/Src/main.c **** }
 106:Core/Src/main.c **** 
 107:Core/Src/main.c **** float volt_to_temp(uint32_t volt){
 108:Core/Src/main.c ****   float v = volt/1000.0;
 109:Core/Src/main.c ****   return 23.1 + (7.73*v) + (0.247*(v*v));
 110:Core/Src/main.c **** }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** uint32_t lsb_to_volt(uint16_t lsb){
 113:Core/Src/main.c ****   uint32_t v = (lsb*3300)/4095;
 114:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 115:Core/Src/main.c **** }
 116:Core/Src/main.c **** 
 117:Core/Src/main.c **** // Interrupt
 118:Core/Src/main.c **** void temp_timer(){
 119:Core/Src/main.c ****   led_set(STATUS, STATE_GREEN);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****   spidat = __builtin_bswap32(spidat);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   for(uint8_t i = 0; i <=5; i++){
 124:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 125:Core/Src/main.c ****   }
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   for(uint8_t i = 0; i <=5; i++){
 128:Core/Src/main.c ****     tp[i] = volt_to_temp(vadc[i]);
 129:Core/Src/main.c ****   }
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   memset(tsv_str, 0, sizeof tsv_str);
 132:Core/Src/main.c ****   sprintf(tsv_str, "%.4f\t%.4f\t%.4f\t%.4f\t%lu\n\r", tp[0], tp[1], tp[2], tp[3],HAL_GetTick());
 133:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin, GPIO_PIN_RESET);
 136:Core/Src/main.c ****   HAL_SPI_Receive_DMA(&hspi1, (uint8_t *) &spidat, sizeof spidat);
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   led_set(STATUS, STATE_OFF);
 139:Core/Src/main.c **** }
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** void HAL_SPI_RxCpltCallback(SPI_HandleTypeDef * hspi){
 142:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin, GPIO_PIN_SET);
 143:Core/Src/main.c **** }
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** void SystemClock_Config(void)
 146:Core/Src/main.c **** {
 147:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
ARM GAS  /tmp/ccvGflfM.s 			page 4


 148:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 149:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSI14
 152:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 159:Core/Src/main.c ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 164:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 165:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI48;
 166:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 167:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1);
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** 
 172:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB|RCC_PERIPHCLK_I2C1;
 173:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 174:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 177:Core/Src/main.c **** 
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** static void MX_ADC_Init(void)
 182:Core/Src/main.c **** {
 183:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   hadc.Instance = ADC1;
 186:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 187:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 188:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 189:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 190:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 191:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 192:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 193:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 194:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 195:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;//ADC_SOFTWARE_START
 196:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 197:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 198:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 199:Core/Src/main.c ****   HAL_ADC_Init(&hadc);
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_1;
 202:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 203:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 204:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
ARM GAS  /tmp/ccvGflfM.s 			page 5


 205:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 206:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 207:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 208:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 209:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 210:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 211:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_8;
 212:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 213:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 214:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 215:Core/Src/main.c **** }
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** static void MX_I2C1_Init(void)
 218:Core/Src/main.c **** {
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 221:Core/Src/main.c ****   hi2c1.Init.Timing = 0x0000020B;
 222:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 84;
 223:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 224:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 225:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 226:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 227:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 228:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 229:Core/Src/main.c ****   HAL_I2C_Init(&hi2c1);
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** 
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE);
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0);
 238:Core/Src/main.c **** 
 239:Core/Src/main.c **** 
 240:Core/Src/main.c **** }
 241:Core/Src/main.c **** 
 242:Core/Src/main.c **** static void MX_SPI1_Init(void)
 243:Core/Src/main.c **** {
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   hspi1.Instance = SPI1;
 246:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 247:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 248:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 249:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 250:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 251:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 252:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 253:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 254:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 255:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 256:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 257:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 258:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 259:Core/Src/main.c ****   HAL_SPI_Init(&hspi1);
 260:Core/Src/main.c **** 
 261:Core/Src/main.c **** 
ARM GAS  /tmp/ccvGflfM.s 			page 6


 262:Core/Src/main.c **** }
 263:Core/Src/main.c **** 
 264:Core/Src/main.c **** static void MX_TIM1_Init(void)
 265:Core/Src/main.c **** {
 266:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 267:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 268:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 269:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****   htim1.Instance = TIM1;
 272:Core/Src/main.c ****   htim1.Init.Prescaler = 16;
 273:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 274:Core/Src/main.c ****   htim1.Init.Period = 1024;
 275:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 276:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 277:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 278:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim1);
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 282:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   HAL_TIM_OC_Init(&htim1);
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 289:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 290:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** 
 293:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 294:Core/Src/main.c ****   sConfigOC.Pulse = 100;
 295:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 296:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 297:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 298:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 299:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 300:Core/Src/main.c ****   HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1);
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 304:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 305:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 306:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 307:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 308:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 309:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 310:Core/Src/main.c ****   HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig);
 311:Core/Src/main.c **** 
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** }
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** static void MX_TIM2_Init(void)
 316:Core/Src/main.c **** {
 317:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 318:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  /tmp/ccvGflfM.s 			page 7


 319:Core/Src/main.c **** 
 320:Core/Src/main.c ****   htim2.Instance = TIM2;
 321:Core/Src/main.c ****   htim2.Init.Prescaler = 9999;
 322:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 323:Core/Src/main.c ****   htim2.Init.Period = 479; //100ms
 324:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 325:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 326:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim2);
 327:Core/Src/main.c **** 
 328:Core/Src/main.c **** 
 329:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 330:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 331:Core/Src/main.c **** 
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_UPDATE;
 334:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 335:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** 
 338:Core/Src/main.c **** }
 339:Core/Src/main.c **** /*
 340:Core/Src/main.c **** static void MX_USB_PCD_Init(void)
 341:Core/Src/main.c **** {
 342:Core/Src/main.c ****   hpcd_USB_FS.Instance = USB;
 343:Core/Src/main.c ****   hpcd_USB_FS.Init.dev_endpoints = 8;
 344:Core/Src/main.c ****   hpcd_USB_FS.Init.speed = PCD_SPEED_FULL;
 345:Core/Src/main.c ****   hpcd_USB_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 346:Core/Src/main.c ****   hpcd_USB_FS.Init.low_power_enable = DISABLE;
 347:Core/Src/main.c ****   hpcd_USB_FS.Init.lpm_enable = DISABLE;
 348:Core/Src/main.c ****   hpcd_USB_FS.Init.battery_charging_enable = DISABLE;
 349:Core/Src/main.c ****   HAL_PCD_Init(&hpcd_USB_FS);
 350:Core/Src/main.c **** 
 351:Core/Src/main.c **** 
 352:Core/Src/main.c **** }*/
 353:Core/Src/main.c **** 
 354:Core/Src/main.c **** static void MX_DMA_Init(void)
 355:Core/Src/main.c **** {
 356:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 0, 0);
 359:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 360:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 361:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 362:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel4_5_6_7_IRQn, 0, 0);
 363:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_5_6_7_IRQn);
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** }
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** static void MX_GPIO_Init(void)
 368:Core/Src/main.c **** {
  26              		.loc 1 368 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 40
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccvGflfM.s 			page 8


  33              		.cfi_offset 4, -20
  34              		.cfi_offset 5, -16
  35              		.cfi_offset 6, -12
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 D646     		mov	lr, r10
  39 0004 4F46     		mov	r7, r9
  40 0006 4646     		mov	r6, r8
  41 0008 C0B5     		push	{r6, r7, lr}
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
  44              		.cfi_offset 8, -32
  45              		.cfi_offset 9, -28
  46              		.cfi_offset 10, -24
  47 000a 8AB0     		sub	sp, sp, #40
  48              	.LCFI2:
  49              		.cfi_def_cfa_offset 72
 369:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  50              		.loc 1 369 3 view .LVU1
  51              		.loc 1 369 20 is_stmt 0 view .LVU2
  52 000c 1422     		movs	r2, #20
  53 000e 0021     		movs	r1, #0
  54 0010 05A8     		add	r0, sp, #20
  55 0012 FFF7FEFF 		bl	memset
  56              	.LVL0:
 370:Core/Src/main.c **** 
 371:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  57              		.loc 1 371 3 is_stmt 1 view .LVU3
  58              	.LBB4:
  59              		.loc 1 371 3 view .LVU4
  60              		.loc 1 371 3 view .LVU5
  61 0016 3B4B     		ldr	r3, .L2
  62 0018 5969     		ldr	r1, [r3, #20]
  63 001a 8020     		movs	r0, #128
  64 001c 0003     		lsls	r0, r0, #12
  65 001e 0143     		orrs	r1, r0
  66 0020 5961     		str	r1, [r3, #20]
  67              		.loc 1 371 3 view .LVU6
  68 0022 5A69     		ldr	r2, [r3, #20]
  69 0024 0240     		ands	r2, r0
  70 0026 0192     		str	r2, [sp, #4]
  71              		.loc 1 371 3 view .LVU7
  72 0028 019A     		ldr	r2, [sp, #4]
  73              	.LBE4:
  74              		.loc 1 371 3 view .LVU8
 372:Core/Src/main.c ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  75              		.loc 1 372 3 view .LVU9
  76              	.LBB5:
  77              		.loc 1 372 3 view .LVU10
  78              		.loc 1 372 3 view .LVU11
  79 002a 5969     		ldr	r1, [r3, #20]
  80 002c 8020     		movs	r0, #128
  81 002e C003     		lsls	r0, r0, #15
  82 0030 0143     		orrs	r1, r0
  83 0032 5961     		str	r1, [r3, #20]
  84              		.loc 1 372 3 view .LVU12
  85 0034 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/ccvGflfM.s 			page 9


  86 0036 0240     		ands	r2, r0
  87 0038 0292     		str	r2, [sp, #8]
  88              		.loc 1 372 3 view .LVU13
  89 003a 029A     		ldr	r2, [sp, #8]
  90              	.LBE5:
  91              		.loc 1 372 3 view .LVU14
 373:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  92              		.loc 1 373 3 view .LVU15
  93              	.LBB6:
  94              		.loc 1 373 3 view .LVU16
  95              		.loc 1 373 3 view .LVU17
  96 003c 5969     		ldr	r1, [r3, #20]
  97 003e 8020     		movs	r0, #128
  98 0040 8002     		lsls	r0, r0, #10
  99 0042 0143     		orrs	r1, r0
 100 0044 5961     		str	r1, [r3, #20]
 101              		.loc 1 373 3 view .LVU18
 102 0046 5A69     		ldr	r2, [r3, #20]
 103 0048 0240     		ands	r2, r0
 104 004a 0392     		str	r2, [sp, #12]
 105              		.loc 1 373 3 view .LVU19
 106 004c 039A     		ldr	r2, [sp, #12]
 107              	.LBE6:
 108              		.loc 1 373 3 view .LVU20
 374:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 109              		.loc 1 374 3 view .LVU21
 110              	.LBB7:
 111              		.loc 1 374 3 view .LVU22
 112              		.loc 1 374 3 view .LVU23
 113 004e 5A69     		ldr	r2, [r3, #20]
 114 0050 8021     		movs	r1, #128
 115 0052 C902     		lsls	r1, r1, #11
 116 0054 0A43     		orrs	r2, r1
 117 0056 5A61     		str	r2, [r3, #20]
 118              		.loc 1 374 3 view .LVU24
 119 0058 5B69     		ldr	r3, [r3, #20]
 120 005a 0B40     		ands	r3, r1
 121 005c 0493     		str	r3, [sp, #16]
 122              		.loc 1 374 3 view .LVU25
 123 005e 049B     		ldr	r3, [sp, #16]
 124              	.LBE7:
 125              		.loc 1 374 3 view .LVU26
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOC, LED3_Pin|LED2_Pin|LED1_Pin, GPIO_PIN_RESET);
 126              		.loc 1 376 3 view .LVU27
 127 0060 E024     		movs	r4, #224
 128 0062 2402     		lsls	r4, r4, #8
 129 0064 284B     		ldr	r3, .L2+4
 130 0066 9A46     		mov	r10, r3
 131 0068 0022     		movs	r2, #0
 132 006a 2100     		movs	r1, r4
 133 006c 1800     		movs	r0, r3
 134 006e FFF7FEFF 		bl	HAL_GPIO_WritePin
 135              	.LVL1:
 377:Core/Src/main.c **** 
 378:Core/Src/main.c ****   HAL_GPIO_WritePin(LED0_GPIO_Port, LED0_Pin, GPIO_PIN_RESET);
 136              		.loc 1 378 3 view .LVU28
ARM GAS  /tmp/ccvGflfM.s 			page 10


 137 0072 264B     		ldr	r3, .L2+8
 138 0074 9946     		mov	r9, r3
 139 0076 0022     		movs	r2, #0
 140 0078 0121     		movs	r1, #1
 141 007a 1800     		movs	r0, r3
 142 007c FFF7FEFF 		bl	HAL_GPIO_WritePin
 143              	.LVL2:
 379:Core/Src/main.c **** 
 380:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin
 144              		.loc 1 380 3 view .LVU29
 145 0080 234B     		ldr	r3, .L2+12
 146 0082 9846     		mov	r8, r3
 147 0084 9026     		movs	r6, #144
 148 0086 F605     		lsls	r6, r6, #23
 149 0088 0022     		movs	r2, #0
 150 008a 1900     		movs	r1, r3
 151 008c 3000     		movs	r0, r6
 152 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 153              	.LVL3:
 381:Core/Src/main.c ****                           |LED_STATUS_Pin|OUT_nSLEEP_Pin, GPIO_PIN_RESET);
 382:Core/Src/main.c **** 
 383:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, OUT0_Pin|OUT1_Pin|OUT2_Pin, GPIO_PIN_RESET);
 154              		.loc 1 383 3 view .LVU30
 155 0092 204F     		ldr	r7, .L2+16
 156 0094 0022     		movs	r2, #0
 157 0096 E021     		movs	r1, #224
 158 0098 3800     		movs	r0, r7
 159 009a FFF7FEFF 		bl	HAL_GPIO_WritePin
 160              	.LVL4:
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED3_Pin|LED2_Pin|LED1_Pin;
 161              		.loc 1 385 3 view .LVU31
 162              		.loc 1 385 23 is_stmt 0 view .LVU32
 163 009e 0594     		str	r4, [sp, #20]
 386:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 164              		.loc 1 386 3 is_stmt 1 view .LVU33
 165              		.loc 1 386 24 is_stmt 0 view .LVU34
 166 00a0 0125     		movs	r5, #1
 167 00a2 0695     		str	r5, [sp, #24]
 387:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 168              		.loc 1 387 3 is_stmt 1 view .LVU35
 169              		.loc 1 387 24 is_stmt 0 view .LVU36
 170 00a4 0024     		movs	r4, #0
 171 00a6 0794     		str	r4, [sp, #28]
 388:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 172              		.loc 1 388 3 is_stmt 1 view .LVU37
 173              		.loc 1 388 25 is_stmt 0 view .LVU38
 174 00a8 0894     		str	r4, [sp, #32]
 389:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 175              		.loc 1 389 3 is_stmt 1 view .LVU39
 176 00aa 05A9     		add	r1, sp, #20
 177 00ac 5046     		mov	r0, r10
 178 00ae FFF7FEFF 		bl	HAL_GPIO_Init
 179              	.LVL5:
 390:Core/Src/main.c **** 
 391:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED0_Pin;
 180              		.loc 1 391 3 view .LVU40
ARM GAS  /tmp/ccvGflfM.s 			page 11


 181              		.loc 1 391 23 is_stmt 0 view .LVU41
 182 00b2 0595     		str	r5, [sp, #20]
 392:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 183              		.loc 1 392 3 is_stmt 1 view .LVU42
 184              		.loc 1 392 24 is_stmt 0 view .LVU43
 185 00b4 0695     		str	r5, [sp, #24]
 393:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 186              		.loc 1 393 3 is_stmt 1 view .LVU44
 187              		.loc 1 393 24 is_stmt 0 view .LVU45
 188 00b6 0794     		str	r4, [sp, #28]
 394:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 189              		.loc 1 394 3 is_stmt 1 view .LVU46
 190              		.loc 1 394 25 is_stmt 0 view .LVU47
 191 00b8 0894     		str	r4, [sp, #32]
 395:Core/Src/main.c ****   HAL_GPIO_Init(LED0_GPIO_Port, &GPIO_InitStruct);
 192              		.loc 1 395 3 is_stmt 1 view .LVU48
 193 00ba 05A9     		add	r1, sp, #20
 194 00bc 4846     		mov	r0, r9
 195 00be FFF7FEFF 		bl	HAL_GPIO_Init
 196              	.LVL6:
 396:Core/Src/main.c **** 
 397:Core/Src/main.c ****   GPIO_InitStruct.Pin = NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin
 197              		.loc 1 397 3 view .LVU49
 198              		.loc 1 397 23 is_stmt 0 view .LVU50
 199 00c2 4346     		mov	r3, r8
 200 00c4 0593     		str	r3, [sp, #20]
 398:Core/Src/main.c ****                           |LED_STATUS_Pin|OUT_nSLEEP_Pin;
 399:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 201              		.loc 1 399 3 is_stmt 1 view .LVU51
 202              		.loc 1 399 24 is_stmt 0 view .LVU52
 203 00c6 0695     		str	r5, [sp, #24]
 400:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 204              		.loc 1 400 3 is_stmt 1 view .LVU53
 205              		.loc 1 400 24 is_stmt 0 view .LVU54
 206 00c8 0794     		str	r4, [sp, #28]
 401:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 207              		.loc 1 401 3 is_stmt 1 view .LVU55
 208              		.loc 1 401 25 is_stmt 0 view .LVU56
 209 00ca 0894     		str	r4, [sp, #32]
 402:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 210              		.loc 1 402 3 is_stmt 1 view .LVU57
 211 00cc 05A9     		add	r1, sp, #20
 212 00ce 3000     		movs	r0, r6
 213 00d0 FFF7FEFF 		bl	HAL_GPIO_Init
 214              	.LVL7:
 403:Core/Src/main.c **** 
 404:Core/Src/main.c ****   GPIO_InitStruct.Pin = SW_SCPI_CSV_Pin;
 215              		.loc 1 404 3 view .LVU58
 216              		.loc 1 404 23 is_stmt 0 view .LVU59
 217 00d4 8023     		movs	r3, #128
 218 00d6 DB00     		lsls	r3, r3, #3
 219 00d8 0593     		str	r3, [sp, #20]
 405:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 220              		.loc 1 405 3 is_stmt 1 view .LVU60
 221              		.loc 1 405 24 is_stmt 0 view .LVU61
 222 00da 0694     		str	r4, [sp, #24]
 406:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccvGflfM.s 			page 12


 223              		.loc 1 406 3 is_stmt 1 view .LVU62
 224              		.loc 1 406 24 is_stmt 0 view .LVU63
 225 00dc 0794     		str	r4, [sp, #28]
 407:Core/Src/main.c ****   HAL_GPIO_Init(SW_SCPI_CSV_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 407 3 is_stmt 1 view .LVU64
 227 00de 05A9     		add	r1, sp, #20
 228 00e0 3000     		movs	r0, r6
 229 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL8:
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   GPIO_InitStruct.Pin = OUT0_Pin|OUT1_Pin|OUT2_Pin;
 231              		.loc 1 409 3 view .LVU65
 232              		.loc 1 409 23 is_stmt 0 view .LVU66
 233 00e6 E023     		movs	r3, #224
 234 00e8 0593     		str	r3, [sp, #20]
 410:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 235              		.loc 1 410 3 is_stmt 1 view .LVU67
 236              		.loc 1 410 24 is_stmt 0 view .LVU68
 237 00ea 0695     		str	r5, [sp, #24]
 411:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 238              		.loc 1 411 3 is_stmt 1 view .LVU69
 239              		.loc 1 411 24 is_stmt 0 view .LVU70
 240 00ec 0794     		str	r4, [sp, #28]
 412:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 241              		.loc 1 412 3 is_stmt 1 view .LVU71
 242              		.loc 1 412 25 is_stmt 0 view .LVU72
 243 00ee 0894     		str	r4, [sp, #32]
 413:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 244              		.loc 1 413 3 is_stmt 1 view .LVU73
 245 00f0 05A9     		add	r1, sp, #20
 246 00f2 3800     		movs	r0, r7
 247 00f4 FFF7FEFF 		bl	HAL_GPIO_Init
 248              	.LVL9:
 414:Core/Src/main.c **** 
 415:Core/Src/main.c **** }
 249              		.loc 1 415 1 is_stmt 0 view .LVU74
 250 00f8 0AB0     		add	sp, sp, #40
 251              		@ sp needed
 252 00fa 1CBC     		pop	{r2, r3, r4}
 253 00fc 9046     		mov	r8, r2
 254 00fe 9946     		mov	r9, r3
 255 0100 A246     		mov	r10, r4
 256 0102 F0BD     		pop	{r4, r5, r6, r7, pc}
 257              	.L3:
 258              		.align	2
 259              	.L2:
 260 0104 00100240 		.word	1073876992
 261 0108 00080048 		.word	1207961600
 262 010c 00140048 		.word	1207964672
 263 0110 55820000 		.word	33365
 264 0114 00040048 		.word	1207960576
 265              		.cfi_endproc
 266              	.LFE58:
 268              		.section	.text.MX_DMA_Init,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.code	16
ARM GAS  /tmp/ccvGflfM.s 			page 13


 272              		.thumb_func
 273              		.fpu softvfp
 275              	MX_DMA_Init:
 276              	.LFB57:
 355:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 277              		.loc 1 355 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 00B5     		push	{lr}
 282              	.LCFI3:
 283              		.cfi_def_cfa_offset 4
 284              		.cfi_offset 14, -4
 285 0002 83B0     		sub	sp, sp, #12
 286              	.LCFI4:
 287              		.cfi_def_cfa_offset 16
 356:Core/Src/main.c **** 
 288              		.loc 1 356 3 view .LVU76
 289              	.LBB8:
 356:Core/Src/main.c **** 
 290              		.loc 1 356 3 view .LVU77
 356:Core/Src/main.c **** 
 291              		.loc 1 356 3 view .LVU78
 292 0004 114A     		ldr	r2, .L5
 293 0006 5169     		ldr	r1, [r2, #20]
 294 0008 0123     		movs	r3, #1
 295 000a 1943     		orrs	r1, r3
 296 000c 5161     		str	r1, [r2, #20]
 356:Core/Src/main.c **** 
 297              		.loc 1 356 3 view .LVU79
 298 000e 5269     		ldr	r2, [r2, #20]
 299 0010 1340     		ands	r3, r2
 300 0012 0193     		str	r3, [sp, #4]
 356:Core/Src/main.c **** 
 301              		.loc 1 356 3 view .LVU80
 302 0014 019B     		ldr	r3, [sp, #4]
 303              	.LBE8:
 356:Core/Src/main.c **** 
 304              		.loc 1 356 3 view .LVU81
 358:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 305              		.loc 1 358 3 view .LVU82
 306 0016 0022     		movs	r2, #0
 307 0018 0021     		movs	r1, #0
 308 001a 0920     		movs	r0, #9
 309 001c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 310              	.LVL10:
 359:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel2_3_IRQn, 0, 0);
 311              		.loc 1 359 3 view .LVU83
 312 0020 0920     		movs	r0, #9
 313 0022 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 314              	.LVL11:
 360:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel2_3_IRQn);
 315              		.loc 1 360 3 view .LVU84
 316 0026 0022     		movs	r2, #0
 317 0028 0021     		movs	r1, #0
 318 002a 0A20     		movs	r0, #10
 319 002c FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccvGflfM.s 			page 14


 320              	.LVL12:
 361:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel4_5_6_7_IRQn, 0, 0);
 321              		.loc 1 361 3 view .LVU85
 322 0030 0A20     		movs	r0, #10
 323 0032 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 324              	.LVL13:
 362:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel4_5_6_7_IRQn);
 325              		.loc 1 362 3 view .LVU86
 326 0036 0022     		movs	r2, #0
 327 0038 0021     		movs	r1, #0
 328 003a 0B20     		movs	r0, #11
 329 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 330              	.LVL14:
 363:Core/Src/main.c **** 
 331              		.loc 1 363 3 view .LVU87
 332 0040 0B20     		movs	r0, #11
 333 0042 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 334              	.LVL15:
 365:Core/Src/main.c **** 
 335              		.loc 1 365 1 is_stmt 0 view .LVU88
 336 0046 03B0     		add	sp, sp, #12
 337              		@ sp needed
 338 0048 00BD     		pop	{pc}
 339              	.L6:
 340 004a C046     		.align	2
 341              	.L5:
 342 004c 00100240 		.word	1073876992
 343              		.cfi_endproc
 344              	.LFE57:
 346              		.section	.text.MX_SPI1_Init,"ax",%progbits
 347              		.align	1
 348              		.syntax unified
 349              		.code	16
 350              		.thumb_func
 351              		.fpu softvfp
 353              	MX_SPI1_Init:
 354              	.LFB54:
 243:Core/Src/main.c **** 
 355              		.loc 1 243 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359 0000 10B5     		push	{r4, lr}
 360              	.LCFI5:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 245:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 364              		.loc 1 245 3 view .LVU90
 245:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 365              		.loc 1 245 18 is_stmt 0 view .LVU91
 366 0002 1048     		ldr	r0, .L8
 367 0004 104B     		ldr	r3, .L8+4
 368 0006 0360     		str	r3, [r0]
 246:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
 369              		.loc 1 246 3 is_stmt 1 view .LVU92
 246:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES_RXONLY;
ARM GAS  /tmp/ccvGflfM.s 			page 15


 370              		.loc 1 246 19 is_stmt 0 view .LVU93
 371 0008 8223     		movs	r3, #130
 372 000a 5B00     		lsls	r3, r3, #1
 373 000c 4360     		str	r3, [r0, #4]
 247:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 374              		.loc 1 247 3 is_stmt 1 view .LVU94
 247:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 375              		.loc 1 247 24 is_stmt 0 view .LVU95
 376 000e 8023     		movs	r3, #128
 377 0010 DB00     		lsls	r3, r3, #3
 378 0012 8360     		str	r3, [r0, #8]
 248:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 379              		.loc 1 248 3 is_stmt 1 view .LVU96
 248:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 380              		.loc 1 248 23 is_stmt 0 view .LVU97
 381 0014 E023     		movs	r3, #224
 382 0016 DB00     		lsls	r3, r3, #3
 383 0018 C360     		str	r3, [r0, #12]
 249:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 384              		.loc 1 249 3 is_stmt 1 view .LVU98
 249:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 385              		.loc 1 249 26 is_stmt 0 view .LVU99
 386 001a 0023     		movs	r3, #0
 387 001c 0361     		str	r3, [r0, #16]
 250:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 388              		.loc 1 250 3 is_stmt 1 view .LVU100
 250:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 389              		.loc 1 250 23 is_stmt 0 view .LVU101
 390 001e 4361     		str	r3, [r0, #20]
 251:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 391              		.loc 1 251 3 is_stmt 1 view .LVU102
 251:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_256;
 392              		.loc 1 251 18 is_stmt 0 view .LVU103
 393 0020 8022     		movs	r2, #128
 394 0022 9200     		lsls	r2, r2, #2
 395 0024 8261     		str	r2, [r0, #24]
 252:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 396              		.loc 1 252 3 is_stmt 1 view .LVU104
 252:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 397              		.loc 1 252 32 is_stmt 0 view .LVU105
 398 0026 C93A     		subs	r2, r2, #201
 399 0028 FF3A     		subs	r2, r2, #255
 400 002a C261     		str	r2, [r0, #28]
 253:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 401              		.loc 1 253 3 is_stmt 1 view .LVU106
 253:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 402              		.loc 1 253 23 is_stmt 0 view .LVU107
 403 002c 0362     		str	r3, [r0, #32]
 254:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 404              		.loc 1 254 3 is_stmt 1 view .LVU108
 254:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 405              		.loc 1 254 21 is_stmt 0 view .LVU109
 406 002e 4362     		str	r3, [r0, #36]
 255:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 407              		.loc 1 255 3 is_stmt 1 view .LVU110
 255:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 408              		.loc 1 255 29 is_stmt 0 view .LVU111
ARM GAS  /tmp/ccvGflfM.s 			page 16


 409 0030 8362     		str	r3, [r0, #40]
 256:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 410              		.loc 1 256 3 is_stmt 1 view .LVU112
 256:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 411              		.loc 1 256 28 is_stmt 0 view .LVU113
 412 0032 313A     		subs	r2, r2, #49
 413 0034 C262     		str	r2, [r0, #44]
 257:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 414              		.loc 1 257 3 is_stmt 1 view .LVU114
 257:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 415              		.loc 1 257 24 is_stmt 0 view .LVU115
 416 0036 0363     		str	r3, [r0, #48]
 258:Core/Src/main.c ****   HAL_SPI_Init(&hspi1);
 417              		.loc 1 258 3 is_stmt 1 view .LVU116
 258:Core/Src/main.c ****   HAL_SPI_Init(&hspi1);
 418              		.loc 1 258 23 is_stmt 0 view .LVU117
 419 0038 0833     		adds	r3, r3, #8
 420 003a 4363     		str	r3, [r0, #52]
 259:Core/Src/main.c **** 
 421              		.loc 1 259 3 is_stmt 1 view .LVU118
 422 003c FFF7FEFF 		bl	HAL_SPI_Init
 423              	.LVL16:
 262:Core/Src/main.c **** 
 424              		.loc 1 262 1 is_stmt 0 view .LVU119
 425              		@ sp needed
 426 0040 10BD     		pop	{r4, pc}
 427              	.L9:
 428 0042 C046     		.align	2
 429              	.L8:
 430 0044 00000000 		.word	hspi1
 431 0048 00300140 		.word	1073819648
 432              		.cfi_endproc
 433              	.LFE54:
 435              		.section	.text.MX_I2C1_Init,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.code	16
 439              		.thumb_func
 440              		.fpu softvfp
 442              	MX_I2C1_Init:
 443              	.LFB53:
 218:Core/Src/main.c **** 
 444              		.loc 1 218 1 is_stmt 1 view -0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 0, uses_anonymous_args = 0
 448 0000 10B5     		push	{r4, lr}
 449              	.LCFI6:
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 220:Core/Src/main.c ****   hi2c1.Init.Timing = 0x0000020B;
 453              		.loc 1 220 3 view .LVU121
 220:Core/Src/main.c ****   hi2c1.Init.Timing = 0x0000020B;
 454              		.loc 1 220 18 is_stmt 0 view .LVU122
 455 0002 0E4C     		ldr	r4, .L11
 456 0004 0E4B     		ldr	r3, .L11+4
ARM GAS  /tmp/ccvGflfM.s 			page 17


 457 0006 2360     		str	r3, [r4]
 221:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 84;
 458              		.loc 1 221 3 is_stmt 1 view .LVU123
 221:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 84;
 459              		.loc 1 221 21 is_stmt 0 view .LVU124
 460 0008 0E4B     		ldr	r3, .L11+8
 461 000a 6360     		str	r3, [r4, #4]
 222:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 462              		.loc 1 222 3 is_stmt 1 view .LVU125
 222:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 463              		.loc 1 222 26 is_stmt 0 view .LVU126
 464 000c B83B     		subs	r3, r3, #184
 465 000e FF3B     		subs	r3, r3, #255
 466 0010 A360     		str	r3, [r4, #8]
 223:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 467              		.loc 1 223 3 is_stmt 1 view .LVU127
 223:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 468              		.loc 1 223 29 is_stmt 0 view .LVU128
 469 0012 533B     		subs	r3, r3, #83
 470 0014 E360     		str	r3, [r4, #12]
 224:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 471              		.loc 1 224 3 is_stmt 1 view .LVU129
 224:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 472              		.loc 1 224 30 is_stmt 0 view .LVU130
 473 0016 0023     		movs	r3, #0
 474 0018 2361     		str	r3, [r4, #16]
 225:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 475              		.loc 1 225 3 is_stmt 1 view .LVU131
 225:Core/Src/main.c ****   hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 476              		.loc 1 225 26 is_stmt 0 view .LVU132
 477 001a 6361     		str	r3, [r4, #20]
 226:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 478              		.loc 1 226 3 is_stmt 1 view .LVU133
 226:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 479              		.loc 1 226 31 is_stmt 0 view .LVU134
 480 001c A361     		str	r3, [r4, #24]
 227:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 481              		.loc 1 227 3 is_stmt 1 view .LVU135
 227:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 482              		.loc 1 227 30 is_stmt 0 view .LVU136
 483 001e E361     		str	r3, [r4, #28]
 228:Core/Src/main.c ****   HAL_I2C_Init(&hi2c1);
 484              		.loc 1 228 3 is_stmt 1 view .LVU137
 228:Core/Src/main.c ****   HAL_I2C_Init(&hi2c1);
 485              		.loc 1 228 28 is_stmt 0 view .LVU138
 486 0020 2362     		str	r3, [r4, #32]
 229:Core/Src/main.c **** 
 487              		.loc 1 229 3 is_stmt 1 view .LVU139
 488 0022 2000     		movs	r0, r4
 489 0024 FFF7FEFF 		bl	HAL_I2C_Init
 490              	.LVL17:
 233:Core/Src/main.c **** 
 491              		.loc 1 233 3 view .LVU140
 492 0028 0021     		movs	r1, #0
 493 002a 2000     		movs	r0, r4
 494 002c FFF7FEFF 		bl	HAL_I2CEx_ConfigAnalogFilter
 495              	.LVL18:
ARM GAS  /tmp/ccvGflfM.s 			page 18


 237:Core/Src/main.c **** 
 496              		.loc 1 237 3 view .LVU141
 497 0030 0021     		movs	r1, #0
 498 0032 2000     		movs	r0, r4
 499 0034 FFF7FEFF 		bl	HAL_I2CEx_ConfigDigitalFilter
 500              	.LVL19:
 240:Core/Src/main.c **** 
 501              		.loc 1 240 1 is_stmt 0 view .LVU142
 502              		@ sp needed
 503 0038 10BD     		pop	{r4, pc}
 504              	.L12:
 505 003a C046     		.align	2
 506              	.L11:
 507 003c 00000000 		.word	hi2c1
 508 0040 00540040 		.word	1073763328
 509 0044 0B020000 		.word	523
 510              		.cfi_endproc
 511              	.LFE53:
 513              		.section	.text.MX_TIM2_Init,"ax",%progbits
 514              		.align	1
 515              		.syntax unified
 516              		.code	16
 517              		.thumb_func
 518              		.fpu softvfp
 520              	MX_TIM2_Init:
 521              	.LFB56:
 316:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 522              		.loc 1 316 1 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 24
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 30B5     		push	{r4, r5, lr}
 527              	.LCFI7:
 528              		.cfi_def_cfa_offset 12
 529              		.cfi_offset 4, -12
 530              		.cfi_offset 5, -8
 531              		.cfi_offset 14, -4
 532 0002 87B0     		sub	sp, sp, #28
 533              	.LCFI8:
 534              		.cfi_def_cfa_offset 40
 317:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 535              		.loc 1 317 3 view .LVU144
 317:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 536              		.loc 1 317 26 is_stmt 0 view .LVU145
 537 0004 1022     		movs	r2, #16
 538 0006 0021     		movs	r1, #0
 539 0008 02A8     		add	r0, sp, #8
 540 000a FFF7FEFF 		bl	memset
 541              	.LVL20:
 318:Core/Src/main.c **** 
 542              		.loc 1 318 3 is_stmt 1 view .LVU146
 318:Core/Src/main.c **** 
 543              		.loc 1 318 27 is_stmt 0 view .LVU147
 544 000e 0822     		movs	r2, #8
 545 0010 0021     		movs	r1, #0
 546 0012 6846     		mov	r0, sp
 547 0014 FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccvGflfM.s 			page 19


 548              	.LVL21:
 320:Core/Src/main.c ****   htim2.Init.Prescaler = 9999;
 549              		.loc 1 320 3 is_stmt 1 view .LVU148
 320:Core/Src/main.c ****   htim2.Init.Prescaler = 9999;
 550              		.loc 1 320 18 is_stmt 0 view .LVU149
 551 0018 104C     		ldr	r4, .L14
 552 001a 8023     		movs	r3, #128
 553 001c DB05     		lsls	r3, r3, #23
 554 001e 2360     		str	r3, [r4]
 321:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 555              		.loc 1 321 3 is_stmt 1 view .LVU150
 321:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 556              		.loc 1 321 24 is_stmt 0 view .LVU151
 557 0020 0F4B     		ldr	r3, .L14+4
 558 0022 6360     		str	r3, [r4, #4]
 322:Core/Src/main.c ****   htim2.Init.Period = 479; //100ms
 559              		.loc 1 322 3 is_stmt 1 view .LVU152
 322:Core/Src/main.c ****   htim2.Init.Period = 479; //100ms
 560              		.loc 1 322 26 is_stmt 0 view .LVU153
 561 0024 0025     		movs	r5, #0
 562 0026 A560     		str	r5, [r4, #8]
 323:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 563              		.loc 1 323 3 is_stmt 1 view .LVU154
 323:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 564              		.loc 1 323 21 is_stmt 0 view .LVU155
 565 0028 E023     		movs	r3, #224
 566 002a FF33     		adds	r3, r3, #255
 567 002c E360     		str	r3, [r4, #12]
 324:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 568              		.loc 1 324 3 is_stmt 1 view .LVU156
 324:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 569              		.loc 1 324 28 is_stmt 0 view .LVU157
 570 002e 2561     		str	r5, [r4, #16]
 325:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim2);
 571              		.loc 1 325 3 is_stmt 1 view .LVU158
 325:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim2);
 572              		.loc 1 325 32 is_stmt 0 view .LVU159
 573 0030 603B     		subs	r3, r3, #96
 574 0032 FF3B     		subs	r3, r3, #255
 575 0034 A361     		str	r3, [r4, #24]
 326:Core/Src/main.c **** 
 576              		.loc 1 326 3 is_stmt 1 view .LVU160
 577 0036 2000     		movs	r0, r4
 578 0038 FFF7FEFF 		bl	HAL_TIM_Base_Init
 579              	.LVL22:
 329:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 580              		.loc 1 329 3 view .LVU161
 329:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig);
 581              		.loc 1 329 34 is_stmt 0 view .LVU162
 582 003c 8023     		movs	r3, #128
 583 003e 5B01     		lsls	r3, r3, #5
 584 0040 0293     		str	r3, [sp, #8]
 330:Core/Src/main.c **** 
 585              		.loc 1 330 3 is_stmt 1 view .LVU163
 586 0042 02A9     		add	r1, sp, #8
 587 0044 2000     		movs	r0, r4
 588 0046 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
ARM GAS  /tmp/ccvGflfM.s 			page 20


 589              	.LVL23:
 333:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 590              		.loc 1 333 3 view .LVU164
 333:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 591              		.loc 1 333 37 is_stmt 0 view .LVU165
 592 004a 2023     		movs	r3, #32
 593 004c 0093     		str	r3, [sp]
 334:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 594              		.loc 1 334 3 is_stmt 1 view .LVU166
 334:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig);
 595              		.loc 1 334 33 is_stmt 0 view .LVU167
 596 004e 0195     		str	r5, [sp, #4]
 335:Core/Src/main.c **** 
 597              		.loc 1 335 3 is_stmt 1 view .LVU168
 598 0050 6946     		mov	r1, sp
 599 0052 2000     		movs	r0, r4
 600 0054 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 601              	.LVL24:
 338:Core/Src/main.c **** /*
 602              		.loc 1 338 1 is_stmt 0 view .LVU169
 603 0058 07B0     		add	sp, sp, #28
 604              		@ sp needed
 605 005a 30BD     		pop	{r4, r5, pc}
 606              	.L15:
 607              		.align	2
 608              	.L14:
 609 005c 00000000 		.word	htim2
 610 0060 0F270000 		.word	9999
 611              		.cfi_endproc
 612              	.LFE56:
 614              		.section	.text.MX_TIM1_Init,"ax",%progbits
 615              		.align	1
 616              		.syntax unified
 617              		.code	16
 618              		.thumb_func
 619              		.fpu softvfp
 621              	MX_TIM1_Init:
 622              	.LFB55:
 265:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 623              		.loc 1 265 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 88
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627 0000 30B5     		push	{r4, r5, lr}
 628              	.LCFI9:
 629              		.cfi_def_cfa_offset 12
 630              		.cfi_offset 4, -12
 631              		.cfi_offset 5, -8
 632              		.cfi_offset 14, -4
 633 0002 97B0     		sub	sp, sp, #92
 634              	.LCFI10:
 635              		.cfi_def_cfa_offset 104
 266:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 636              		.loc 1 266 3 view .LVU171
 266:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 637              		.loc 1 266 26 is_stmt 0 view .LVU172
 638 0004 1022     		movs	r2, #16
ARM GAS  /tmp/ccvGflfM.s 			page 21


 639 0006 0021     		movs	r1, #0
 640 0008 12A8     		add	r0, sp, #72
 641 000a FFF7FEFF 		bl	memset
 642              	.LVL25:
 267:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 643              		.loc 1 267 3 is_stmt 1 view .LVU173
 267:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 644              		.loc 1 267 27 is_stmt 0 view .LVU174
 645 000e 0822     		movs	r2, #8
 646 0010 0021     		movs	r1, #0
 647 0012 10A8     		add	r0, sp, #64
 648 0014 FFF7FEFF 		bl	memset
 649              	.LVL26:
 268:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 650              		.loc 1 268 3 is_stmt 1 view .LVU175
 268:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 651              		.loc 1 268 22 is_stmt 0 view .LVU176
 652 0018 1C22     		movs	r2, #28
 653 001a 0021     		movs	r1, #0
 654 001c 09A8     		add	r0, sp, #36
 655 001e FFF7FEFF 		bl	memset
 656              	.LVL27:
 269:Core/Src/main.c **** 
 657              		.loc 1 269 3 is_stmt 1 view .LVU177
 269:Core/Src/main.c **** 
 658              		.loc 1 269 34 is_stmt 0 view .LVU178
 659 0022 2022     		movs	r2, #32
 660 0024 0021     		movs	r1, #0
 661 0026 01A8     		add	r0, sp, #4
 662 0028 FFF7FEFF 		bl	memset
 663              	.LVL28:
 271:Core/Src/main.c ****   htim1.Init.Prescaler = 16;
 664              		.loc 1 271 3 is_stmt 1 view .LVU179
 271:Core/Src/main.c ****   htim1.Init.Prescaler = 16;
 665              		.loc 1 271 18 is_stmt 0 view .LVU180
 666 002c 1E4D     		ldr	r5, .L17
 667 002e 1F4B     		ldr	r3, .L17+4
 668 0030 2B60     		str	r3, [r5]
 272:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 669              		.loc 1 272 3 is_stmt 1 view .LVU181
 272:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 670              		.loc 1 272 24 is_stmt 0 view .LVU182
 671 0032 1023     		movs	r3, #16
 672 0034 6B60     		str	r3, [r5, #4]
 273:Core/Src/main.c ****   htim1.Init.Period = 1024;
 673              		.loc 1 273 3 is_stmt 1 view .LVU183
 273:Core/Src/main.c ****   htim1.Init.Period = 1024;
 674              		.loc 1 273 26 is_stmt 0 view .LVU184
 675 0036 0024     		movs	r4, #0
 676 0038 AC60     		str	r4, [r5, #8]
 274:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 677              		.loc 1 274 3 is_stmt 1 view .LVU185
 274:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 678              		.loc 1 274 21 is_stmt 0 view .LVU186
 679 003a 8023     		movs	r3, #128
 680 003c DB00     		lsls	r3, r3, #3
 681 003e EB60     		str	r3, [r5, #12]
ARM GAS  /tmp/ccvGflfM.s 			page 22


 275:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 682              		.loc 1 275 3 is_stmt 1 view .LVU187
 275:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 683              		.loc 1 275 28 is_stmt 0 view .LVU188
 684 0040 2C61     		str	r4, [r5, #16]
 276:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 685              		.loc 1 276 3 is_stmt 1 view .LVU189
 276:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 686              		.loc 1 276 32 is_stmt 0 view .LVU190
 687 0042 6C61     		str	r4, [r5, #20]
 277:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim1);
 688              		.loc 1 277 3 is_stmt 1 view .LVU191
 277:Core/Src/main.c ****   HAL_TIM_Base_Init(&htim1);
 689              		.loc 1 277 32 is_stmt 0 view .LVU192
 690 0044 8023     		movs	r3, #128
 691 0046 AB61     		str	r3, [r5, #24]
 278:Core/Src/main.c **** 
 692              		.loc 1 278 3 is_stmt 1 view .LVU193
 693 0048 2800     		movs	r0, r5
 694 004a FFF7FEFF 		bl	HAL_TIM_Base_Init
 695              	.LVL29:
 281:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
 696              		.loc 1 281 3 view .LVU194
 281:Core/Src/main.c ****   HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig);
 697              		.loc 1 281 34 is_stmt 0 view .LVU195
 698 004e 8023     		movs	r3, #128
 699 0050 5B01     		lsls	r3, r3, #5
 700 0052 1293     		str	r3, [sp, #72]
 282:Core/Src/main.c **** 
 701              		.loc 1 282 3 is_stmt 1 view .LVU196
 702 0054 12A9     		add	r1, sp, #72
 703 0056 2800     		movs	r0, r5
 704 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 705              	.LVL30:
 285:Core/Src/main.c **** 
 706              		.loc 1 285 3 view .LVU197
 707 005c 2800     		movs	r0, r5
 708 005e FFF7FEFF 		bl	HAL_TIM_OC_Init
 709              	.LVL31:
 288:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 710              		.loc 1 288 3 view .LVU198
 288:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 711              		.loc 1 288 37 is_stmt 0 view .LVU199
 712 0062 1094     		str	r4, [sp, #64]
 289:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 713              		.loc 1 289 3 is_stmt 1 view .LVU200
 289:Core/Src/main.c ****   HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig);
 714              		.loc 1 289 33 is_stmt 0 view .LVU201
 715 0064 1194     		str	r4, [sp, #68]
 290:Core/Src/main.c **** 
 716              		.loc 1 290 3 is_stmt 1 view .LVU202
 717 0066 10A9     		add	r1, sp, #64
 718 0068 2800     		movs	r0, r5
 719 006a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 720              	.LVL32:
 293:Core/Src/main.c ****   sConfigOC.Pulse = 100;
 721              		.loc 1 293 3 view .LVU203
ARM GAS  /tmp/ccvGflfM.s 			page 23


 293:Core/Src/main.c ****   sConfigOC.Pulse = 100;
 722              		.loc 1 293 20 is_stmt 0 view .LVU204
 723 006e 0994     		str	r4, [sp, #36]
 294:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 724              		.loc 1 294 3 is_stmt 1 view .LVU205
 294:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 725              		.loc 1 294 19 is_stmt 0 view .LVU206
 726 0070 6423     		movs	r3, #100
 727 0072 0A93     		str	r3, [sp, #40]
 295:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 728              		.loc 1 295 3 is_stmt 1 view .LVU207
 295:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 729              		.loc 1 295 24 is_stmt 0 view .LVU208
 730 0074 0B94     		str	r4, [sp, #44]
 296:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 731              		.loc 1 296 3 is_stmt 1 view .LVU209
 296:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 732              		.loc 1 296 25 is_stmt 0 view .LVU210
 733 0076 0C94     		str	r4, [sp, #48]
 297:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 734              		.loc 1 297 3 is_stmt 1 view .LVU211
 297:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 735              		.loc 1 297 24 is_stmt 0 view .LVU212
 736 0078 0D94     		str	r4, [sp, #52]
 298:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 737              		.loc 1 298 3 is_stmt 1 view .LVU213
 298:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 738              		.loc 1 298 25 is_stmt 0 view .LVU214
 739 007a 0E94     		str	r4, [sp, #56]
 299:Core/Src/main.c ****   HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1);
 740              		.loc 1 299 3 is_stmt 1 view .LVU215
 299:Core/Src/main.c ****   HAL_TIM_OC_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1);
 741              		.loc 1 299 26 is_stmt 0 view .LVU216
 742 007c 0F94     		str	r4, [sp, #60]
 300:Core/Src/main.c **** 
 743              		.loc 1 300 3 is_stmt 1 view .LVU217
 744 007e 0022     		movs	r2, #0
 745 0080 09A9     		add	r1, sp, #36
 746 0082 2800     		movs	r0, r5
 747 0084 FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 748              	.LVL33:
 303:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 749              		.loc 1 303 3 view .LVU218
 303:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 750              		.loc 1 303 40 is_stmt 0 view .LVU219
 751 0088 0194     		str	r4, [sp, #4]
 304:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 752              		.loc 1 304 3 is_stmt 1 view .LVU220
 304:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 753              		.loc 1 304 41 is_stmt 0 view .LVU221
 754 008a 0294     		str	r4, [sp, #8]
 305:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 755              		.loc 1 305 3 is_stmt 1 view .LVU222
 305:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 756              		.loc 1 305 34 is_stmt 0 view .LVU223
 757 008c 0394     		str	r4, [sp, #12]
 306:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
ARM GAS  /tmp/ccvGflfM.s 			page 24


 758              		.loc 1 306 3 is_stmt 1 view .LVU224
 306:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 759              		.loc 1 306 33 is_stmt 0 view .LVU225
 760 008e 0494     		str	r4, [sp, #16]
 307:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 761              		.loc 1 307 3 is_stmt 1 view .LVU226
 307:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 762              		.loc 1 307 35 is_stmt 0 view .LVU227
 763 0090 0594     		str	r4, [sp, #20]
 308:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 764              		.loc 1 308 3 is_stmt 1 view .LVU228
 308:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 765              		.loc 1 308 38 is_stmt 0 view .LVU229
 766 0092 8023     		movs	r3, #128
 767 0094 9B01     		lsls	r3, r3, #6
 768 0096 0693     		str	r3, [sp, #24]
 309:Core/Src/main.c ****   HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig);
 769              		.loc 1 309 3 is_stmt 1 view .LVU230
 309:Core/Src/main.c ****   HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig);
 770              		.loc 1 309 40 is_stmt 0 view .LVU231
 771 0098 0894     		str	r4, [sp, #32]
 310:Core/Src/main.c **** 
 772              		.loc 1 310 3 is_stmt 1 view .LVU232
 773 009a 01A9     		add	r1, sp, #4
 774 009c 2800     		movs	r0, r5
 775 009e FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 776              	.LVL34:
 313:Core/Src/main.c **** 
 777              		.loc 1 313 1 is_stmt 0 view .LVU233
 778 00a2 17B0     		add	sp, sp, #92
 779              		@ sp needed
 780 00a4 30BD     		pop	{r4, r5, pc}
 781              	.L18:
 782 00a6 C046     		.align	2
 783              	.L17:
 784 00a8 00000000 		.word	htim1
 785 00ac 002C0140 		.word	1073818624
 786              		.cfi_endproc
 787              	.LFE55:
 789              		.section	.text.MX_ADC_Init,"ax",%progbits
 790              		.align	1
 791              		.syntax unified
 792              		.code	16
 793              		.thumb_func
 794              		.fpu softvfp
 796              	MX_ADC_Init:
 797              	.LFB52:
 182:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 798              		.loc 1 182 1 is_stmt 1 view -0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 16
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802 0000 70B5     		push	{r4, r5, r6, lr}
 803              	.LCFI11:
 804              		.cfi_def_cfa_offset 16
 805              		.cfi_offset 4, -16
 806              		.cfi_offset 5, -12
ARM GAS  /tmp/ccvGflfM.s 			page 25


 807              		.cfi_offset 6, -8
 808              		.cfi_offset 14, -4
 809 0002 84B0     		sub	sp, sp, #16
 810              	.LCFI12:
 811              		.cfi_def_cfa_offset 32
 183:Core/Src/main.c **** 
 812              		.loc 1 183 3 view .LVU235
 183:Core/Src/main.c **** 
 813              		.loc 1 183 26 is_stmt 0 view .LVU236
 814 0004 0C22     		movs	r2, #12
 815 0006 0021     		movs	r1, #0
 816 0008 01A8     		add	r0, sp, #4
 817 000a FFF7FEFF 		bl	memset
 818              	.LVL35:
 185:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 819              		.loc 1 185 3 is_stmt 1 view .LVU237
 185:Core/Src/main.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 820              		.loc 1 185 17 is_stmt 0 view .LVU238
 821 000e 214C     		ldr	r4, .L20
 822 0010 214B     		ldr	r3, .L20+4
 823 0012 2360     		str	r3, [r4]
 186:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 824              		.loc 1 186 3 is_stmt 1 view .LVU239
 186:Core/Src/main.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
 825              		.loc 1 186 28 is_stmt 0 view .LVU240
 826 0014 0023     		movs	r3, #0
 827 0016 6360     		str	r3, [r4, #4]
 187:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 828              		.loc 1 187 3 is_stmt 1 view .LVU241
 187:Core/Src/main.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 829              		.loc 1 187 24 is_stmt 0 view .LVU242
 830 0018 A360     		str	r3, [r4, #8]
 188:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 831              		.loc 1 188 3 is_stmt 1 view .LVU243
 188:Core/Src/main.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
 832              		.loc 1 188 23 is_stmt 0 view .LVU244
 833 001a E360     		str	r3, [r4, #12]
 189:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 834              		.loc 1 189 3 is_stmt 1 view .LVU245
 189:Core/Src/main.c ****   hadc.Init.EOCSelection = ADC_EOC_SEQ_CONV;
 835              		.loc 1 189 26 is_stmt 0 view .LVU246
 836 001c 0125     		movs	r5, #1
 837 001e 2561     		str	r5, [r4, #16]
 190:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 838              		.loc 1 190 3 is_stmt 1 view .LVU247
 190:Core/Src/main.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
 839              		.loc 1 190 26 is_stmt 0 view .LVU248
 840 0020 0826     		movs	r6, #8
 841 0022 6661     		str	r6, [r4, #20]
 191:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 842              		.loc 1 191 3 is_stmt 1 view .LVU249
 191:Core/Src/main.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
 843              		.loc 1 191 30 is_stmt 0 view .LVU250
 844 0024 2376     		strb	r3, [r4, #24]
 192:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
 845              		.loc 1 192 3 is_stmt 1 view .LVU251
 192:Core/Src/main.c ****   hadc.Init.ContinuousConvMode = DISABLE;
ARM GAS  /tmp/ccvGflfM.s 			page 26


 846              		.loc 1 192 34 is_stmt 0 view .LVU252
 847 0026 6376     		strb	r3, [r4, #25]
 193:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 848              		.loc 1 193 3 is_stmt 1 view .LVU253
 193:Core/Src/main.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
 849              		.loc 1 193 32 is_stmt 0 view .LVU254
 850 0028 A376     		strb	r3, [r4, #26]
 194:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;//ADC_SOFTWARE_START
 851              		.loc 1 194 3 is_stmt 1 view .LVU255
 194:Core/Src/main.c ****   hadc.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T2_TRGO;//ADC_SOFTWARE_START
 852              		.loc 1 194 35 is_stmt 0 view .LVU256
 853 002a E376     		strb	r3, [r4, #27]
 195:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 854              		.loc 1 195 3 is_stmt 1 view .LVU257
 195:Core/Src/main.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_RISING;
 855              		.loc 1 195 30 is_stmt 0 view .LVU258
 856 002c 8033     		adds	r3, r3, #128
 857 002e E361     		str	r3, [r4, #28]
 196:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 858              		.loc 1 196 3 is_stmt 1 view .LVU259
 196:Core/Src/main.c ****   hadc.Init.DMAContinuousRequests = ENABLE;
 859              		.loc 1 196 34 is_stmt 0 view .LVU260
 860 0030 8023     		movs	r3, #128
 861 0032 DB00     		lsls	r3, r3, #3
 862 0034 2362     		str	r3, [r4, #32]
 197:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 863              		.loc 1 197 3 is_stmt 1 view .LVU261
 197:Core/Src/main.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 864              		.loc 1 197 35 is_stmt 0 view .LVU262
 865 0036 2423     		movs	r3, #36
 866 0038 E554     		strb	r5, [r4, r3]
 198:Core/Src/main.c ****   HAL_ADC_Init(&hadc);
 867              		.loc 1 198 3 is_stmt 1 view .LVU263
 198:Core/Src/main.c ****   HAL_ADC_Init(&hadc);
 868              		.loc 1 198 21 is_stmt 0 view .LVU264
 869 003a A562     		str	r5, [r4, #40]
 199:Core/Src/main.c **** 
 870              		.loc 1 199 3 is_stmt 1 view .LVU265
 871 003c 2000     		movs	r0, r4
 872 003e FFF7FEFF 		bl	HAL_ADC_Init
 873              	.LVL36:
 201:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 874              		.loc 1 201 3 view .LVU266
 201:Core/Src/main.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
 875              		.loc 1 201 19 is_stmt 0 view .LVU267
 876 0042 0195     		str	r5, [sp, #4]
 202:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 877              		.loc 1 202 3 is_stmt 1 view .LVU268
 202:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_55CYCLES_5;
 878              		.loc 1 202 16 is_stmt 0 view .LVU269
 879 0044 8023     		movs	r3, #128
 880 0046 5B01     		lsls	r3, r3, #5
 881 0048 0293     		str	r3, [sp, #8]
 203:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 882              		.loc 1 203 3 is_stmt 1 view .LVU270
 203:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 883              		.loc 1 203 24 is_stmt 0 view .LVU271
ARM GAS  /tmp/ccvGflfM.s 			page 27


 884 004a 0435     		adds	r5, r5, #4
 885 004c 0395     		str	r5, [sp, #12]
 204:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_3;
 886              		.loc 1 204 3 is_stmt 1 view .LVU272
 887 004e 01A9     		add	r1, sp, #4
 888 0050 2000     		movs	r0, r4
 889 0052 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 890              	.LVL37:
 205:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 891              		.loc 1 205 3 view .LVU273
 205:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 892              		.loc 1 205 19 is_stmt 0 view .LVU274
 893 0056 0323     		movs	r3, #3
 894 0058 0193     		str	r3, [sp, #4]
 206:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_5;
 895              		.loc 1 206 3 is_stmt 1 view .LVU275
 896 005a 01A9     		add	r1, sp, #4
 897 005c 2000     		movs	r0, r4
 898 005e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 899              	.LVL38:
 207:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 900              		.loc 1 207 3 view .LVU276
 207:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 901              		.loc 1 207 19 is_stmt 0 view .LVU277
 902 0062 0195     		str	r5, [sp, #4]
 208:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_7;
 903              		.loc 1 208 3 is_stmt 1 view .LVU278
 904 0064 01A9     		add	r1, sp, #4
 905 0066 2000     		movs	r0, r4
 906 0068 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 907              	.LVL39:
 209:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 908              		.loc 1 209 3 view .LVU279
 209:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 909              		.loc 1 209 19 is_stmt 0 view .LVU280
 910 006c 0723     		movs	r3, #7
 911 006e 0193     		str	r3, [sp, #4]
 210:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_8;
 912              		.loc 1 210 3 is_stmt 1 view .LVU281
 913 0070 01A9     		add	r1, sp, #4
 914 0072 2000     		movs	r0, r4
 915 0074 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 916              	.LVL40:
 211:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 917              		.loc 1 211 3 view .LVU282
 211:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 918              		.loc 1 211 19 is_stmt 0 view .LVU283
 919 0078 0196     		str	r6, [sp, #4]
 212:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_TEMPSENSOR;
 920              		.loc 1 212 3 is_stmt 1 view .LVU284
 921 007a 01A9     		add	r1, sp, #4
 922 007c 2000     		movs	r0, r4
 923 007e FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 924              	.LVL41:
 213:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
 925              		.loc 1 213 3 view .LVU285
 213:Core/Src/main.c ****   HAL_ADC_ConfigChannel(&hadc, &sConfig);
ARM GAS  /tmp/ccvGflfM.s 			page 28


 926              		.loc 1 213 19 is_stmt 0 view .LVU286
 927 0082 1023     		movs	r3, #16
 928 0084 0193     		str	r3, [sp, #4]
 214:Core/Src/main.c **** }
 929              		.loc 1 214 3 is_stmt 1 view .LVU287
 930 0086 01A9     		add	r1, sp, #4
 931 0088 2000     		movs	r0, r4
 932 008a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 933              	.LVL42:
 215:Core/Src/main.c **** 
 934              		.loc 1 215 1 is_stmt 0 view .LVU288
 935 008e 04B0     		add	sp, sp, #16
 936              		@ sp needed
 937 0090 70BD     		pop	{r4, r5, r6, pc}
 938              	.L21:
 939 0092 C046     		.align	2
 940              	.L20:
 941 0094 00000000 		.word	hadc
 942 0098 00240140 		.word	1073816576
 943              		.cfi_endproc
 944              	.LFE52:
 946              		.global	__aeabi_i2f
 947              		.global	__aeabi_fmul
 948              		.section	.text.MAX31855_get_tcold,"ax",%progbits
 949              		.align	1
 950              		.global	MAX31855_get_tcold
 951              		.syntax unified
 952              		.code	16
 953              		.thumb_func
 954              		.fpu softvfp
 956              	MAX31855_get_tcold:
 957              	.LVL43:
 958              	.LFB44:
  80:Core/Src/main.c ****   data >>= 4;
 959              		.loc 1 80 39 is_stmt 1 view -0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
  80:Core/Src/main.c ****   data >>= 4;
 963              		.loc 1 80 39 is_stmt 0 view .LVU290
 964 0000 10B5     		push	{r4, lr}
 965              	.LCFI13:
 966              		.cfi_def_cfa_offset 8
 967              		.cfi_offset 4, -8
 968              		.cfi_offset 14, -4
  81:Core/Src/main.c ****   float internal = data & 0x7FF;
 969              		.loc 1 81 3 is_stmt 1 view .LVU291
  81:Core/Src/main.c ****   float internal = data & 0x7FF;
 970              		.loc 1 81 8 is_stmt 0 view .LVU292
 971 0002 0411     		asrs	r4, r0, #4
 972              	.LVL44:
  82:Core/Src/main.c ****   if (data & 0x800) {
 973              		.loc 1 82 3 is_stmt 1 view .LVU293
  82:Core/Src/main.c ****   if (data & 0x800) {
 974              		.loc 1 82 25 is_stmt 0 view .LVU294
 975 0004 6005     		lsls	r0, r4, #21
 976 0006 400D     		lsrs	r0, r0, #21
ARM GAS  /tmp/ccvGflfM.s 			page 29


  82:Core/Src/main.c ****   if (data & 0x800) {
 977              		.loc 1 82 9 view .LVU295
 978 0008 FFF7FEFF 		bl	__aeabi_i2f
 979              	.LVL45:
  83:Core/Src/main.c ****     int16_t tmp = 0xF800 | (data & 0x7FF);
 980              		.loc 1 83 3 is_stmt 1 view .LVU296
  83:Core/Src/main.c ****     int16_t tmp = 0xF800 | (data & 0x7FF);
 981              		.loc 1 83 6 is_stmt 0 view .LVU297
 982 000c 2305     		lsls	r3, r4, #20
 983 000e 04D5     		bpl	.L23
 984              	.LBB9:
  84:Core/Src/main.c ****     internal = tmp;
 985              		.loc 1 84 5 is_stmt 1 view .LVU298
  84:Core/Src/main.c ****     internal = tmp;
 986              		.loc 1 84 26 is_stmt 0 view .LVU299
 987 0010 20B2     		sxth	r0, r4
 988              	.LVL46:
  84:Core/Src/main.c ****     internal = tmp;
 989              		.loc 1 84 13 view .LVU300
 990 0012 044C     		ldr	r4, .L24
 991              	.LVL47:
  84:Core/Src/main.c ****     internal = tmp;
 992              		.loc 1 84 13 view .LVU301
 993 0014 2043     		orrs	r0, r4
 994              	.LVL48:
  85:Core/Src/main.c ****   }
 995              		.loc 1 85 5 is_stmt 1 view .LVU302
  85:Core/Src/main.c ****   }
 996              		.loc 1 85 14 is_stmt 0 view .LVU303
 997 0016 FFF7FEFF 		bl	__aeabi_i2f
 998              	.LVL49:
 999              	.L23:
  85:Core/Src/main.c ****   }
 1000              		.loc 1 85 14 view .LVU304
 1001              	.LBE9:
  87:Core/Src/main.c ****   return internal;
 1002              		.loc 1 87 3 is_stmt 1 view .LVU305
  87:Core/Src/main.c ****   return internal;
 1003              		.loc 1 87 12 is_stmt 0 view .LVU306
 1004 001a F621     		movs	r1, #246
 1005 001c 8905     		lsls	r1, r1, #22
 1006 001e FFF7FEFF 		bl	__aeabi_fmul
 1007              	.LVL50:
  88:Core/Src/main.c **** }
 1008              		.loc 1 88 3 is_stmt 1 view .LVU307
  89:Core/Src/main.c **** 
 1009              		.loc 1 89 1 is_stmt 0 view .LVU308
 1010              		@ sp needed
 1011 0022 10BD     		pop	{r4, pc}
 1012              	.L25:
 1013              		.align	2
 1014              	.L24:
 1015 0024 00F8FFFF 		.word	-2048
 1016              		.cfi_endproc
 1017              	.LFE44:
 1019              		.global	__aeabi_i2d
 1020              		.global	__aeabi_dmul
ARM GAS  /tmp/ccvGflfM.s 			page 30


 1021              		.global	__aeabi_d2f
 1022              		.section	.text.MAX31855_get_twarm,"ax",%progbits
 1023              		.align	1
 1024              		.global	MAX31855_get_twarm
 1025              		.syntax unified
 1026              		.code	16
 1027              		.thumb_func
 1028              		.fpu softvfp
 1030              	MAX31855_get_twarm:
 1031              	.LVL51:
 1032              	.LFB45:
  91:Core/Src/main.c ****   if (data & 0x80000000) {
 1033              		.loc 1 91 39 is_stmt 1 view -0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
  91:Core/Src/main.c ****   if (data & 0x80000000) {
 1037              		.loc 1 91 39 is_stmt 0 view .LVU310
 1038 0000 10B5     		push	{r4, lr}
 1039              	.LCFI14:
 1040              		.cfi_def_cfa_offset 8
 1041              		.cfi_offset 4, -8
 1042              		.cfi_offset 14, -4
  92:Core/Src/main.c ****     data = 0xFFFFC000 | ((data >> 18) & 0x00003FFF);
 1043              		.loc 1 92 3 is_stmt 1 view .LVU311
  92:Core/Src/main.c ****     data = 0xFFFFC000 | ((data >> 18) & 0x00003FFF);
 1044              		.loc 1 92 6 is_stmt 0 view .LVU312
 1045 0002 0028     		cmp	r0, #0
 1046 0004 09DB     		blt	.L29
  95:Core/Src/main.c ****   }
 1047              		.loc 1 95 5 is_stmt 1 view .LVU313
  95:Core/Src/main.c ****   }
 1048              		.loc 1 95 10 is_stmt 0 view .LVU314
 1049 0006 8014     		asrs	r0, r0, #18
 1050              	.LVL52:
 1051              	.L28:
  97:Core/Src/main.c ****   return (float)cent;
 1052              		.loc 1 97 3 is_stmt 1 view .LVU315
  97:Core/Src/main.c ****   return (float)cent;
 1053              		.loc 1 97 22 is_stmt 0 view .LVU316
 1054 0008 FFF7FEFF 		bl	__aeabi_i2d
 1055              	.LVL53:
  97:Core/Src/main.c ****   return (float)cent;
 1056              		.loc 1 97 10 view .LVU317
 1057 000c 0022     		movs	r2, #0
 1058 000e 054B     		ldr	r3, .L30
 1059 0010 FFF7FEFF 		bl	__aeabi_dmul
 1060              	.LVL54:
  98:Core/Src/main.c **** }
 1061              		.loc 1 98 3 is_stmt 1 view .LVU318
  98:Core/Src/main.c **** }
 1062              		.loc 1 98 10 is_stmt 0 view .LVU319
 1063 0014 FFF7FEFF 		bl	__aeabi_d2f
 1064              	.LVL55:
  99:Core/Src/main.c **** 
 1065              		.loc 1 99 1 view .LVU320
 1066              		@ sp needed
ARM GAS  /tmp/ccvGflfM.s 			page 31


 1067 0018 10BD     		pop	{r4, pc}
 1068              	.LVL56:
 1069              	.L29:
  93:Core/Src/main.c ****   } else {
 1070              		.loc 1 93 5 is_stmt 1 view .LVU321
  93:Core/Src/main.c ****   } else {
 1071              		.loc 1 93 39 is_stmt 0 view .LVU322
 1072 001a 800C     		lsrs	r0, r0, #18
 1073              	.LVL57:
  93:Core/Src/main.c ****   } else {
 1074              		.loc 1 93 23 view .LVU323
 1075 001c 024B     		ldr	r3, .L30+4
 1076 001e 1843     		orrs	r0, r3
 1077              	.LVL58:
  93:Core/Src/main.c ****   } else {
 1078              		.loc 1 93 23 view .LVU324
 1079 0020 F2E7     		b	.L28
 1080              	.L31:
 1081 0022 C046     		.align	2
 1082              	.L30:
 1083 0024 0000D03F 		.word	1070596096
 1084 0028 00C0FFFF 		.word	-16384
 1085              		.cfi_endproc
 1086              	.LFE45:
 1088              		.global	__aeabi_ddiv
 1089              		.section	.text.lsb_to_temp,"ax",%progbits
 1090              		.align	1
 1091              		.global	lsb_to_temp
 1092              		.syntax unified
 1093              		.code	16
 1094              		.thumb_func
 1095              		.fpu softvfp
 1097              	lsb_to_temp:
 1098              	.LVL59:
 1099              	.LFB46:
 102:Core/Src/main.c ****   float v = (lsb/4095.0)*3.3;
 1100              		.loc 1 102 32 is_stmt 1 view -0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 102:Core/Src/main.c ****   float v = (lsb/4095.0)*3.3;
 1104              		.loc 1 102 32 is_stmt 0 view .LVU326
 1105 0000 10B5     		push	{r4, lr}
 1106              	.LCFI15:
 1107              		.cfi_def_cfa_offset 8
 1108              		.cfi_offset 4, -8
 1109              		.cfi_offset 14, -4
 103:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 1110              		.loc 1 103 3 is_stmt 1 view .LVU327
 103:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 1111              		.loc 1 103 17 is_stmt 0 view .LVU328
 1112 0002 FFF7FEFF 		bl	__aeabi_i2d
 1113              	.LVL60:
 103:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 1114              		.loc 1 103 17 view .LVU329
 1115 0006 0022     		movs	r2, #0
 1116 0008 044B     		ldr	r3, .L33
ARM GAS  /tmp/ccvGflfM.s 			page 32


 1117 000a FFF7FEFF 		bl	__aeabi_ddiv
 1118              	.LVL61:
 103:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 1119              		.loc 1 103 25 view .LVU330
 1120 000e 044A     		ldr	r2, .L33+4
 1121 0010 044B     		ldr	r3, .L33+8
 1122 0012 FFF7FEFF 		bl	__aeabi_dmul
 1123              	.LVL62:
 103:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 1124              		.loc 1 103 9 view .LVU331
 1125 0016 FFF7FEFF 		bl	__aeabi_d2f
 1126              	.LVL63:
 104:Core/Src/main.c **** }
 1127              		.loc 1 104 3 is_stmt 1 view .LVU332
 105:Core/Src/main.c **** 
 1128              		.loc 1 105 1 is_stmt 0 view .LVU333
 1129              		@ sp needed
 1130 001a 10BD     		pop	{r4, pc}
 1131              	.L34:
 1132              		.align	2
 1133              	.L33:
 1134 001c 00FEAF40 		.word	1085275648
 1135 0020 66666666 		.word	1717986918
 1136 0024 66660A40 		.word	1074423398
 1137              		.cfi_endproc
 1138              	.LFE46:
 1140              		.global	__aeabi_ui2d
 1141              		.global	__aeabi_f2d
 1142              		.global	__aeabi_dadd
 1143              		.section	.text.volt_to_temp,"ax",%progbits
 1144              		.align	1
 1145              		.global	volt_to_temp
 1146              		.syntax unified
 1147              		.code	16
 1148              		.thumb_func
 1149              		.fpu softvfp
 1151              	volt_to_temp:
 1152              	.LVL64:
 1153              	.LFB47:
 107:Core/Src/main.c ****   float v = volt/1000.0;
 1154              		.loc 1 107 34 is_stmt 1 view -0
 1155              		.cfi_startproc
 1156              		@ args = 0, pretend = 0, frame = 0
 1157              		@ frame_needed = 0, uses_anonymous_args = 0
 107:Core/Src/main.c ****   float v = volt/1000.0;
 1158              		.loc 1 107 34 is_stmt 0 view .LVU335
 1159 0000 D0B5     		push	{r4, r6, r7, lr}
 1160              	.LCFI16:
 1161              		.cfi_def_cfa_offset 16
 1162              		.cfi_offset 4, -16
 1163              		.cfi_offset 6, -12
 1164              		.cfi_offset 7, -8
 1165              		.cfi_offset 14, -4
 108:Core/Src/main.c ****   return 23.1 + (7.73*v) + (0.247*(v*v));
 1166              		.loc 1 108 3 is_stmt 1 view .LVU336
 108:Core/Src/main.c ****   return 23.1 + (7.73*v) + (0.247*(v*v));
 1167              		.loc 1 108 17 is_stmt 0 view .LVU337
ARM GAS  /tmp/ccvGflfM.s 			page 33


 1168 0002 FFF7FEFF 		bl	__aeabi_ui2d
 1169              	.LVL65:
 108:Core/Src/main.c ****   return 23.1 + (7.73*v) + (0.247*(v*v));
 1170              		.loc 1 108 17 view .LVU338
 1171 0006 0022     		movs	r2, #0
 1172 0008 124B     		ldr	r3, .L36
 1173 000a FFF7FEFF 		bl	__aeabi_ddiv
 1174              	.LVL66:
 108:Core/Src/main.c ****   return 23.1 + (7.73*v) + (0.247*(v*v));
 1175              		.loc 1 108 9 view .LVU339
 1176 000e FFF7FEFF 		bl	__aeabi_d2f
 1177              	.LVL67:
 1178 0012 041C     		adds	r4, r0, #0
 1179              	.LVL68:
 109:Core/Src/main.c **** }
 1180              		.loc 1 109 3 is_stmt 1 view .LVU340
 109:Core/Src/main.c **** }
 1181              		.loc 1 109 22 is_stmt 0 view .LVU341
 1182 0014 FFF7FEFF 		bl	__aeabi_f2d
 1183              	.LVL69:
 109:Core/Src/main.c **** }
 1184              		.loc 1 109 22 view .LVU342
 1185 0018 0F4A     		ldr	r2, .L36+4
 1186 001a 104B     		ldr	r3, .L36+8
 1187 001c FFF7FEFF 		bl	__aeabi_dmul
 1188              	.LVL70:
 109:Core/Src/main.c **** }
 1189              		.loc 1 109 15 view .LVU343
 1190 0020 0F4A     		ldr	r2, .L36+12
 1191 0022 104B     		ldr	r3, .L36+16
 1192 0024 FFF7FEFF 		bl	__aeabi_dadd
 1193              	.LVL71:
 1194 0028 0600     		movs	r6, r0
 1195 002a 0F00     		movs	r7, r1
 109:Core/Src/main.c **** }
 1196              		.loc 1 109 37 view .LVU344
 1197 002c 211C     		adds	r1, r4, #0
 1198 002e 201C     		adds	r0, r4, #0
 1199 0030 FFF7FEFF 		bl	__aeabi_fmul
 1200              	.LVL72:
 1201 0034 FFF7FEFF 		bl	__aeabi_f2d
 1202              	.LVL73:
 109:Core/Src/main.c **** }
 1203              		.loc 1 109 34 view .LVU345
 1204 0038 0B4A     		ldr	r2, .L36+20
 1205 003a 0C4B     		ldr	r3, .L36+24
 1206 003c FFF7FEFF 		bl	__aeabi_dmul
 1207              	.LVL74:
 1208 0040 0200     		movs	r2, r0
 1209 0042 0B00     		movs	r3, r1
 109:Core/Src/main.c **** }
 1210              		.loc 1 109 26 view .LVU346
 1211 0044 3000     		movs	r0, r6
 1212 0046 3900     		movs	r1, r7
 1213 0048 FFF7FEFF 		bl	__aeabi_dadd
 1214              	.LVL75:
 1215 004c FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  /tmp/ccvGflfM.s 			page 34


 1216              	.LVL76:
 110:Core/Src/main.c **** 
 1217              		.loc 1 110 1 view .LVU347
 1218              		@ sp needed
 1219              	.LVL77:
 110:Core/Src/main.c **** 
 1220              		.loc 1 110 1 view .LVU348
 1221 0050 D0BD     		pop	{r4, r6, r7, pc}
 1222              	.L37:
 1223 0052 C046     		.align	2
 1224              	.L36:
 1225 0054 00408F40 		.word	1083129856
 1226 0058 EC51B81E 		.word	515396076
 1227 005c 85EB1E40 		.word	1075768197
 1228 0060 9A999999 		.word	-1717986918
 1229 0064 99193740 		.word	1077352857
 1230 0068 04560E2D 		.word	755914244
 1231 006c B29DCF3F 		.word	1070570930
 1232              		.cfi_endproc
 1233              	.LFE47:
 1235              		.global	__aeabi_idiv
 1236              		.section	.text.lsb_to_volt,"ax",%progbits
 1237              		.align	1
 1238              		.global	lsb_to_volt
 1239              		.syntax unified
 1240              		.code	16
 1241              		.thumb_func
 1242              		.fpu softvfp
 1244              	lsb_to_volt:
 1245              	.LVL78:
 1246              	.LFB48:
 112:Core/Src/main.c ****   uint32_t v = (lsb*3300)/4095;
 1247              		.loc 1 112 35 is_stmt 1 view -0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 0
 1250              		@ frame_needed = 0, uses_anonymous_args = 0
 112:Core/Src/main.c ****   uint32_t v = (lsb*3300)/4095;
 1251              		.loc 1 112 35 is_stmt 0 view .LVU350
 1252 0000 10B5     		push	{r4, lr}
 1253              	.LCFI17:
 1254              		.cfi_def_cfa_offset 8
 1255              		.cfi_offset 4, -8
 1256              		.cfi_offset 14, -4
 113:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 1257              		.loc 1 113 3 is_stmt 1 view .LVU351
 113:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 1258              		.loc 1 113 20 is_stmt 0 view .LVU352
 1259 0002 034B     		ldr	r3, .L39
 1260 0004 5843     		muls	r0, r3
 1261              	.LVL79:
 113:Core/Src/main.c ****   return v;//23.1 + (7.73*vadc) + (0.247*(vadc*vadc));
 1262              		.loc 1 113 26 view .LVU353
 1263 0006 0349     		ldr	r1, .L39+4
 1264 0008 FFF7FEFF 		bl	__aeabi_idiv
 1265              	.LVL80:
 114:Core/Src/main.c **** }
 1266              		.loc 1 114 3 is_stmt 1 view .LVU354
ARM GAS  /tmp/ccvGflfM.s 			page 35


 115:Core/Src/main.c **** 
 1267              		.loc 1 115 1 is_stmt 0 view .LVU355
 1268              		@ sp needed
 1269 000c 10BD     		pop	{r4, pc}
 1270              	.L40:
 1271 000e C046     		.align	2
 1272              	.L39:
 1273 0010 E40C0000 		.word	3300
 1274 0014 FF0F0000 		.word	4095
 1275              		.cfi_endproc
 1276              	.LFE48:
 1278              		.section	.rodata.temp_timer.str1.4,"aMS",%progbits,1
 1279              		.align	2
 1280              	.LC10:
 1281 0000 252E3466 		.ascii	"%.4f\011%.4f\011%.4f\011%.4f\011%lu\012\015\000"
 1281      09252E34 
 1281      6609252E 
 1281      34660925 
 1281      2E346609 
 1282              		.section	.text.temp_timer,"ax",%progbits
 1283              		.align	1
 1284              		.global	temp_timer
 1285              		.syntax unified
 1286              		.code	16
 1287              		.thumb_func
 1288              		.fpu softvfp
 1290              	temp_timer:
 1291              	.LFB49:
 118:Core/Src/main.c ****   led_set(STATUS, STATE_GREEN);
 1292              		.loc 1 118 18 is_stmt 1 view -0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1297              	.LCFI18:
 1298              		.cfi_def_cfa_offset 20
 1299              		.cfi_offset 4, -20
 1300              		.cfi_offset 5, -16
 1301              		.cfi_offset 6, -12
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 D646     		mov	lr, r10
 1305 0004 4F46     		mov	r7, r9
 1306 0006 4646     		mov	r6, r8
 1307 0008 C0B5     		push	{r6, r7, lr}
 1308              	.LCFI19:
 1309              		.cfi_def_cfa_offset 32
 1310              		.cfi_offset 8, -32
 1311              		.cfi_offset 9, -28
 1312              		.cfi_offset 10, -24
 1313 000a 88B0     		sub	sp, sp, #32
 1314              	.LCFI20:
 1315              		.cfi_def_cfa_offset 64
 119:Core/Src/main.c **** 
 1316              		.loc 1 119 3 view .LVU357
 1317 000c 8020     		movs	r0, #128
 1318 000e 0121     		movs	r1, #1
ARM GAS  /tmp/ccvGflfM.s 			page 36


 1319 0010 8000     		lsls	r0, r0, #2
 1320 0012 FFF7FEFF 		bl	led_set
 1321              	.LVL81:
 121:Core/Src/main.c **** 
 1322              		.loc 1 121 3 view .LVU358
 121:Core/Src/main.c **** 
 1323              		.loc 1 121 12 is_stmt 0 view .LVU359
 1324 0016 324A     		ldr	r2, .L48
 1325 0018 1368     		ldr	r3, [r2]
 1326 001a 1BBA     		rev	r3, r3
 121:Core/Src/main.c **** 
 1327              		.loc 1 121 10 view .LVU360
 1328 001c 1360     		str	r3, [r2]
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1329              		.loc 1 123 3 is_stmt 1 view .LVU361
 1330              	.LBB10:
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1331              		.loc 1 123 7 view .LVU362
 1332              	.LVL82:
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1333              		.loc 1 123 15 is_stmt 0 view .LVU363
 1334 001e 0024     		movs	r4, #0
 1335              	.LVL83:
 1336              	.L42:
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1337              		.loc 1 123 22 is_stmt 1 discriminator 1 view .LVU364
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1338              		.loc 1 123 3 is_stmt 0 discriminator 1 view .LVU365
 1339 0020 052C     		cmp	r4, #5
 1340 0022 09D8     		bhi	.L46
 124:Core/Src/main.c ****   }
 1341              		.loc 1 124 5 is_stmt 1 discriminator 3 view .LVU366
 124:Core/Src/main.c ****   }
 1342              		.loc 1 124 30 is_stmt 0 discriminator 3 view .LVU367
 1343 0024 A500     		lsls	r5, r4, #2
 124:Core/Src/main.c ****   }
 1344              		.loc 1 124 15 discriminator 3 view .LVU368
 1345 0026 2F4B     		ldr	r3, .L48+4
 1346 0028 585B     		ldrh	r0, [r3, r5]
 1347 002a FFF7FEFF 		bl	lsb_to_volt
 1348              	.LVL84:
 124:Core/Src/main.c ****   }
 1349              		.loc 1 124 13 discriminator 3 view .LVU369
 1350 002e 2E4B     		ldr	r3, .L48+8
 1351 0030 5851     		str	r0, [r3, r5]
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1352              		.loc 1 123 29 is_stmt 1 discriminator 3 view .LVU370
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1353              		.loc 1 123 30 is_stmt 0 discriminator 3 view .LVU371
 1354 0032 0134     		adds	r4, r4, #1
 1355              	.LVL85:
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1356              		.loc 1 123 30 discriminator 3 view .LVU372
 1357 0034 E4B2     		uxtb	r4, r4
 1358              	.LVL86:
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1359              		.loc 1 123 30 discriminator 3 view .LVU373
ARM GAS  /tmp/ccvGflfM.s 			page 37


 1360 0036 F3E7     		b	.L42
 1361              	.L46:
 123:Core/Src/main.c ****     vadc[i] = lsb_to_volt(adc[i]);
 1362              		.loc 1 123 30 discriminator 3 view .LVU374
 1363              	.LBE10:
 1364              	.LBB11:
 127:Core/Src/main.c ****     tp[i] = volt_to_temp(vadc[i]);
 1365              		.loc 1 127 15 view .LVU375
 1366 0038 0024     		movs	r4, #0
 1367              	.LVL87:
 1368              	.L44:
 127:Core/Src/main.c ****     tp[i] = volt_to_temp(vadc[i]);
 1369              		.loc 1 127 22 is_stmt 1 discriminator 1 view .LVU376
 127:Core/Src/main.c ****     tp[i] = volt_to_temp(vadc[i]);
 1370              		.loc 1 127 3 is_stmt 0 discriminator 1 view .LVU377
 1371 003a 052C     		cmp	r4, #5
 1372 003c 09D8     		bhi	.L47
 128:Core/Src/main.c ****   }
 1373              		.loc 1 128 5 is_stmt 1 discriminator 3 view .LVU378
 128:Core/Src/main.c ****   }
 1374              		.loc 1 128 13 is_stmt 0 discriminator 3 view .LVU379
 1375 003e A500     		lsls	r5, r4, #2
 1376 0040 294B     		ldr	r3, .L48+8
 1377 0042 E858     		ldr	r0, [r5, r3]
 1378 0044 FFF7FEFF 		bl	volt_to_temp
 1379              	.LVL88:
 128:Core/Src/main.c ****   }
 1380              		.loc 1 128 11 discriminator 3 view .LVU380
 1381 0048 284B     		ldr	r3, .L48+12
 1382 004a 5851     		str	r0, [r3, r5]
 127:Core/Src/main.c ****     tp[i] = volt_to_temp(vadc[i]);
 1383              		.loc 1 127 29 is_stmt 1 discriminator 3 view .LVU381
 127:Core/Src/main.c ****     tp[i] = volt_to_temp(vadc[i]);
 1384              		.loc 1 127 30 is_stmt 0 discriminator 3 view .LVU382
 1385 004c 0134     		adds	r4, r4, #1
 1386              	.LVL89:
 127:Core/Src/main.c ****     tp[i] = volt_to_temp(vadc[i]);
 1387              		.loc 1 127 30 discriminator 3 view .LVU383
 1388 004e E4B2     		uxtb	r4, r4
 1389              	.LVL90:
 127:Core/Src/main.c ****     tp[i] = volt_to_temp(vadc[i]);
 1390              		.loc 1 127 30 discriminator 3 view .LVU384
 1391 0050 F3E7     		b	.L44
 1392              	.L47:
 127:Core/Src/main.c ****     tp[i] = volt_to_temp(vadc[i]);
 1393              		.loc 1 127 30 discriminator 3 view .LVU385
 1394              	.LBE11:
 131:Core/Src/main.c ****   sprintf(tsv_str, "%.4f\t%.4f\t%.4f\t%.4f\t%lu\n\r", tp[0], tp[1], tp[2], tp[3],HAL_GetTick());
 1395              		.loc 1 131 3 is_stmt 1 view .LVU386
 1396 0052 274C     		ldr	r4, .L48+16
 1397              	.LVL91:
 131:Core/Src/main.c ****   sprintf(tsv_str, "%.4f\t%.4f\t%.4f\t%.4f\t%lu\n\r", tp[0], tp[1], tp[2], tp[3],HAL_GetTick());
 1398              		.loc 1 131 3 is_stmt 0 view .LVU387
 1399 0054 6022     		movs	r2, #96
 1400 0056 0021     		movs	r1, #0
 1401 0058 2000     		movs	r0, r4
 1402 005a FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccvGflfM.s 			page 38


 1403              	.LVL92:
 132:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1404              		.loc 1 132 3 is_stmt 1 view .LVU388
 132:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1405              		.loc 1 132 57 is_stmt 0 view .LVU389
 1406 005e 234B     		ldr	r3, .L48+12
 1407 0060 1E68     		ldr	r6, [r3]
 132:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1408              		.loc 1 132 64 view .LVU390
 1409 0062 5A68     		ldr	r2, [r3, #4]
 1410 0064 9046     		mov	r8, r2
 132:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1411              		.loc 1 132 71 view .LVU391
 1412 0066 9A68     		ldr	r2, [r3, #8]
 1413 0068 9146     		mov	r9, r2
 132:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1414              		.loc 1 132 78 view .LVU392
 1415 006a DB68     		ldr	r3, [r3, #12]
 1416 006c 9A46     		mov	r10, r3
 132:Core/Src/main.c ****   CDC_Transmit_FS((uint8_t *) &tsv_str, sizeof tsv_str);
 1417              		.loc 1 132 3 view .LVU393
 1418 006e FFF7FEFF 		bl	HAL_GetTick
 1419              	.LVL93:
 1420 0072 0500     		movs	r5, r0
 1421 0074 301C     		adds	r0, r6, #0
 1422 0076 FFF7FEFF 		bl	__aeabi_f2d
 1423              	.LVL94:
 1424 007a 0600     		movs	r6, r0
 1425 007c 0F00     		movs	r7, r1
 1426 007e 0695     		str	r5, [sp, #24]
 1427 0080 5046     		mov	r0, r10
 1428 0082 FFF7FEFF 		bl	__aeabi_f2d
 1429              	.LVL95:
 1430 0086 0490     		str	r0, [sp, #16]
 1431 0088 0591     		str	r1, [sp, #20]
 1432 008a 4846     		mov	r0, r9
 1433 008c FFF7FEFF 		bl	__aeabi_f2d
 1434              	.LVL96:
 1435 0090 0290     		str	r0, [sp, #8]
 1436 0092 0391     		str	r1, [sp, #12]
 1437 0094 4046     		mov	r0, r8
 1438 0096 FFF7FEFF 		bl	__aeabi_f2d
 1439              	.LVL97:
 1440 009a 0090     		str	r0, [sp]
 1441 009c 0191     		str	r1, [sp, #4]
 1442 009e 3200     		movs	r2, r6
 1443 00a0 3B00     		movs	r3, r7
 1444 00a2 1449     		ldr	r1, .L48+20
 1445 00a4 2000     		movs	r0, r4
 1446 00a6 FFF7FEFF 		bl	sprintf
 1447              	.LVL98:
 133:Core/Src/main.c **** 
 1448              		.loc 1 133 3 is_stmt 1 view .LVU394
 1449 00aa 6021     		movs	r1, #96
 1450 00ac 2000     		movs	r0, r4
 1451 00ae FFF7FEFF 		bl	CDC_Transmit_FS
 1452              	.LVL99:
ARM GAS  /tmp/ccvGflfM.s 			page 39


 135:Core/Src/main.c ****   HAL_SPI_Receive_DMA(&hspi1, (uint8_t *) &spidat, sizeof spidat);
 1453              		.loc 1 135 3 view .LVU395
 1454 00b2 9020     		movs	r0, #144
 1455 00b4 0022     		movs	r2, #0
 1456 00b6 5521     		movs	r1, #85
 1457 00b8 C005     		lsls	r0, r0, #23
 1458 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 1459              	.LVL100:
 136:Core/Src/main.c **** 
 1460              		.loc 1 136 3 view .LVU396
 1461 00be 0422     		movs	r2, #4
 1462 00c0 0749     		ldr	r1, .L48
 1463 00c2 0D48     		ldr	r0, .L48+24
 1464 00c4 FFF7FEFF 		bl	HAL_SPI_Receive_DMA
 1465              	.LVL101:
 138:Core/Src/main.c **** }
 1466              		.loc 1 138 3 view .LVU397
 1467 00c8 0121     		movs	r1, #1
 1468 00ca 8020     		movs	r0, #128
 1469 00cc 4942     		rsbs	r1, r1, #0
 1470 00ce 8000     		lsls	r0, r0, #2
 1471 00d0 FFF7FEFF 		bl	led_set
 1472              	.LVL102:
 139:Core/Src/main.c **** 
 1473              		.loc 1 139 1 is_stmt 0 view .LVU398
 1474 00d4 08B0     		add	sp, sp, #32
 1475              		@ sp needed
 1476 00d6 1CBC     		pop	{r2, r3, r4}
 1477 00d8 9046     		mov	r8, r2
 1478 00da 9946     		mov	r9, r3
 1479 00dc A246     		mov	r10, r4
 1480 00de F0BD     		pop	{r4, r5, r6, r7, pc}
 1481              	.L49:
 1482              		.align	2
 1483              	.L48:
 1484 00e0 00000000 		.word	.LANCHOR0
 1485 00e4 00000000 		.word	.LANCHOR1
 1486 00e8 00000000 		.word	.LANCHOR2
 1487 00ec 00000000 		.word	tp
 1488 00f0 00000000 		.word	tsv_str
 1489 00f4 00000000 		.word	.LC10
 1490 00f8 00000000 		.word	hspi1
 1491              		.cfi_endproc
 1492              	.LFE49:
 1494              		.section	.text.HAL_SPI_RxCpltCallback,"ax",%progbits
 1495              		.align	1
 1496              		.global	HAL_SPI_RxCpltCallback
 1497              		.syntax unified
 1498              		.code	16
 1499              		.thumb_func
 1500              		.fpu softvfp
 1502              	HAL_SPI_RxCpltCallback:
 1503              	.LVL103:
 1504              	.LFB50:
 141:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin, GPIO_PIN_SET);
 1505              		.loc 1 141 54 is_stmt 1 view -0
 1506              		.cfi_startproc
ARM GAS  /tmp/ccvGflfM.s 			page 40


 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 141:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin, GPIO_PIN_SET);
 1509              		.loc 1 141 54 is_stmt 0 view .LVU400
 1510 0000 10B5     		push	{r4, lr}
 1511              	.LCFI21:
 1512              		.cfi_def_cfa_offset 8
 1513              		.cfi_offset 4, -8
 1514              		.cfi_offset 14, -4
 142:Core/Src/main.c **** }
 1515              		.loc 1 142 3 is_stmt 1 view .LVU401
 1516 0002 9020     		movs	r0, #144
 1517              	.LVL104:
 142:Core/Src/main.c **** }
 1518              		.loc 1 142 3 is_stmt 0 view .LVU402
 1519 0004 0122     		movs	r2, #1
 1520 0006 5521     		movs	r1, #85
 1521 0008 C005     		lsls	r0, r0, #23
 1522 000a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1523              	.LVL105:
 143:Core/Src/main.c **** 
 1524              		.loc 1 143 1 view .LVU403
 1525              		@ sp needed
 1526 000e 10BD     		pop	{r4, pc}
 1527              		.cfi_endproc
 1528              	.LFE50:
 1530              		.section	.text.SystemClock_Config,"ax",%progbits
 1531              		.align	1
 1532              		.global	SystemClock_Config
 1533              		.syntax unified
 1534              		.code	16
 1535              		.thumb_func
 1536              		.fpu softvfp
 1538              	SystemClock_Config:
 1539              	.LFB51:
 146:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1540              		.loc 1 146 1 is_stmt 1 view -0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 96
 1543              		@ frame_needed = 0, uses_anonymous_args = 0
 1544 0000 10B5     		push	{r4, lr}
 1545              	.LCFI22:
 1546              		.cfi_def_cfa_offset 8
 1547              		.cfi_offset 4, -8
 1548              		.cfi_offset 14, -4
 1549 0002 98B0     		sub	sp, sp, #96
 1550              	.LCFI23:
 1551              		.cfi_def_cfa_offset 104
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1552              		.loc 1 147 3 view .LVU405
 147:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1553              		.loc 1 147 22 is_stmt 0 view .LVU406
 1554 0004 3022     		movs	r2, #48
 1555 0006 0021     		movs	r1, #0
 1556 0008 0CA8     		add	r0, sp, #48
 1557 000a FFF7FEFF 		bl	memset
 1558              	.LVL106:
ARM GAS  /tmp/ccvGflfM.s 			page 41


 148:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1559              		.loc 1 148 3 is_stmt 1 view .LVU407
 148:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 1560              		.loc 1 148 22 is_stmt 0 view .LVU408
 1561 000e 1024     		movs	r4, #16
 1562 0010 1022     		movs	r2, #16
 1563 0012 0021     		movs	r1, #0
 1564 0014 07A8     		add	r0, sp, #28
 1565 0016 FFF7FEFF 		bl	memset
 1566              	.LVL107:
 149:Core/Src/main.c **** 
 1567              		.loc 1 149 3 is_stmt 1 view .LVU409
 149:Core/Src/main.c **** 
 1568              		.loc 1 149 28 is_stmt 0 view .LVU410
 1569 001a 1C22     		movs	r2, #28
 1570 001c 0021     		movs	r1, #0
 1571 001e 6846     		mov	r0, sp
 1572 0020 FFF7FEFF 		bl	memset
 1573              	.LVL108:
 151:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 1574              		.loc 1 151 3 is_stmt 1 view .LVU411
 151:Core/Src/main.c ****                               |RCC_OSCILLATORTYPE_HSI48;
 1575              		.loc 1 151 36 is_stmt 0 view .LVU412
 1576 0024 3223     		movs	r3, #50
 1577 0026 0B93     		str	r3, [sp, #44]
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 1578              		.loc 1 153 3 is_stmt 1 view .LVU413
 153:Core/Src/main.c ****   RCC_OscInitStruct.HSI48State = RCC_HSI48_ON;
 1579              		.loc 1 153 30 is_stmt 0 view .LVU414
 1580 0028 313B     		subs	r3, r3, #49
 1581 002a 0E93     		str	r3, [sp, #56]
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1582              		.loc 1 154 3 is_stmt 1 view .LVU415
 154:Core/Src/main.c ****   RCC_OscInitStruct.HSI14State = RCC_HSI14_ON;
 1583              		.loc 1 154 32 is_stmt 0 view .LVU416
 1584 002c 1393     		str	r3, [sp, #76]
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1585              		.loc 1 155 3 is_stmt 1 view .LVU417
 155:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1586              		.loc 1 155 32 is_stmt 0 view .LVU418
 1587 002e 1093     		str	r3, [sp, #64]
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1588              		.loc 1 156 3 is_stmt 1 view .LVU419
 156:Core/Src/main.c ****   RCC_OscInitStruct.HSI14CalibrationValue = 16;
 1589              		.loc 1 156 41 is_stmt 0 view .LVU420
 1590 0030 0F94     		str	r4, [sp, #60]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1591              		.loc 1 157 3 is_stmt 1 view .LVU421
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1592              		.loc 1 157 43 is_stmt 0 view .LVU422
 1593 0032 1194     		str	r4, [sp, #68]
 158:Core/Src/main.c ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 1594              		.loc 1 158 3 is_stmt 1 view .LVU423
 158:Core/Src/main.c ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
 1595              		.loc 1 158 34 is_stmt 0 view .LVU424
 1596 0034 0024     		movs	r4, #0
 159:Core/Src/main.c **** 
ARM GAS  /tmp/ccvGflfM.s 			page 42


 1597              		.loc 1 159 3 is_stmt 1 view .LVU425
 1598 0036 0BA8     		add	r0, sp, #44
 1599 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1600              	.LVL109:
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1601              		.loc 1 163 3 view .LVU426
 163:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1602              		.loc 1 163 31 is_stmt 0 view .LVU427
 1603 003c 0723     		movs	r3, #7
 1604 003e 0793     		str	r3, [sp, #28]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1605              		.loc 1 165 3 is_stmt 1 view .LVU428
 165:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1606              		.loc 1 165 34 is_stmt 0 view .LVU429
 1607 0040 043B     		subs	r3, r3, #4
 1608 0042 0893     		str	r3, [sp, #32]
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1609              		.loc 1 166 3 is_stmt 1 view .LVU430
 166:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1610              		.loc 1 166 35 is_stmt 0 view .LVU431
 1611 0044 0994     		str	r4, [sp, #36]
 167:Core/Src/main.c **** 
 1612              		.loc 1 167 3 is_stmt 1 view .LVU432
 167:Core/Src/main.c **** 
 1613              		.loc 1 167 36 is_stmt 0 view .LVU433
 1614 0046 0A94     		str	r4, [sp, #40]
 169:Core/Src/main.c **** 
 1615              		.loc 1 169 3 is_stmt 1 view .LVU434
 1616 0048 0121     		movs	r1, #1
 1617 004a 07A8     		add	r0, sp, #28
 1618 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1619              	.LVL110:
 172:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1620              		.loc 1 172 3 view .LVU435
 172:Core/Src/main.c ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 1621              		.loc 1 172 38 is_stmt 0 view .LVU436
 1622 0050 044B     		ldr	r3, .L52
 1623 0052 0093     		str	r3, [sp]
 173:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 1624              		.loc 1 173 3 is_stmt 1 view .LVU437
 173:Core/Src/main.c ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_HSI48;
 1625              		.loc 1 173 36 is_stmt 0 view .LVU438
 1626 0054 0494     		str	r4, [sp, #16]
 174:Core/Src/main.c **** 
 1627              		.loc 1 174 3 is_stmt 1 view .LVU439
 174:Core/Src/main.c **** 
 1628              		.loc 1 174 35 is_stmt 0 view .LVU440
 1629 0056 0694     		str	r4, [sp, #24]
 176:Core/Src/main.c **** 
 1630              		.loc 1 176 3 is_stmt 1 view .LVU441
 1631 0058 6846     		mov	r0, sp
 1632 005a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1633              	.LVL111:
 179:Core/Src/main.c **** 
 1634              		.loc 1 179 1 is_stmt 0 view .LVU442
 1635 005e 18B0     		add	sp, sp, #96
 1636              		@ sp needed
ARM GAS  /tmp/ccvGflfM.s 			page 43


 1637 0060 10BD     		pop	{r4, pc}
 1638              	.L53:
 1639 0062 C046     		.align	2
 1640              	.L52:
 1641 0064 20000200 		.word	131104
 1642              		.cfi_endproc
 1643              	.LFE51:
 1645              		.section	.text.main,"ax",%progbits
 1646              		.align	1
 1647              		.global	main
 1648              		.syntax unified
 1649              		.code	16
 1650              		.thumb_func
 1651              		.fpu softvfp
 1653              	main:
 1654              	.LFB43:
  47:Core/Src/main.c ****   HAL_Init();
 1655              		.loc 1 47 1 is_stmt 1 view -0
 1656              		.cfi_startproc
 1657              		@ Volatile: function does not return.
 1658              		@ args = 0, pretend = 0, frame = 0
 1659              		@ frame_needed = 0, uses_anonymous_args = 0
 1660 0000 10B5     		push	{r4, lr}
 1661              	.LCFI24:
 1662              		.cfi_def_cfa_offset 8
 1663              		.cfi_offset 4, -8
 1664              		.cfi_offset 14, -4
  48:Core/Src/main.c ****   SystemClock_Config();
 1665              		.loc 1 48 3 view .LVU444
 1666 0002 FFF7FEFF 		bl	HAL_Init
 1667              	.LVL112:
  49:Core/Src/main.c ****   MX_GPIO_Init();
 1668              		.loc 1 49 3 view .LVU445
 1669 0006 FFF7FEFF 		bl	SystemClock_Config
 1670              	.LVL113:
  50:Core/Src/main.c ****   MX_DMA_Init();
 1671              		.loc 1 50 3 view .LVU446
 1672 000a FFF7FEFF 		bl	MX_GPIO_Init
 1673              	.LVL114:
  51:Core/Src/main.c ****   MX_SPI1_Init();
 1674              		.loc 1 51 3 view .LVU447
 1675 000e FFF7FEFF 		bl	MX_DMA_Init
 1676              	.LVL115:
  52:Core/Src/main.c ****   //MX_USB_PCD_Init();
 1677              		.loc 1 52 3 view .LVU448
 1678 0012 FFF7FEFF 		bl	MX_SPI1_Init
 1679              	.LVL116:
  54:Core/Src/main.c ****   MX_TIM1_Init();
 1680              		.loc 1 54 3 view .LVU449
 1681 0016 FFF7FEFF 		bl	MX_I2C1_Init
 1682              	.LVL117:
  55:Core/Src/main.c ****   MX_ADC_Init();
 1683              		.loc 1 55 3 view .LVU450
 1684 001a FFF7FEFF 		bl	MX_TIM1_Init
 1685              	.LVL118:
  56:Core/Src/main.c ****   MX_TIM2_Init();
 1686              		.loc 1 56 3 view .LVU451
ARM GAS  /tmp/ccvGflfM.s 			page 44


 1687 001e FFF7FEFF 		bl	MX_ADC_Init
 1688              	.LVL119:
  57:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 1689              		.loc 1 57 3 view .LVU452
 1690 0022 FFF7FEFF 		bl	MX_TIM2_Init
 1691              	.LVL120:
  58:Core/Src/main.c **** 
 1692              		.loc 1 58 3 view .LVU453
 1693 0026 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 1694              	.LVL121:
  62:Core/Src/main.c ****   //HAL_TIM_Base_Start_IT(&htim1);
 1695              		.loc 1 62 3 view .LVU454
 1696 002a 0622     		movs	r2, #6
 1697 002c 1049     		ldr	r1, .L56
 1698 002e 1148     		ldr	r0, .L56+4
 1699 0030 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 1700              	.LVL122:
  64:Core/Src/main.c ****   //GPIOA, NSS3_Pin|NSS2_Pin|NSS1_Pin|NSS0_Pin
 1701              		.loc 1 64 3 view .LVU455
 1702 0034 1048     		ldr	r0, .L56+8
 1703 0036 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1704              	.LVL123:
  67:Core/Src/main.c ****   led_set(LED0, STATE_OFF);
 1705              		.loc 1 67 3 view .LVU456
 1706 003a 0124     		movs	r4, #1
 1707 003c 6442     		rsbs	r4, r4, #0
 1708 003e 8020     		movs	r0, #128
 1709 0040 2100     		movs	r1, r4
 1710 0042 8000     		lsls	r0, r0, #2
 1711 0044 FFF7FEFF 		bl	led_set
 1712              	.LVL124:
  68:Core/Src/main.c ****   led_set(LED1, STATE_OFF);
 1713              		.loc 1 68 3 view .LVU457
 1714 0048 2100     		movs	r1, r4
 1715 004a 0120     		movs	r0, #1
 1716 004c FFF7FEFF 		bl	led_set
 1717              	.LVL125:
  69:Core/Src/main.c ****   led_set(LED2, STATE_OFF);
 1718              		.loc 1 69 3 view .LVU458
 1719 0050 8020     		movs	r0, #128
 1720 0052 2100     		movs	r1, r4
 1721 0054 0002     		lsls	r0, r0, #8
 1722 0056 FFF7FEFF 		bl	led_set
 1723              	.LVL126:
  70:Core/Src/main.c ****   led_set(LED3, STATE_OFF);
 1724              		.loc 1 70 3 view .LVU459
 1725 005a 8020     		movs	r0, #128
 1726 005c 2100     		movs	r1, r4
 1727 005e C001     		lsls	r0, r0, #7
 1728 0060 FFF7FEFF 		bl	led_set
 1729              	.LVL127:
  71:Core/Src/main.c ****   //led_set(LED3, STATE_GREEN);
 1730              		.loc 1 71 3 view .LVU460
 1731 0064 8020     		movs	r0, #128
 1732 0066 2100     		movs	r1, r4
 1733 0068 8001     		lsls	r0, r0, #6
 1734 006a FFF7FEFF 		bl	led_set
ARM GAS  /tmp/ccvGflfM.s 			page 45


 1735              	.LVL128:
 1736              	.L55:
  74:Core/Src/main.c ****   {
 1737              		.loc 1 74 3 discriminator 1 view .LVU461
  76:Core/Src/main.c **** }
 1738              		.loc 1 76 3 discriminator 1 view .LVU462
  74:Core/Src/main.c ****   {
 1739              		.loc 1 74 9 discriminator 1 view .LVU463
 1740 006e FEE7     		b	.L55
 1741              	.L57:
 1742              		.align	2
 1743              	.L56:
 1744 0070 00000000 		.word	.LANCHOR1
 1745 0074 00000000 		.word	hadc
 1746 0078 00000000 		.word	htim2
 1747              		.cfi_endproc
 1748              	.LFE43:
 1750              		.section	.text.Error_Handler,"ax",%progbits
 1751              		.align	1
 1752              		.global	Error_Handler
 1753              		.syntax unified
 1754              		.code	16
 1755              		.thumb_func
 1756              		.fpu softvfp
 1758              	Error_Handler:
 1759              	.LFB59:
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** void Error_Handler(void)
 418:Core/Src/main.c **** {
 1760              		.loc 1 418 1 view -0
 1761              		.cfi_startproc
 1762              		@ Volatile: function does not return.
 1763              		@ args = 0, pretend = 0, frame = 0
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 1765              		@ link register save eliminated.
 419:Core/Src/main.c ****   __disable_irq();
 1766              		.loc 1 419 3 view .LVU465
 1767              	.LBB12:
 1768              	.LBI12:
 1769              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccvGflfM.s 			page 46


  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
ARM GAS  /tmp/ccvGflfM.s 			page 47


  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
ARM GAS  /tmp/ccvGflfM.s 			page 48


 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1770              		.loc 2 140 27 view .LVU466
 1771              	.LBB13:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1772              		.loc 2 142 3 view .LVU467
 1773              		.syntax divided
 1774              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1775 0000 72B6     		cpsid i
 1776              	@ 0 "" 2
 1777              		.thumb
 1778              		.syntax unified
 1779              	.L59:
 1780              	.LBE13:
 1781              	.LBE12:
 420:Core/Src/main.c ****   while (1)
 1782              		.loc 1 420 3 discriminator 1 view .LVU468
 421:Core/Src/main.c ****   {
 422:Core/Src/main.c ****   }
 1783              		.loc 1 422 3 discriminator 1 view .LVU469
 420:Core/Src/main.c ****   while (1)
 1784              		.loc 1 420 9 discriminator 1 view .LVU470
 1785 0002 FEE7     		b	.L59
 1786              		.cfi_endproc
 1787              	.LFE59:
 1789              		.comm	temp_int,4,4
 1790              		.comm	tsv_str,96,4
 1791              		.comm	tp,24,4
 1792              		.comm	htim2,72,4
 1793              		.comm	htim1,72,4
 1794              		.comm	hdma_spi1_rx,68,4
 1795              		.comm	hspi1,100,4
 1796              		.comm	hdma_i2c1_tx,68,4
 1797              		.comm	hdma_i2c1_rx,68,4
 1798              		.comm	hi2c1,76,4
 1799              		.comm	hdma_adc,68,4
 1800              		.comm	hadc,64,4
 1801              		.section	.bss.adc,"aw",%nobits
 1802              		.align	2
 1803              		.set	.LANCHOR1,. + 0
 1806              	adc:
 1807 0000 00000000 		.space	24
 1807      00000000 
 1807      00000000 
 1807      00000000 
 1807      00000000 
 1808              		.section	.bss.spidat,"aw",%nobits
 1809              		.align	2
 1810              		.set	.LANCHOR0,. + 0
ARM GAS  /tmp/ccvGflfM.s 			page 49


 1813              	spidat:
 1814 0000 00000000 		.space	4
 1815              		.section	.bss.vadc,"aw",%nobits
 1816              		.align	2
 1817              		.set	.LANCHOR2,. + 0
 1820              	vadc:
 1821 0000 00000000 		.space	24
 1821      00000000 
 1821      00000000 
 1821      00000000 
 1821      00000000 
 1822              		.text
 1823              	.Letext0:
 1824              		.file 3 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1825              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 1826              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 1827              		.file 6 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 1828              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1829              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1830              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 1831              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1832              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 1833              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 1834              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c.h"
 1835              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 1836              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 1837              		.file 16 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1838              		.file 17 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 1839              		.file 18 "/usr/include/newlib/sys/_types.h"
 1840              		.file 19 "/usr/include/newlib/sys/reent.h"
 1841              		.file 20 "/usr/include/newlib/sys/lock.h"
 1842              		.file 21 "/usr/include/newlib/stdlib.h"
 1843              		.file 22 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 1844              		.file 23 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim_ex.h"
 1845              		.file 24 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_i2c_ex.h"
 1846              		.file 25 "Core/Inc/led.h"
 1847              		.file 26 "/usr/include/newlib/stdio.h"
 1848              		.file 27 "USB_DEVICE/App/usb_device.h"
 1849              		.file 28 "<built-in>"
ARM GAS  /tmp/ccvGflfM.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccvGflfM.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccvGflfM.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccvGflfM.s:260    .text.MX_GPIO_Init:0000000000000104 $d
     /tmp/ccvGflfM.s:269    .text.MX_DMA_Init:0000000000000000 $t
     /tmp/ccvGflfM.s:275    .text.MX_DMA_Init:0000000000000000 MX_DMA_Init
     /tmp/ccvGflfM.s:342    .text.MX_DMA_Init:000000000000004c $d
     /tmp/ccvGflfM.s:347    .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccvGflfM.s:353    .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccvGflfM.s:430    .text.MX_SPI1_Init:0000000000000044 $d
                            *COM*:0000000000000064 hspi1
     /tmp/ccvGflfM.s:436    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccvGflfM.s:442    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccvGflfM.s:507    .text.MX_I2C1_Init:000000000000003c $d
                            *COM*:000000000000004c hi2c1
     /tmp/ccvGflfM.s:514    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccvGflfM.s:520    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccvGflfM.s:609    .text.MX_TIM2_Init:000000000000005c $d
                            *COM*:0000000000000048 htim2
     /tmp/ccvGflfM.s:615    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccvGflfM.s:621    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccvGflfM.s:784    .text.MX_TIM1_Init:00000000000000a8 $d
                            *COM*:0000000000000048 htim1
     /tmp/ccvGflfM.s:790    .text.MX_ADC_Init:0000000000000000 $t
     /tmp/ccvGflfM.s:796    .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/ccvGflfM.s:941    .text.MX_ADC_Init:0000000000000094 $d
                            *COM*:0000000000000040 hadc
     /tmp/ccvGflfM.s:949    .text.MAX31855_get_tcold:0000000000000000 $t
     /tmp/ccvGflfM.s:956    .text.MAX31855_get_tcold:0000000000000000 MAX31855_get_tcold
     /tmp/ccvGflfM.s:1015   .text.MAX31855_get_tcold:0000000000000024 $d
     /tmp/ccvGflfM.s:1023   .text.MAX31855_get_twarm:0000000000000000 $t
     /tmp/ccvGflfM.s:1030   .text.MAX31855_get_twarm:0000000000000000 MAX31855_get_twarm
     /tmp/ccvGflfM.s:1083   .text.MAX31855_get_twarm:0000000000000024 $d
     /tmp/ccvGflfM.s:1090   .text.lsb_to_temp:0000000000000000 $t
     /tmp/ccvGflfM.s:1097   .text.lsb_to_temp:0000000000000000 lsb_to_temp
     /tmp/ccvGflfM.s:1134   .text.lsb_to_temp:000000000000001c $d
     /tmp/ccvGflfM.s:1144   .text.volt_to_temp:0000000000000000 $t
     /tmp/ccvGflfM.s:1151   .text.volt_to_temp:0000000000000000 volt_to_temp
     /tmp/ccvGflfM.s:1225   .text.volt_to_temp:0000000000000054 $d
     /tmp/ccvGflfM.s:1237   .text.lsb_to_volt:0000000000000000 $t
     /tmp/ccvGflfM.s:1244   .text.lsb_to_volt:0000000000000000 lsb_to_volt
     /tmp/ccvGflfM.s:1273   .text.lsb_to_volt:0000000000000010 $d
     /tmp/ccvGflfM.s:1279   .rodata.temp_timer.str1.4:0000000000000000 $d
     /tmp/ccvGflfM.s:1283   .text.temp_timer:0000000000000000 $t
     /tmp/ccvGflfM.s:1290   .text.temp_timer:0000000000000000 temp_timer
     /tmp/ccvGflfM.s:1484   .text.temp_timer:00000000000000e0 $d
                            *COM*:0000000000000018 tp
                            *COM*:0000000000000060 tsv_str
     /tmp/ccvGflfM.s:1495   .text.HAL_SPI_RxCpltCallback:0000000000000000 $t
     /tmp/ccvGflfM.s:1502   .text.HAL_SPI_RxCpltCallback:0000000000000000 HAL_SPI_RxCpltCallback
     /tmp/ccvGflfM.s:1531   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccvGflfM.s:1538   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccvGflfM.s:1641   .text.SystemClock_Config:0000000000000064 $d
     /tmp/ccvGflfM.s:1646   .text.main:0000000000000000 $t
     /tmp/ccvGflfM.s:1653   .text.main:0000000000000000 main
     /tmp/ccvGflfM.s:1744   .text.main:0000000000000070 $d
ARM GAS  /tmp/ccvGflfM.s 			page 51


     /tmp/ccvGflfM.s:1751   .text.Error_Handler:0000000000000000 $t
     /tmp/ccvGflfM.s:1758   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000004 temp_int
                            *COM*:0000000000000044 hdma_spi1_rx
                            *COM*:0000000000000044 hdma_i2c1_tx
                            *COM*:0000000000000044 hdma_i2c1_rx
                            *COM*:0000000000000044 hdma_adc
     /tmp/ccvGflfM.s:1802   .bss.adc:0000000000000000 $d
     /tmp/ccvGflfM.s:1806   .bss.adc:0000000000000000 adc
     /tmp/ccvGflfM.s:1809   .bss.spidat:0000000000000000 $d
     /tmp/ccvGflfM.s:1813   .bss.spidat:0000000000000000 spidat
     /tmp/ccvGflfM.s:1816   .bss.vadc:0000000000000000 $d
     /tmp/ccvGflfM.s:1820   .bss.vadc:0000000000000000 vadc

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_Init
HAL_I2C_Init
HAL_I2CEx_ConfigAnalogFilter
HAL_I2CEx_ConfigDigitalFilter
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_Init
HAL_TIM_OC_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_ADC_Init
HAL_ADC_ConfigChannel
__aeabi_i2f
__aeabi_fmul
__aeabi_i2d
__aeabi_dmul
__aeabi_d2f
__aeabi_ddiv
__aeabi_ui2d
__aeabi_f2d
__aeabi_dadd
__aeabi_idiv
led_set
HAL_GetTick
sprintf
CDC_Transmit_FS
HAL_SPI_Receive_DMA
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_USB_DEVICE_Init
HAL_ADC_Start_DMA
HAL_TIM_Base_Start_IT
