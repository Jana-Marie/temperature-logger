ARM GAS  /tmp/ccsqfM5S.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_MspInit:
  25              	.LFB42:
  26              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c"
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @file    stm32f0xx_hal.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @verbatim
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Initialization and de-initialization functions
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****          (+) HAL Control functions
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   @endverbatim
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @attention
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   ******************************************************************************
ARM GAS  /tmp/ccsqfM5S.s 			page 2


  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #include "stm32f0xx_hal.h"
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @addtogroup STM32F0xx_HAL_Driver
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private define ------------------------------------------------------------*/
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** 
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief STM32F0xx HAL Driver version number V1.7.6
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB1   (0x07U) /*!< [23:16] sub1 version */
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_SUB2   (0x06U) /*!< [15:8]  sub2 version */
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define __STM32F0xx_HAL_VERSION         ((__STM32F0xx_HAL_VERSION_MAIN << 24U)\
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB1 << 16U)\
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_SUB2 << 8U )\
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                                         |(__STM32F0xx_HAL_VERSION_RC))
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Macros HAL Private Macros
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported variables ---------------------------------------------------------*/
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Exported Variables
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/ccsqfM5S.s 			page 3


  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    Initialization and de-initialization functions
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    [..]  This section provides functions allowing to:
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock 
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           and the backup domain when enabled.
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) de-Initializes common part of the HAL.
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****           Tick interrupt priority.
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              handled in milliseconds basis.
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             ISR process will be blocked. 
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****        (++) functions affecting time base configurations are declared as __Weak  
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This function configures the Flash prefetch,
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before 
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       the clock configuration
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note The time base configuration is based on HSI clock when exiting from Reset.
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Once done, time base tick start incrementing.
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       In the default implementation,Systick is used as source of time base.
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The tick variable is incremented each 1ms in its ISR.
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
ARM GAS  /tmp/ccsqfM5S.s 			page 4


 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Init the low level hardware */
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspInit();
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function de-Initialize common part of the HAL and stops the SysTick
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        of time base.
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is optional.
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* De-Init the low level hardware */
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_MspDeInit();
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Return function status */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Initialize the MSP.
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspInit(void)
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  27              		.loc 1 189 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  32              		.loc 1 193 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE42:
ARM GAS  /tmp/ccsqfM5S.s 			page 5


  38              		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	1
  40              		.weak	HAL_MspDeInit
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	HAL_MspDeInit:
  47              	.LFB43:
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  DeInitializes the MSP.
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_MspDeInit(void)
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
  48              		.loc 1 200 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    */
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  53              		.loc 1 204 1 view .LVU3
  54              		@ sp needed
  55 0000 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE43:
  59              		.section	.text.HAL_DeInit,"ax",%progbits
  60              		.align	1
  61              		.global	HAL_DeInit
  62              		.syntax unified
  63              		.code	16
  64              		.thumb_func
  65              		.fpu softvfp
  67              	HAL_DeInit:
  68              	.LFB41:
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Reset of all peripherals */
  69              		.loc 1 166 1 view -0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 10B5     		push	{r4, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 4, -8
  77              		.cfi_offset 14, -4
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  78              		.loc 1 168 3 view .LVU5
  79 0002 074B     		ldr	r3, .L4
  80 0004 0121     		movs	r1, #1
  81 0006 4942     		rsbs	r1, r1, #0
  82 0008 1961     		str	r1, [r3, #16]
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  83              		.loc 1 169 3 view .LVU6
ARM GAS  /tmp/ccsqfM5S.s 			page 6


  84 000a 0022     		movs	r2, #0
  85 000c 1A61     		str	r2, [r3, #16]
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  86              		.loc 1 171 3 view .LVU7
  87 000e D960     		str	r1, [r3, #12]
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  88              		.loc 1 172 3 view .LVU8
  89 0010 DA60     		str	r2, [r3, #12]
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  90              		.loc 1 174 3 view .LVU9
  91 0012 9962     		str	r1, [r3, #40]
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  92              		.loc 1 175 3 view .LVU10
  93 0014 9A62     		str	r2, [r3, #40]
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     
  94              		.loc 1 178 3 view .LVU11
  95 0016 FFF7FEFF 		bl	HAL_MspDeInit
  96              	.LVL0:
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
  97              		.loc 1 181 3 view .LVU12
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
  98              		.loc 1 182 1 is_stmt 0 view .LVU13
  99 001a 0020     		movs	r0, #0
 100              		@ sp needed
 101 001c 10BD     		pop	{r4, pc}
 102              	.L5:
 103 001e C046     		.align	2
 104              	.L4:
 105 0020 00100240 		.word	1073876992
 106              		.cfi_endproc
 107              	.LFE41:
 109              		.global	__aeabi_uidiv
 110              		.section	.text.HAL_InitTick,"ax",%progbits
 111              		.align	1
 112              		.weak	HAL_InitTick
 113              		.syntax unified
 114              		.code	16
 115              		.thumb_func
 116              		.fpu softvfp
 118              	HAL_InitTick:
 119              	.LVL1:
 120              	.LFB44:
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function configures the source of the time base. 
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        Tick interrupt priority.
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig(). 
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 213:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 214:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 215:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower) 
 216:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 217:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       The function is declared as __Weak  to be overwritten  in case of other
 218:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementation  in user file.
 219:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
ARM GAS  /tmp/ccsqfM5S.s 			page 7


 220:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval HAL status
 221:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 222:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 223:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 121              		.loc 1 223 1 is_stmt 1 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		.loc 1 223 1 is_stmt 0 view .LVU15
 126 0000 10B5     		push	{r4, lr}
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 4, -8
 130              		.cfi_offset 14, -4
 131 0002 0400     		movs	r4, r0
 224:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 225:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 132              		.loc 1 225 3 is_stmt 1 view .LVU16
 133              		.loc 1 225 51 is_stmt 0 view .LVU17
 134 0004 0F4B     		ldr	r3, .L11
 135 0006 1978     		ldrb	r1, [r3]
 136 0008 FA20     		movs	r0, #250
 137              	.LVL2:
 138              		.loc 1 225 51 view .LVU18
 139 000a 8000     		lsls	r0, r0, #2
 140 000c FFF7FEFF 		bl	__aeabi_uidiv
 141              	.LVL3:
 142 0010 0100     		movs	r1, r0
 143              		.loc 1 225 7 view .LVU19
 144 0012 0D4B     		ldr	r3, .L11+4
 145 0014 1868     		ldr	r0, [r3]
 146 0016 FFF7FEFF 		bl	__aeabi_uidiv
 147              	.LVL4:
 148 001a FFF7FEFF 		bl	HAL_SYSTICK_Config
 149              	.LVL5:
 150              		.loc 1 225 6 view .LVU20
 151 001e 0028     		cmp	r0, #0
 152 0020 0DD1     		bne	.L8
 226:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 228:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 229:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 230:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure the SysTick IRQ priority */
 231:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 153              		.loc 1 231 3 is_stmt 1 view .LVU21
 154              		.loc 1 231 6 is_stmt 0 view .LVU22
 155 0022 032C     		cmp	r4, #3
 156 0024 01D9     		bls	.L10
 232:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickPrio = TickPriority;
 235:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 236:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   else
 237:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 238:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     return HAL_ERROR;
 157              		.loc 1 238 12 view .LVU23
 158 0026 0120     		movs	r0, #1
ARM GAS  /tmp/ccsqfM5S.s 			page 8


 159 0028 0AE0     		b	.L7
 160              	.L10:
 233:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickPrio = TickPriority;
 161              		.loc 1 233 5 is_stmt 1 view .LVU24
 162 002a 0130     		adds	r0, r0, #1
 163 002c 0022     		movs	r2, #0
 164 002e 2100     		movs	r1, r4
 165 0030 4042     		rsbs	r0, r0, #0
 166 0032 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 167              	.LVL6:
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 168              		.loc 1 234 5 view .LVU25
 234:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 169              		.loc 1 234 16 is_stmt 0 view .LVU26
 170 0036 054B     		ldr	r3, .L11+8
 171 0038 1C60     		str	r4, [r3]
 239:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 240:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 241:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    /* Return function status */
 242:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return HAL_OK;
 172              		.loc 1 242 3 is_stmt 1 view .LVU27
 173              		.loc 1 242 10 is_stmt 0 view .LVU28
 174 003a 0020     		movs	r0, #0
 175 003c 00E0     		b	.L7
 176              	.L8:
 227:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 177              		.loc 1 227 12 view .LVU29
 178 003e 0120     		movs	r0, #1
 179              	.L7:
 243:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 180              		.loc 1 243 1 view .LVU30
 181              		@ sp needed
 182              	.LVL7:
 183              		.loc 1 243 1 view .LVU31
 184 0040 10BD     		pop	{r4, pc}
 185              	.L12:
 186 0042 C046     		.align	2
 187              	.L11:
 188 0044 00000000 		.word	.LANCHOR0
 189 0048 00000000 		.word	SystemCoreClock
 190 004c 00000000 		.word	.LANCHOR1
 191              		.cfi_endproc
 192              	.LFE44:
 194              		.section	.text.HAL_Init,"ax",%progbits
 195              		.align	1
 196              		.global	HAL_Init
 197              		.syntax unified
 198              		.code	16
 199              		.thumb_func
 200              		.fpu softvfp
 202              	HAL_Init:
 203              	.LFB40:
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Configure Flash prefetch */ 
 204              		.loc 1 142 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsqfM5S.s 			page 9


 208 0000 10B5     		push	{r4, lr}
 209              	.LCFI2:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 4, -8
 212              		.cfi_offset 14, -4
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 213              		.loc 1 145 3 view .LVU33
 214 0002 064A     		ldr	r2, .L14
 215 0004 1368     		ldr	r3, [r2]
 216 0006 1021     		movs	r1, #16
 217 0008 0B43     		orrs	r3, r1
 218 000a 1360     		str	r3, [r2]
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 219              		.loc 1 150 3 view .LVU34
 220 000c 0320     		movs	r0, #3
 221 000e FFF7FEFF 		bl	HAL_InitTick
 222              	.LVL8:
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 223              		.loc 1 153 3 view .LVU35
 224 0012 FFF7FEFF 		bl	HAL_MspInit
 225              	.LVL9:
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 226              		.loc 1 156 3 view .LVU36
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 227              		.loc 1 157 1 is_stmt 0 view .LVU37
 228 0016 0020     		movs	r0, #0
 229              		@ sp needed
 230 0018 10BD     		pop	{r4, pc}
 231              	.L15:
 232 001a C046     		.align	2
 233              	.L14:
 234 001c 00200240 		.word	1073881088
 235              		.cfi_endproc
 236              	.LFE40:
 238              		.section	.text.HAL_IncTick,"ax",%progbits
 239              		.align	1
 240              		.weak	HAL_IncTick
 241              		.syntax unified
 242              		.code	16
 243              		.thumb_func
 244              		.fpu softvfp
 246              	HAL_IncTick:
 247              	.LFB45:
 244:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 245:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 246:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @}
 247:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 248:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 249:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 250:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief    HAL Control functions
 251:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *
 252:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @verbatim
 253:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 254:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****                       ##### HAL Control functions #####
 255:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  ===============================================================================
 256:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     [..]  This section provides functions allowing to:
 257:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a tick value in millisecond
ARM GAS  /tmp/ccsqfM5S.s 			page 10


 258:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 259:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Suspend the time base source interrupt
 260:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Resume the time base source interrupt
 261:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the HAL API driver version
 262:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device identifier
 263:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Get the device revision identifier
 264:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during Sleep mode
 265:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 266:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 267:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       
 268:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** @endverbatim
 269:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @{
 270:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 271:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 272:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 273:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 274:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        used as application time base.
 275:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 276:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       in SysTick ISR.
 277:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 278:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 279:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 280:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 281:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_IncTick(void)
 282:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 248              		.loc 1 282 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 283:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uwTick += uwTickFreq;
 253              		.loc 1 283 3 view .LVU39
 254              		.loc 1 283 10 is_stmt 0 view .LVU40
 255 0000 034A     		ldr	r2, .L17
 256 0002 1168     		ldr	r1, [r2]
 257 0004 034B     		ldr	r3, .L17+4
 258 0006 1B78     		ldrb	r3, [r3]
 259 0008 5B18     		adds	r3, r3, r1
 260 000a 1360     		str	r3, [r2]
 284:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 261              		.loc 1 284 1 view .LVU41
 262              		@ sp needed
 263 000c 7047     		bx	lr
 264              	.L18:
 265 000e C046     		.align	2
 266              	.L17:
 267 0010 00000000 		.word	uwTick
 268 0014 00000000 		.word	.LANCHOR0
 269              		.cfi_endproc
 270              	.LFE45:
 272              		.section	.text.HAL_GetTick,"ax",%progbits
 273              		.align	1
 274              		.weak	HAL_GetTick
 275              		.syntax unified
 276              		.code	16
 277              		.thumb_func
 278              		.fpu softvfp
ARM GAS  /tmp/ccsqfM5S.s 			page 11


 280              	HAL_GetTick:
 281              	.LFB46:
 285:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 286:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 287:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Provides a tick value in millisecond.
 288:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note   This function is declared as __weak  to be overwritten  in case of other 
 289:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 290:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick value
 291:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 292:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 293:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 282              		.loc 1 293 1 is_stmt 1 view -0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 294:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTick;
 287              		.loc 1 294 3 view .LVU43
 288              		.loc 1 294 10 is_stmt 0 view .LVU44
 289 0000 014B     		ldr	r3, .L20
 290 0002 1868     		ldr	r0, [r3]
 295:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 291              		.loc 1 295 1 view .LVU45
 292              		@ sp needed
 293 0004 7047     		bx	lr
 294              	.L21:
 295 0006 C046     		.align	2
 296              	.L20:
 297 0008 00000000 		.word	uwTick
 298              		.cfi_endproc
 299              	.LFE46:
 301              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 302              		.align	1
 303              		.global	HAL_GetTickPrio
 304              		.syntax unified
 305              		.code	16
 306              		.thumb_func
 307              		.fpu softvfp
 309              	HAL_GetTickPrio:
 310              	.LFB47:
 296:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 297:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 298:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function returns a tick priority.
 299:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick priority
 300:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 301:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 302:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 311              		.loc 1 302 1 is_stmt 1 view -0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 0
 314              		@ frame_needed = 0, uses_anonymous_args = 0
 315              		@ link register save eliminated.
 303:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickPrio;
 316              		.loc 1 303 3 view .LVU47
 317              		.loc 1 303 10 is_stmt 0 view .LVU48
 318 0000 014B     		ldr	r3, .L23
 319 0002 1868     		ldr	r0, [r3]
ARM GAS  /tmp/ccsqfM5S.s 			page 12


 304:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 320              		.loc 1 304 1 view .LVU49
 321              		@ sp needed
 322 0004 7047     		bx	lr
 323              	.L24:
 324 0006 C046     		.align	2
 325              	.L23:
 326 0008 00000000 		.word	.LANCHOR1
 327              		.cfi_endproc
 328              	.LFE47:
 330              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 331              		.align	1
 332              		.global	HAL_SetTickFreq
 333              		.syntax unified
 334              		.code	16
 335              		.thumb_func
 336              		.fpu softvfp
 338              	HAL_SetTickFreq:
 339              	.LVL10:
 340              	.LFB48:
 305:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 306:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 307:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Set new tick Freq.
 308:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval status
 309:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 310:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 311:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 341              		.loc 1 311 1 is_stmt 1 view -0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              		.loc 1 311 1 is_stmt 0 view .LVU51
 346 0000 10B5     		push	{r4, lr}
 347              	.LCFI3:
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 4, -8
 350              		.cfi_offset 14, -4
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 351              		.loc 1 312 3 is_stmt 1 view .LVU52
 352              	.LVL11:
 313:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 353              		.loc 1 313 3 view .LVU53
 314:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 315:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 354              		.loc 1 315 3 view .LVU54
 316:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 317:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (uwTickFreq != Freq)
 355              		.loc 1 317 3 view .LVU55
 356              		.loc 1 317 18 is_stmt 0 view .LVU56
 357 0002 084B     		ldr	r3, .L29
 358 0004 1C78     		ldrb	r4, [r3]
 359              		.loc 1 317 6 view .LVU57
 360 0006 8442     		cmp	r4, r0
 361 0008 01D1     		bne	.L28
 312:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 362              		.loc 1 312 21 view .LVU58
 363 000a 0020     		movs	r0, #0
ARM GAS  /tmp/ccsqfM5S.s 			page 13


 364              	.LVL12:
 365              	.L26:
 318:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 319:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Back up uwTickFreq frequency */
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     prevTickFreq = uwTickFreq;
 321:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 322:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     uwTickFreq = Freq;
 324:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 325:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     /* Apply the new tick Freq */
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 327:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     if (status != HAL_OK)
 329:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     {
 330:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       /* Restore previous tick frequency */
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****       uwTickFreq = prevTickFreq;
 332:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     }
 333:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 334:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 335:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return status;
 366              		.loc 1 335 3 is_stmt 1 view .LVU59
 336:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 367              		.loc 1 336 1 is_stmt 0 view .LVU60
 368              		@ sp needed
 369 000c 10BD     		pop	{r4, pc}
 370              	.LVL13:
 371              	.L28:
 320:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 372              		.loc 1 320 5 is_stmt 1 view .LVU61
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 373              		.loc 1 323 5 view .LVU62
 323:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 374              		.loc 1 323 16 is_stmt 0 view .LVU63
 375 000e 1870     		strb	r0, [r3]
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 376              		.loc 1 326 5 is_stmt 1 view .LVU64
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 377              		.loc 1 326 14 is_stmt 0 view .LVU65
 378 0010 054B     		ldr	r3, .L29+4
 379 0012 1868     		ldr	r0, [r3]
 380              	.LVL14:
 326:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 381              		.loc 1 326 14 view .LVU66
 382 0014 FFF7FEFF 		bl	HAL_InitTick
 383              	.LVL15:
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     {
 384              		.loc 1 328 5 is_stmt 1 view .LVU67
 328:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     {
 385              		.loc 1 328 8 is_stmt 0 view .LVU68
 386 0018 0028     		cmp	r0, #0
 387 001a F7D0     		beq	.L26
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     }
 388              		.loc 1 331 7 is_stmt 1 view .LVU69
 331:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     }
 389              		.loc 1 331 18 is_stmt 0 view .LVU70
 390 001c 014B     		ldr	r3, .L29
 391 001e 1C70     		strb	r4, [r3]
ARM GAS  /tmp/ccsqfM5S.s 			page 14


 392 0020 F4E7     		b	.L26
 393              	.L30:
 394 0022 C046     		.align	2
 395              	.L29:
 396 0024 00000000 		.word	.LANCHOR0
 397 0028 00000000 		.word	.LANCHOR1
 398              		.cfi_endproc
 399              	.LFE48:
 401              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 402              		.align	1
 403              		.global	HAL_GetTickFreq
 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 407              		.fpu softvfp
 409              	HAL_GetTickFreq:
 410              	.LFB49:
 337:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 338:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 339:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief return tick frequency.
 340:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval tick period in Hz
 341:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 342:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 343:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 411              		.loc 1 343 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 344:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   return uwTickFreq;
 416              		.loc 1 344 3 view .LVU72
 417              		.loc 1 344 10 is_stmt 0 view .LVU73
 418 0000 014B     		ldr	r3, .L32
 419 0002 1878     		ldrb	r0, [r3]
 345:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 420              		.loc 1 345 1 view .LVU74
 421              		@ sp needed
 422 0004 7047     		bx	lr
 423              	.L33:
 424 0006 C046     		.align	2
 425              	.L32:
 426 0008 00000000 		.word	.LANCHOR0
 427              		.cfi_endproc
 428              	.LFE49:
 430              		.section	.text.HAL_Delay,"ax",%progbits
 431              		.align	1
 432              		.weak	HAL_Delay
 433              		.syntax unified
 434              		.code	16
 435              		.thumb_func
 436              		.fpu softvfp
 438              	HAL_Delay:
 439              	.LVL16:
 440              	.LFB50:
 346:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 347:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 348:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief This function provides accurate delay (in milliseconds) based 
ARM GAS  /tmp/ccsqfM5S.s 			page 15


 349:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *        on variable incremented.
 350:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 351:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 352:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is incremented.
 353:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note ThiS function is declared as __weak to be overwritten in case of other
 354:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 355:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 356:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 357:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 358:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 359:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 441              		.loc 1 359 1 is_stmt 1 view -0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
 445              		.loc 1 359 1 is_stmt 0 view .LVU76
 446 0000 70B5     		push	{r4, r5, r6, lr}
 447              	.LCFI4:
 448              		.cfi_def_cfa_offset 16
 449              		.cfi_offset 4, -16
 450              		.cfi_offset 5, -12
 451              		.cfi_offset 6, -8
 452              		.cfi_offset 14, -4
 453 0002 0400     		movs	r4, r0
 360:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 454              		.loc 1 360 3 is_stmt 1 view .LVU77
 455              		.loc 1 360 24 is_stmt 0 view .LVU78
 456 0004 FFF7FEFF 		bl	HAL_GetTick
 457              	.LVL17:
 458              		.loc 1 360 24 view .LVU79
 459 0008 0500     		movs	r5, r0
 460              	.LVL18:
 361:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   uint32_t wait = Delay;
 461              		.loc 1 361 3 is_stmt 1 view .LVU80
 362:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 363:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 364:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 462              		.loc 1 364 3 view .LVU81
 463              		.loc 1 364 6 is_stmt 0 view .LVU82
 464 000a 631C     		adds	r3, r4, #1
 465 000c 02D0     		beq	.L36
 365:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 366:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 466              		.loc 1 366 5 is_stmt 1 view .LVU83
 467              		.loc 1 366 13 is_stmt 0 view .LVU84
 468 000e 044B     		ldr	r3, .L37
 469 0010 1B78     		ldrb	r3, [r3]
 470              		.loc 1 366 10 view .LVU85
 471 0012 E418     		adds	r4, r4, r3
 472              	.LVL19:
 473              	.L36:
 367:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 368:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 370:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 371:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   }
 474              		.loc 1 371 3 is_stmt 1 discriminator 1 view .LVU86
ARM GAS  /tmp/ccsqfM5S.s 			page 16


 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 475              		.loc 1 369 8 discriminator 1 view .LVU87
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 476              		.loc 1 369 10 is_stmt 0 discriminator 1 view .LVU88
 477 0014 FFF7FEFF 		bl	HAL_GetTick
 478              	.LVL20:
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 479              		.loc 1 369 24 discriminator 1 view .LVU89
 480 0018 401B     		subs	r0, r0, r5
 369:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   {
 481              		.loc 1 369 8 discriminator 1 view .LVU90
 482 001a A042     		cmp	r0, r4
 483 001c FAD3     		bcc	.L36
 372:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 484              		.loc 1 372 1 view .LVU91
 485              		@ sp needed
 486              	.LVL21:
 487              	.LVL22:
 488              		.loc 1 372 1 view .LVU92
 489 001e 70BD     		pop	{r4, r5, r6, pc}
 490              	.L38:
 491              		.align	2
 492              	.L37:
 493 0020 00000000 		.word	.LANCHOR0
 494              		.cfi_endproc
 495              	.LFE50:
 497              		.section	.text.HAL_SuspendTick,"ax",%progbits
 498              		.align	1
 499              		.weak	HAL_SuspendTick
 500              		.syntax unified
 501              		.code	16
 502              		.thumb_func
 503              		.fpu softvfp
 505              	HAL_SuspendTick:
 506              	.LFB51:
 373:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 374:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 375:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Suspend Tick increment.
 376:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 377:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 378:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be disabled and so Tick increment 
 379:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is suspended.
 380:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 381:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 382:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 383:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 384:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_SuspendTick(void)
 385:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 386:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 507              		.loc 1 386 1 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		@ link register save eliminated.
 387:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Disable SysTick Interrupt */
 388:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 512              		.loc 1 388 3 view .LVU94
ARM GAS  /tmp/ccsqfM5S.s 			page 17


 513 0000 024A     		ldr	r2, .L40
 514 0002 1368     		ldr	r3, [r2]
 515 0004 0221     		movs	r1, #2
 516 0006 8B43     		bics	r3, r1
 517 0008 1360     		str	r3, [r2]
 389:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 518              		.loc 1 389 1 is_stmt 0 view .LVU95
 519              		@ sp needed
 520 000a 7047     		bx	lr
 521              	.L41:
 522              		.align	2
 523              	.L40:
 524 000c 10E000E0 		.word	-536813552
 525              		.cfi_endproc
 526              	.LFE51:
 528              		.section	.text.HAL_ResumeTick,"ax",%progbits
 529              		.align	1
 530              		.weak	HAL_ResumeTick
 531              		.syntax unified
 532              		.code	16
 533              		.thumb_func
 534              		.fpu softvfp
 536              	HAL_ResumeTick:
 537              	.LFB52:
 390:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 391:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 392:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief Resume Tick increment.
 393:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 394:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 395:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is called, the the SysTick interrupt will be enabled and so Tick increment 
 396:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       is resumed.
 397:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @note This function is declared as __weak  to be overwritten  in case of other
 398:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   *       implementations in user file.
 399:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 400:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 401:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** __weak void HAL_ResumeTick(void)
 402:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 538              		.loc 1 402 1 is_stmt 1 view -0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 403:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   /* Enable SysTick Interrupt */
 404:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(SysTick->CTRL,SysTick_CTRL_TICKINT_Msk);
 543              		.loc 1 404 3 view .LVU97
 544 0000 024A     		ldr	r2, .L43
 545 0002 1368     		ldr	r3, [r2]
 546 0004 0221     		movs	r1, #2
 547 0006 0B43     		orrs	r3, r1
 548 0008 1360     		str	r3, [r2]
 405:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 549              		.loc 1 405 1 is_stmt 0 view .LVU98
 550              		@ sp needed
 551 000a 7047     		bx	lr
 552              	.L44:
 553              		.align	2
 554              	.L43:
ARM GAS  /tmp/ccsqfM5S.s 			page 18


 555 000c 10E000E0 		.word	-536813552
 556              		.cfi_endproc
 557              	.LFE52:
 559              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 560              		.align	1
 561              		.global	HAL_GetHalVersion
 562              		.syntax unified
 563              		.code	16
 564              		.thumb_func
 565              		.fpu softvfp
 567              	HAL_GetHalVersion:
 568              	.LFB53:
 406:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 407:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 408:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  This method returns the HAL revision
 409:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 410:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 411:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 412:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 569              		.loc 1 412 1 is_stmt 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 413:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****  return __STM32F0xx_HAL_VERSION;
 574              		.loc 1 413 2 view .LVU100
 414:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 575              		.loc 1 414 1 is_stmt 0 view .LVU101
 576 0000 0048     		ldr	r0, .L46
 577              		@ sp needed
 578 0002 7047     		bx	lr
 579              	.L47:
 580              		.align	2
 581              	.L46:
 582 0004 00060701 		.word	17237504
 583              		.cfi_endproc
 584              	.LFE53:
 586              		.section	.text.HAL_GetREVID,"ax",%progbits
 587              		.align	1
 588              		.global	HAL_GetREVID
 589              		.syntax unified
 590              		.code	16
 591              		.thumb_func
 592              		.fpu softvfp
 594              	HAL_GetREVID:
 595              	.LFB54:
 415:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 416:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 417:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device revision identifier.
 418:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device revision identifier
 419:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 420:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetREVID(void)
 421:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 596              		.loc 1 421 1 is_stmt 1 view -0
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 0
 599              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccsqfM5S.s 			page 19


 600              		@ link register save eliminated.
 422:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) >> 16U);
 601              		.loc 1 422 4 view .LVU103
 602              		.loc 1 422 18 is_stmt 0 view .LVU104
 603 0000 014B     		ldr	r3, .L49
 604 0002 1868     		ldr	r0, [r3]
 605              		.loc 1 422 28 view .LVU105
 606 0004 000C     		lsrs	r0, r0, #16
 423:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 607              		.loc 1 423 1 view .LVU106
 608              		@ sp needed
 609 0006 7047     		bx	lr
 610              	.L50:
 611              		.align	2
 612              	.L49:
 613 0008 00580140 		.word	1073829888
 614              		.cfi_endproc
 615              	.LFE54:
 617              		.section	.text.HAL_GetDEVID,"ax",%progbits
 618              		.align	1
 619              		.global	HAL_GetDEVID
 620              		.syntax unified
 621              		.code	16
 622              		.thumb_func
 623              		.fpu softvfp
 625              	HAL_GetDEVID:
 626              	.LFB55:
 424:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 425:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 426:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns the device identifier.
 427:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 428:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 429:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 430:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 627              		.loc 1 430 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 431:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 632              		.loc 1 431 4 view .LVU108
 633              		.loc 1 431 18 is_stmt 0 view .LVU109
 634 0000 024B     		ldr	r3, .L52
 635 0002 1868     		ldr	r0, [r3]
 636              		.loc 1 431 28 view .LVU110
 637 0004 0005     		lsls	r0, r0, #20
 638 0006 000D     		lsrs	r0, r0, #20
 432:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 639              		.loc 1 432 1 view .LVU111
 640              		@ sp needed
 641 0008 7047     		bx	lr
 642              	.L53:
 643 000a C046     		.align	2
 644              	.L52:
 645 000c 00580140 		.word	1073829888
 646              		.cfi_endproc
 647              	.LFE55:
ARM GAS  /tmp/ccsqfM5S.s 			page 20


 649              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 650              		.align	1
 651              		.global	HAL_GetUIDw0
 652              		.syntax unified
 653              		.code	16
 654              		.thumb_func
 655              		.fpu softvfp
 657              	HAL_GetUIDw0:
 658              	.LFB56:
 433:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 434:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 435:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 436:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 437:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 438:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 439:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 659              		.loc 1 439 1 is_stmt 1 view -0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 440:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)UID_BASE)));
 664              		.loc 1 440 4 view .LVU113
 665              		.loc 1 440 11 is_stmt 0 view .LVU114
 666 0000 014B     		ldr	r3, .L55
 667 0002 1868     		ldr	r0, [r3]
 441:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 668              		.loc 1 441 1 view .LVU115
 669              		@ sp needed
 670 0004 7047     		bx	lr
 671              	.L56:
 672 0006 C046     		.align	2
 673              	.L55:
 674 0008 ACF7FF1F 		.word	536868780
 675              		.cfi_endproc
 676              	.LFE56:
 678              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 679              		.align	1
 680              		.global	HAL_GetUIDw1
 681              		.syntax unified
 682              		.code	16
 683              		.thumb_func
 684              		.fpu softvfp
 686              	HAL_GetUIDw1:
 687              	.LFB57:
 442:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 443:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 444:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 445:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 446:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 447:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 448:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 688              		.loc 1 448 1 is_stmt 1 view -0
 689              		.cfi_startproc
 690              		@ args = 0, pretend = 0, frame = 0
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              		@ link register save eliminated.
ARM GAS  /tmp/ccsqfM5S.s 			page 21


 449:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 693              		.loc 1 449 4 view .LVU117
 694              		.loc 1 449 11 is_stmt 0 view .LVU118
 695 0000 014B     		ldr	r3, .L58
 696 0002 1868     		ldr	r0, [r3]
 450:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 697              		.loc 1 450 1 view .LVU119
 698              		@ sp needed
 699 0004 7047     		bx	lr
 700              	.L59:
 701 0006 C046     		.align	2
 702              	.L58:
 703 0008 B0F7FF1F 		.word	536868784
 704              		.cfi_endproc
 705              	.LFE57:
 707              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 708              		.align	1
 709              		.global	HAL_GetUIDw2
 710              		.syntax unified
 711              		.code	16
 712              		.thumb_func
 713              		.fpu softvfp
 715              	HAL_GetUIDw2:
 716              	.LFB58:
 451:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 452:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 453:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 454:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval Device identifier
 455:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 456:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 457:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 717              		.loc 1 457 1 is_stmt 1 view -0
 718              		.cfi_startproc
 719              		@ args = 0, pretend = 0, frame = 0
 720              		@ frame_needed = 0, uses_anonymous_args = 0
 721              		@ link register save eliminated.
 458:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****    return(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 722              		.loc 1 458 4 view .LVU121
 723              		.loc 1 458 11 is_stmt 0 view .LVU122
 724 0000 014B     		ldr	r3, .L61
 725 0002 1868     		ldr	r0, [r3]
 459:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 726              		.loc 1 459 1 view .LVU123
 727              		@ sp needed
 728 0004 7047     		bx	lr
 729              	.L62:
 730 0006 C046     		.align	2
 731              	.L61:
 732 0008 B4F7FF1F 		.word	536868788
 733              		.cfi_endproc
 734              	.LFE58:
 736              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 737              		.align	1
 738              		.global	HAL_DBGMCU_EnableDBGStopMode
 739              		.syntax unified
 740              		.code	16
 741              		.thumb_func
ARM GAS  /tmp/ccsqfM5S.s 			page 22


 742              		.fpu softvfp
 744              	HAL_DBGMCU_EnableDBGStopMode:
 745              	.LFB59:
 460:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 461:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 462:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 463:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 464:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 465:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 466:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 746              		.loc 1 466 1 is_stmt 1 view -0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750              		@ link register save eliminated.
 467:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 751              		.loc 1 467 3 view .LVU125
 752 0000 024A     		ldr	r2, .L64
 753 0002 5368     		ldr	r3, [r2, #4]
 754 0004 0221     		movs	r1, #2
 755 0006 0B43     		orrs	r3, r1
 756 0008 5360     		str	r3, [r2, #4]
 468:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 757              		.loc 1 468 1 is_stmt 0 view .LVU126
 758              		@ sp needed
 759 000a 7047     		bx	lr
 760              	.L65:
 761              		.align	2
 762              	.L64:
 763 000c 00580140 		.word	1073829888
 764              		.cfi_endproc
 765              	.LFE59:
 767              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 768              		.align	1
 769              		.global	HAL_DBGMCU_DisableDBGStopMode
 770              		.syntax unified
 771              		.code	16
 772              		.thumb_func
 773              		.fpu softvfp
 775              	HAL_DBGMCU_DisableDBGStopMode:
 776              	.LFB60:
 469:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 470:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 471:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 472:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 473:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 474:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 475:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 777              		.loc 1 475 1 is_stmt 1 view -0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 476:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 782              		.loc 1 476 3 view .LVU128
 783 0000 024A     		ldr	r2, .L67
 784 0002 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccsqfM5S.s 			page 23


 785 0004 0221     		movs	r1, #2
 786 0006 8B43     		bics	r3, r1
 787 0008 5360     		str	r3, [r2, #4]
 477:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 788              		.loc 1 477 1 is_stmt 0 view .LVU129
 789              		@ sp needed
 790 000a 7047     		bx	lr
 791              	.L68:
 792              		.align	2
 793              	.L67:
 794 000c 00580140 		.word	1073829888
 795              		.cfi_endproc
 796              	.LFE60:
 798              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 799              		.align	1
 800              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 801              		.syntax unified
 802              		.code	16
 803              		.thumb_func
 804              		.fpu softvfp
 806              	HAL_DBGMCU_EnableDBGStandbyMode:
 807              	.LFB61:
 478:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 479:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 480:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 481:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 482:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 483:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 484:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 808              		.loc 1 484 1 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 485:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 813              		.loc 1 485 3 view .LVU131
 814 0000 024A     		ldr	r2, .L70
 815 0002 5368     		ldr	r3, [r2, #4]
 816 0004 0421     		movs	r1, #4
 817 0006 0B43     		orrs	r3, r1
 818 0008 5360     		str	r3, [r2, #4]
 486:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 819              		.loc 1 486 1 is_stmt 0 view .LVU132
 820              		@ sp needed
 821 000a 7047     		bx	lr
 822              	.L71:
 823              		.align	2
 824              	.L70:
 825 000c 00580140 		.word	1073829888
 826              		.cfi_endproc
 827              	.LFE61:
 829              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 830              		.align	1
 831              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 832              		.syntax unified
 833              		.code	16
 834              		.thumb_func
ARM GAS  /tmp/ccsqfM5S.s 			page 24


 835              		.fpu softvfp
 837              	HAL_DBGMCU_DisableDBGStandbyMode:
 838              	.LFB62:
 487:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** 
 488:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** /**
 489:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 490:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   * @retval None
 491:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   */
 492:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 493:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** {
 839              		.loc 1 493 1 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 494:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 844              		.loc 1 494 3 view .LVU134
 845 0000 024A     		ldr	r2, .L73
 846 0002 5368     		ldr	r3, [r2, #4]
 847 0004 0421     		movs	r1, #4
 848 0006 8B43     		bics	r3, r1
 849 0008 5360     		str	r3, [r2, #4]
 495:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal.c **** }
 850              		.loc 1 495 1 is_stmt 0 view .LVU135
 851              		@ sp needed
 852 000a 7047     		bx	lr
 853              	.L74:
 854              		.align	2
 855              	.L73:
 856 000c 00580140 		.word	1073829888
 857              		.cfi_endproc
 858              	.LFE62:
 860              		.global	uwTickFreq
 861              		.global	uwTickPrio
 862              		.comm	uwTick,4,4
 863              		.section	.data.uwTickFreq,"aw"
 864              		.set	.LANCHOR0,. + 0
 867              	uwTickFreq:
 868 0000 01       		.byte	1
 869              		.section	.data.uwTickPrio,"aw"
 870              		.align	2
 871              		.set	.LANCHOR1,. + 0
 874              	uwTickPrio:
 875 0000 04000000 		.word	4
 876              		.text
 877              	.Letext0:
 878              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 879              		.file 3 "Drivers/CMSIS/Include/core_cm0.h"
 880              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 881              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 882              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 883              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 884              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccsqfM5S.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal.c
     /tmp/ccsqfM5S.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccsqfM5S.s:24     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccsqfM5S.s:39     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccsqfM5S.s:46     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccsqfM5S.s:60     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccsqfM5S.s:67     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccsqfM5S.s:105    .text.HAL_DeInit:0000000000000020 $d
     /tmp/ccsqfM5S.s:111    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccsqfM5S.s:118    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccsqfM5S.s:188    .text.HAL_InitTick:0000000000000044 $d
     /tmp/ccsqfM5S.s:195    .text.HAL_Init:0000000000000000 $t
     /tmp/ccsqfM5S.s:202    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccsqfM5S.s:234    .text.HAL_Init:000000000000001c $d
     /tmp/ccsqfM5S.s:239    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccsqfM5S.s:246    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccsqfM5S.s:267    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccsqfM5S.s:273    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccsqfM5S.s:280    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccsqfM5S.s:297    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccsqfM5S.s:302    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccsqfM5S.s:309    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccsqfM5S.s:326    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccsqfM5S.s:331    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccsqfM5S.s:338    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccsqfM5S.s:396    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccsqfM5S.s:402    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccsqfM5S.s:409    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccsqfM5S.s:426    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccsqfM5S.s:431    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccsqfM5S.s:438    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccsqfM5S.s:493    .text.HAL_Delay:0000000000000020 $d
     /tmp/ccsqfM5S.s:498    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccsqfM5S.s:505    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccsqfM5S.s:524    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccsqfM5S.s:529    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccsqfM5S.s:536    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccsqfM5S.s:555    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccsqfM5S.s:560    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccsqfM5S.s:567    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccsqfM5S.s:582    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccsqfM5S.s:587    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccsqfM5S.s:594    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccsqfM5S.s:613    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccsqfM5S.s:618    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccsqfM5S.s:625    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccsqfM5S.s:645    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccsqfM5S.s:650    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccsqfM5S.s:657    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccsqfM5S.s:674    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccsqfM5S.s:679    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccsqfM5S.s:686    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccsqfM5S.s:703    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccsqfM5S.s:708    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccsqfM5S.s:715    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
ARM GAS  /tmp/ccsqfM5S.s 			page 26


     /tmp/ccsqfM5S.s:732    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccsqfM5S.s:737    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccsqfM5S.s:744    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccsqfM5S.s:763    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccsqfM5S.s:768    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccsqfM5S.s:775    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccsqfM5S.s:794    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccsqfM5S.s:799    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccsqfM5S.s:806    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccsqfM5S.s:825    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccsqfM5S.s:830    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccsqfM5S.s:837    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccsqfM5S.s:856    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccsqfM5S.s:867    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccsqfM5S.s:874    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccsqfM5S.s:870    .data.uwTickPrio:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
